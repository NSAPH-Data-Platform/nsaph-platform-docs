Search.setIndex({"docnames": ["adding_data", "common/census/doc/CHANGELOG", "common/census/doc/about", "common/census/doc/cached_data", "common/census/doc/census_yaml", "common/census/doc/contact", "common/census/doc/contributing_checklist", "common/census/doc/env_set_up", "common/census/doc/faq", "common/census/doc/glossary", "common/census/doc/index", "common/census/doc/members/assemble_data", "common/census/doc/members/calculate_density", "common/census/doc/members/census_info", "common/census/doc/members/cli", "common/census/doc/members/do_qc", "common/census/doc/members/exceptions", "common/census/doc/members/interpolate_data", "common/census/doc/members/load_data", "common/census/doc/members/query", "common/census/doc/members/tigerweb", "common/census/doc/members/utils", "common/census/doc/members/write_data", "common/census/doc/modules", "common/census/doc/pipeline/census_assemble", "common/census/doc/pipeline/census_density", "common/census/doc/pipeline/census_ingest", "common/census/doc/pipeline/census_ingest_1", "common/census/doc/pipeline/census_interpolate", "common/census/doc/pipeline/census_qc", "common/census/doc/pipeline/census_workflow", "common/census/doc/pipeline/census_write", "common/census/doc/pipeline/index", "common/census/doc/pipeline/ingest", "common/census/doc/pipeline/vacuum", "common/census/doc/quick_start", "common/census/doc/start_guide", "common/cms/doc/CMSLibrary", "common/cms/doc/DataModellingExtensions", "common/cms/doc/LegacyMedicaid", "common/cms/doc/Medicaid", "common/cms/doc/Medicare", "common/cms/doc/QueringMedicaid", "common/cms/doc/UsingHLL", "common/cms/doc/index", "common/cms/doc/members/aggregates", "common/cms/doc/members/create_schema_config", "common/cms/doc/members/duplicates", "common/cms/doc/members/fts2yaml", "common/cms/doc/members/functions", "common/cms/doc/members/init_cms_db", "common/cms/doc/members/mcr_combine_tables", "common/cms/doc/members/mcr_create_test_data", "common/cms/doc/members/mcr_data_loader", "common/cms/doc/members/mcr_file", "common/cms/doc/members/mcr_fts2csv", "common/cms/doc/members/mcr_fts2db", "common/cms/doc/members/mcr_registry", "common/cms/doc/members/mcr_sas", "common/cms/doc/members/mcr_sas2db", "common/cms/doc/members/mcr_sas2yaml", "common/cms/doc/members/medicaid_yaml", "common/cms/doc/members/medicare_yaml", "common/cms/doc/members/medpar_converter", "common/cms/doc/members/procedures", "common/cms/doc/members/random_selector", "common/cms/doc/members/registry", "common/cms/doc/members/table_population", "common/cms/doc/pipeline/create", "common/cms/doc/pipeline/ensure_resource", "common/cms/doc/pipeline/index", "common/cms/doc/pipeline/ingest", "common/cms/doc/pipeline/initdb", "common/cms/doc/pipeline/load_raw_medicaid", "common/cms/doc/pipeline/load_raw_medicare", "common/cms/doc/pipeline/matview", "common/cms/doc/pipeline/mcr2015", "common/cms/doc/pipeline/medicaid", "common/cms/doc/pipeline/medicare", "common/cms/doc/pipeline/medicare_admissions", "common/cms/doc/pipeline/medicare_beneficiaries", "common/cms/doc/pipeline/medicare_combine_tables", "common/cms/doc/pipeline/parse_fts", "common/cms/doc/pipeline/reset", "common/cms/doc/pipeline/test_medicaid", "common/cms/doc/pipeline/update_medicaid", "common/cms/doc/pipeline/vacuum", "common/cms/doc/pipeline/verify", "common/core-platform/doc/CoreLibrary", "common/core-platform/doc/DataLoader", "common/core-platform/doc/Datamodels", "common/core-platform/doc/ProjectLoader", "common/core-platform/doc/SQLDocumentation", "common/core-platform/doc/SampleQuery", "common/core-platform/doc/TerritorialCodes", "common/core-platform/doc/UserRequests", "common/core-platform/doc/index", "common/core-platform/doc/members/adi", "common/core-platform/doc/members/common", "common/core-platform/doc/members/create", "common/core-platform/doc/members/cwl_collect_outputs", "common/core-platform/doc/members/data_loader", "common/core-platform/doc/members/db", "common/core-platform/doc/members/domain", "common/core-platform/doc/members/example_request.yaml", "common/core-platform/doc/members/executors", "common/core-platform/doc/members/fips", "common/core-platform/doc/members/hdf5_export", "common/core-platform/doc/members/hud_zip2fips", "common/core-platform/doc/members/index_builder", "common/core-platform/doc/members/init_core_db", "common/core-platform/doc/members/inserter", "common/core-platform/doc/members/introspector", "common/core-platform/doc/members/link_gis", "common/core-platform/doc/members/loader", "common/core-platform/doc/members/loader_config", "common/core-platform/doc/members/map_to_foreign_database.ddl", "common/core-platform/doc/members/model", "common/core-platform/doc/members/monitor", "common/core-platform/doc/members/net", "common/core-platform/doc/members/nsaph", "common/core-platform/doc/members/pg_json_dump", "common/core-platform/doc/members/pg_keywords", "common/core-platform/doc/members/project_loader", "common/core-platform/doc/members/query", "common/core-platform/doc/members/rename_indices.sql", "common/core-platform/doc/members/resources", "common/core-platform/doc/members/sample_query", "common/core-platform/doc/members/sas_explorer", "common/core-platform/doc/members/shapes", "common/core-platform/doc/members/ssa2fips", "common/core-platform/doc/members/utils", "common/core-platform/doc/members/utils.sql", "common/core-platform/doc/members/vacuum", "common/core-platform/doc/members/zip2fips", "common/core-platform/doc/members/zip2fips.sql", "common/epa/doc/cwl_tools", "common/epa/doc/index", "common/epa/doc/members/airnow", "common/epa/doc/members/airnow_downloader", "common/epa/doc/members/airnow_ds_def", "common/epa/doc/members/airnow_setup", "common/epa/doc/members/airnow_shapes", "common/epa/doc/members/aqs", "common/epa/doc/members/aqs_ds_def", "common/epa/doc/members/aqs_expand", "common/epa/doc/members/aqs_tools", "common/epa/doc/members/registry", "common/epa/doc/pipeline/airnow", "common/epa/doc/pipeline/airnow_local_shapes", "common/epa/doc/pipeline/aqs", "common/epa/doc/pipeline/download_airnow", "common/epa/doc/pipeline/download_aqs", "common/epa/doc/pipeline/ensure_resource", "common/epa/doc/pipeline/expand_aqs", "common/epa/doc/pipeline/get_shapes", "common/epa/doc/pipeline/index", "common/epa/doc/pipeline/ingest", "common/epa/doc/pipeline/introspect", "common/epa/doc/pipeline/sample_airnow", "common/epa/doc/pipeline/sample_aqs", "common/epa/doc/pipeline/setup_airnow", "common/epa/doc/pipeline/vacuum", "common/epa/doc/python_components", "common/epa/doc/usage", "common/gis/doc/index", "common/gis/doc/members/annotator", "common/gis/doc/members/compute_shape", "common/gis/doc/members/constants", "common/gis/doc/members/downloader", "common/gis/doc/members/geometry", "common/gis/doc/python_components", "common/gridmet/doc/bands", "common/gridmet/doc/classes", "common/gridmet/doc/enums", "common/gridmet/doc/geo", "common/gridmet/doc/gridmet_ds_def", "common/gridmet/doc/gridmet_task", "common/gridmet/doc/gridmet_tools", "common/gridmet/doc/index", "common/gridmet/doc/members/aggregator", "common/gridmet/doc/members/config", "common/gridmet/doc/members/csv2hdf5", "common/gridmet/doc/members/exclude_csv", "common/gridmet/doc/members/geop", "common/gridmet/doc/members/gridmet_tools", "common/gridmet/doc/members/launcher", "common/gridmet/doc/members/registry", "common/gridmet/doc/members/shapes", "common/gridmet/doc/members/task", "common/gridmet/doc/members/test", "common/gridmet/doc/members/wustl_file_processor", "common/gridmet/doc/pipeline/add_data", "common/gridmet/doc/pipeline/download", "common/gridmet/doc/pipeline/get_shapes", "common/gridmet/doc/pipeline/gridmet", "common/gridmet/doc/pipeline/gridmet_1", "common/gridmet/doc/pipeline/gridmet_2", "common/gridmet/doc/pipeline/gridmet_dwnl_only", "common/gridmet/doc/pipeline/gridmet_dwnl_only_1", "common/gridmet/doc/pipeline/gridmet_humidity", "common/gridmet/doc/pipeline/gridmet_humidity_1", "common/gridmet/doc/pipeline/gridmet_humidity_2", "common/gridmet/doc/pipeline/gridmet_incremental", "common/gridmet/doc/pipeline/gridmet_incremental_1", "common/gridmet/doc/pipeline/gridmet_local_shapes", "common/gridmet/doc/pipeline/gridmet_local_shapes_1", "common/gridmet/doc/pipeline/index", "common/gridmet/doc/pipeline/ingest", "common/gridmet/doc/pipeline/process", "common/gridmet/doc/pipeline/rearrange", "common/gridmet/doc/pipeline/registry", "common/gridmet/doc/pipeline/reset", "common/gridmet/doc/pipeline/vacuum", "common/gridmet/doc/pipeline/wustl", "common/gridmet/doc/pipeline/wustl_aggregate", "common/gridmet/doc/pipeline/wustl_one_file", "common/gridmet/doc/pipeline/wustl_one_year", "common/gridmet/doc/python_components", "common/gridmet/doc/shapes", "common/gridmet/doc/strategy", "common/platform-deployment/doc/Configuration", "common/platform-deployment/doc/Glossary", "common/platform-deployment/doc/Guide", "common/platform-deployment/doc/Howto", "common/platform-deployment/doc/Introduction", "common/platform-deployment/doc/Testing", "common/platform-deployment/doc/UsefulCommands", "common/platform-deployment/doc/index", "common/platform-deployment/doc/members/conda_default.yml", "common/platform-deployment/doc/members/docker-compose.yaml", "common/platform-deployment/doc/members/env_example_nopostgres_conda", "common/platform-deployment/doc/members/env_example_nopostgres_noconda", "common/platform-deployment/doc/members/env_example_postgres_conda", "common/platform-deployment/doc/members/env_example_postgres_noconda", "common/platform-deployment/doc/members/install_conda.sh", "common/platform-deployment/doc/members/install_projects.sh", "common/platform-deployment/doc/members/r-github-packages.txt", "common/platform-deployment/doc/members/requirements.txt", "common/utils/doc/index", "common/utils/doc/members/DataSet", "common/utils/doc/members/cli", "common/utils/doc/members/collector", "common/utils/doc/members/conf", "common/utils/doc/members/context", "common/utils/doc/members/copy_section", "common/utils/doc/members/cwl2md", "common/utils/doc/members/fwf", "common/utils/doc/members/interface", "common/utils/doc/members/interpolate_ma", "common/utils/doc/members/io_utils", "common/utils/doc/members/md_creator", "common/utils/doc/members/pyfst", "common/utils/doc/members/setup", "common/utils/doc/members/test_cli_context", "common/utils/doc/members/test_interpolation", "common/utils/doc/members/test_qc", "common/utils/doc/members/tester", "docindices", "domains", "fts", "glossary", "guts", "home", "index", "packages", "pipelines", "rationale"], "filenames": ["adding_data.md", "common/census/doc/CHANGELOG.md", "common/census/doc/about.rst", "common/census/doc/cached_data.rst", "common/census/doc/census_yaml.rst", "common/census/doc/contact.rst", "common/census/doc/contributing_checklist.rst", "common/census/doc/env_set_up.rst", "common/census/doc/faq.rst", "common/census/doc/glossary.rst", "common/census/doc/index.rst", "common/census/doc/members/assemble_data.rst", "common/census/doc/members/calculate_density.rst", "common/census/doc/members/census_info.rst", "common/census/doc/members/cli.rst", "common/census/doc/members/do_qc.rst", "common/census/doc/members/exceptions.rst", "common/census/doc/members/interpolate_data.rst", "common/census/doc/members/load_data.rst", "common/census/doc/members/query.rst", "common/census/doc/members/tigerweb.rst", "common/census/doc/members/utils.rst", "common/census/doc/members/write_data.rst", "common/census/doc/modules.rst", "common/census/doc/pipeline/census_assemble.md", "common/census/doc/pipeline/census_density.md", "common/census/doc/pipeline/census_ingest.md", "common/census/doc/pipeline/census_ingest_1.md", "common/census/doc/pipeline/census_interpolate.md", "common/census/doc/pipeline/census_qc.md", "common/census/doc/pipeline/census_workflow.md", "common/census/doc/pipeline/census_write.md", "common/census/doc/pipeline/index.md", "common/census/doc/pipeline/ingest.md", "common/census/doc/pipeline/vacuum.md", "common/census/doc/quick_start.rst", "common/census/doc/start_guide.rst", "common/cms/doc/CMSLibrary.md", "common/cms/doc/DataModellingExtensions.md", "common/cms/doc/LegacyMedicaid.md", "common/cms/doc/Medicaid.md", "common/cms/doc/Medicare.md", "common/cms/doc/QueringMedicaid.md", "common/cms/doc/UsingHLL.md", "common/cms/doc/index.md", "common/cms/doc/members/aggregates.rst", "common/cms/doc/members/create_schema_config.rst", "common/cms/doc/members/duplicates.rst", "common/cms/doc/members/fts2yaml.rst", "common/cms/doc/members/functions.md", "common/cms/doc/members/init_cms_db.rst", "common/cms/doc/members/mcr_combine_tables.rst", "common/cms/doc/members/mcr_create_test_data.rst", "common/cms/doc/members/mcr_data_loader.rst", "common/cms/doc/members/mcr_file.rst", "common/cms/doc/members/mcr_fts2csv.rst", "common/cms/doc/members/mcr_fts2db.rst", "common/cms/doc/members/mcr_registry.rst", "common/cms/doc/members/mcr_sas.rst", "common/cms/doc/members/mcr_sas2db.rst", "common/cms/doc/members/mcr_sas2yaml.rst", "common/cms/doc/members/medicaid_yaml.md", "common/cms/doc/members/medicare_yaml.md", "common/cms/doc/members/medpar_converter.rst", "common/cms/doc/members/procedures.md", "common/cms/doc/members/random_selector.rst", "common/cms/doc/members/registry.rst", "common/cms/doc/members/table_population.rst", "common/cms/doc/pipeline/create.md", "common/cms/doc/pipeline/ensure_resource.md", "common/cms/doc/pipeline/index.md", "common/cms/doc/pipeline/ingest.md", "common/cms/doc/pipeline/initdb.md", "common/cms/doc/pipeline/load_raw_medicaid.md", "common/cms/doc/pipeline/load_raw_medicare.md", "common/cms/doc/pipeline/matview.md", "common/cms/doc/pipeline/mcr2015.md", "common/cms/doc/pipeline/medicaid.md", "common/cms/doc/pipeline/medicare.md", "common/cms/doc/pipeline/medicare_admissions.md", "common/cms/doc/pipeline/medicare_beneficiaries.md", "common/cms/doc/pipeline/medicare_combine_tables.md", "common/cms/doc/pipeline/parse_fts.md", "common/cms/doc/pipeline/reset.md", "common/cms/doc/pipeline/test_medicaid.md", "common/cms/doc/pipeline/update_medicaid.md", "common/cms/doc/pipeline/vacuum.md", "common/cms/doc/pipeline/verify.md", "common/core-platform/doc/CoreLibrary.md", "common/core-platform/doc/DataLoader.md", "common/core-platform/doc/Datamodels.md", "common/core-platform/doc/ProjectLoader.md", "common/core-platform/doc/SQLDocumentation.md", "common/core-platform/doc/SampleQuery.md", "common/core-platform/doc/TerritorialCodes.md", "common/core-platform/doc/UserRequests.md", "common/core-platform/doc/index.md", "common/core-platform/doc/members/adi.rst", "common/core-platform/doc/members/common.rst", "common/core-platform/doc/members/create.rst", "common/core-platform/doc/members/cwl_collect_outputs.rst", "common/core-platform/doc/members/data_loader.rst", "common/core-platform/doc/members/db.rst", "common/core-platform/doc/members/domain.rst", "common/core-platform/doc/members/example_request.yaml.rst", "common/core-platform/doc/members/executors.rst", "common/core-platform/doc/members/fips.rst", "common/core-platform/doc/members/hdf5_export.rst", "common/core-platform/doc/members/hud_zip2fips.rst", "common/core-platform/doc/members/index_builder.rst", "common/core-platform/doc/members/init_core_db.rst", "common/core-platform/doc/members/inserter.rst", "common/core-platform/doc/members/introspector.rst", "common/core-platform/doc/members/link_gis.rst", "common/core-platform/doc/members/loader.rst", "common/core-platform/doc/members/loader_config.rst", "common/core-platform/doc/members/map_to_foreign_database.ddl.md", "common/core-platform/doc/members/model.rst", "common/core-platform/doc/members/monitor.rst", "common/core-platform/doc/members/net.rst", "common/core-platform/doc/members/nsaph.rst", "common/core-platform/doc/members/pg_json_dump.rst", "common/core-platform/doc/members/pg_keywords.rst", "common/core-platform/doc/members/project_loader.rst", "common/core-platform/doc/members/query.rst", "common/core-platform/doc/members/rename_indices.sql.md", "common/core-platform/doc/members/resources.rst", "common/core-platform/doc/members/sample_query.rst", "common/core-platform/doc/members/sas_explorer.rst", "common/core-platform/doc/members/shapes.rst", "common/core-platform/doc/members/ssa2fips.rst", "common/core-platform/doc/members/utils.rst", "common/core-platform/doc/members/utils.sql.md", "common/core-platform/doc/members/vacuum.rst", "common/core-platform/doc/members/zip2fips.rst", "common/core-platform/doc/members/zip2fips.sql.md", "common/epa/doc/cwl_tools.md", "common/epa/doc/index.md", "common/epa/doc/members/airnow.rst", "common/epa/doc/members/airnow_downloader.rst", "common/epa/doc/members/airnow_ds_def.rst", "common/epa/doc/members/airnow_setup.rst", "common/epa/doc/members/airnow_shapes.rst", "common/epa/doc/members/aqs.rst", "common/epa/doc/members/aqs_ds_def.rst", "common/epa/doc/members/aqs_expand.rst", "common/epa/doc/members/aqs_tools.rst", "common/epa/doc/members/registry.rst", "common/epa/doc/pipeline/airnow.md", "common/epa/doc/pipeline/airnow_local_shapes.md", "common/epa/doc/pipeline/aqs.md", "common/epa/doc/pipeline/download_airnow.md", "common/epa/doc/pipeline/download_aqs.md", "common/epa/doc/pipeline/ensure_resource.md", "common/epa/doc/pipeline/expand_aqs.md", "common/epa/doc/pipeline/get_shapes.md", "common/epa/doc/pipeline/index.md", "common/epa/doc/pipeline/ingest.md", "common/epa/doc/pipeline/introspect.md", "common/epa/doc/pipeline/sample_airnow.md", "common/epa/doc/pipeline/sample_aqs.md", "common/epa/doc/pipeline/setup_airnow.md", "common/epa/doc/pipeline/vacuum.md", "common/epa/doc/python_components.md", "common/epa/doc/usage.md", "common/gis/doc/index.md", "common/gis/doc/members/annotator.rst", "common/gis/doc/members/compute_shape.rst", "common/gis/doc/members/constants.rst", "common/gis/doc/members/downloader.rst", "common/gis/doc/members/geometry.rst", "common/gis/doc/python_components.md", "common/gridmet/doc/bands.rst", "common/gridmet/doc/classes.rst", "common/gridmet/doc/enums.rst", "common/gridmet/doc/geo.rst", "common/gridmet/doc/gridmet_ds_def.rst", "common/gridmet/doc/gridmet_task.rst", "common/gridmet/doc/gridmet_tools.rst", "common/gridmet/doc/index.md", "common/gridmet/doc/members/aggregator.rst", "common/gridmet/doc/members/config.rst", "common/gridmet/doc/members/csv2hdf5.rst", "common/gridmet/doc/members/exclude_csv.rst", "common/gridmet/doc/members/geop.rst", "common/gridmet/doc/members/gridmet_tools.rst", "common/gridmet/doc/members/launcher.rst", "common/gridmet/doc/members/registry.rst", "common/gridmet/doc/members/shapes.rst", "common/gridmet/doc/members/task.rst", "common/gridmet/doc/members/test.rst", "common/gridmet/doc/members/wustl_file_processor.rst", "common/gridmet/doc/pipeline/add_data.md", "common/gridmet/doc/pipeline/download.md", "common/gridmet/doc/pipeline/get_shapes.md", "common/gridmet/doc/pipeline/gridmet.md", "common/gridmet/doc/pipeline/gridmet_1.md", "common/gridmet/doc/pipeline/gridmet_2.md", "common/gridmet/doc/pipeline/gridmet_dwnl_only.md", "common/gridmet/doc/pipeline/gridmet_dwnl_only_1.md", "common/gridmet/doc/pipeline/gridmet_humidity.md", "common/gridmet/doc/pipeline/gridmet_humidity_1.md", "common/gridmet/doc/pipeline/gridmet_humidity_2.md", "common/gridmet/doc/pipeline/gridmet_incremental.md", "common/gridmet/doc/pipeline/gridmet_incremental_1.md", "common/gridmet/doc/pipeline/gridmet_local_shapes.md", "common/gridmet/doc/pipeline/gridmet_local_shapes_1.md", "common/gridmet/doc/pipeline/index.md", "common/gridmet/doc/pipeline/ingest.md", "common/gridmet/doc/pipeline/process.md", "common/gridmet/doc/pipeline/rearrange.md", "common/gridmet/doc/pipeline/registry.md", "common/gridmet/doc/pipeline/reset.md", "common/gridmet/doc/pipeline/vacuum.md", "common/gridmet/doc/pipeline/wustl.md", "common/gridmet/doc/pipeline/wustl_aggregate.md", "common/gridmet/doc/pipeline/wustl_one_file.md", "common/gridmet/doc/pipeline/wustl_one_year.md", "common/gridmet/doc/python_components.md", "common/gridmet/doc/shapes.rst", "common/gridmet/doc/strategy.rst", "common/platform-deployment/doc/Configuration.md", "common/platform-deployment/doc/Glossary.md", "common/platform-deployment/doc/Guide.md", "common/platform-deployment/doc/Howto.md", "common/platform-deployment/doc/Introduction.md", "common/platform-deployment/doc/Testing.md", "common/platform-deployment/doc/UsefulCommands.md", "common/platform-deployment/doc/index.md", "common/platform-deployment/doc/members/conda_default.yml.md", "common/platform-deployment/doc/members/docker-compose.yaml.md", "common/platform-deployment/doc/members/env_example_nopostgres_conda.md", "common/platform-deployment/doc/members/env_example_nopostgres_noconda.md", "common/platform-deployment/doc/members/env_example_postgres_conda.md", "common/platform-deployment/doc/members/env_example_postgres_noconda.md", "common/platform-deployment/doc/members/install_conda.sh.md", "common/platform-deployment/doc/members/install_projects.sh.md", "common/platform-deployment/doc/members/r-github-packages.txt.md", "common/platform-deployment/doc/members/requirements.txt.md", "common/utils/doc/index.md", "common/utils/doc/members/DataSet.rst", "common/utils/doc/members/cli.rst", "common/utils/doc/members/collector.rst", "common/utils/doc/members/conf.rst", "common/utils/doc/members/context.rst", "common/utils/doc/members/copy_section.rst", "common/utils/doc/members/cwl2md.rst", "common/utils/doc/members/fwf.rst", "common/utils/doc/members/interface.rst", "common/utils/doc/members/interpolate_ma.rst", "common/utils/doc/members/io_utils.rst", "common/utils/doc/members/md_creator.rst", "common/utils/doc/members/pyfst.rst", "common/utils/doc/members/setup.rst", "common/utils/doc/members/test_cli_context.rst", "common/utils/doc/members/test_interpolation.rst", "common/utils/doc/members/test_qc.rst", "common/utils/doc/members/tester.rst", "docindices.md", "domains.md", "fts.md", "glossary.md", "guts.md", "home.md", "index.md", "packages.md", "pipelines.md", "rationale.md"], "titles": ["How to add data to the database", "Changelog", "About", "Stored Data Files", "Census Variable File Structure", "Contant", "Contributing Checklist", "Setting Up Environment", "Frequently Asked Questions", "Glossary", "NSAPH Census Pipelines", "The assemble_data Module", "The calculate_density Module", "The census_info Module", "The cli Module", "The do_qc Module", "The exceptions Module", "The interpolate_data Module", "The load_data Module", "The query Module", "The tigerweb Module", "The utils Module", "The write_data Module", "Modules", "census_assemble.cwl", "census_density.cwl", "census_ingest.cwl", "Sub-workflow <em>store</em> from census_ingest.cwl", "census_interpolate.cwl", "census_qc.cwl", "census_workflow.cwl", "census_write.cwl", "Index Builder", "Uploader of the gridMET Data to the database", "Table tuner tool (running VACUUM)", "Quick Start", "Working with the <code class=\"docutils literal notranslate\"><span class=\"pre\">census</span></code> Package", "Python package to manipulate health (CMS) data", "Extensions used for creating federated view of different years", "Importing Medicaid Data Processed by the Legacy Pipeline", "Handling Medicaid data", "Medicare Files Handling", "Querying Medicaid Data", "Using HyperLogLog (HLL) hashes for count approximations", "Health Data", "The aggregates Module", "The create_schema_config Module", "The duplicates Module", "Parser for FTS files that accompany CMS data from ResDac", "Functions", "The init_cms_db Module", "The mcr_combine_tables Module", "The mcr_create_test_data Module", "The mcr_data_loader Module", "The mcr_file Module", "The mcr_fts2csv Module", "The mcr_fts2db Module", "The mcr_registry Module", "The mcr_sas Module", "The mcr_sas2db Module", "The mcr_sas2yaml Module", "Medicaid.yaml", "Medicare.yaml", "The medpar_converter Module", "Procedures", "The random_selector Module", "The registry Module", "The table_population Module", "Table/View Initializer", "Resource Loader", "Index Builder", "Workflow to load Medicaid data from files", "Database initializer", "Patient Summary Loader", "Loader for raw CMS Medicare data", "Materialized View Creator", "Materialized View Creator", "Full Medicaid Processing Pipeline", "Medicare data ingestion and processing pipeline", "Process Medicare inpatient admissions data inside the database", "Medicare Beneficiaries data in-database processing pipeline", "Medicare raw data federation tool", "FTS Parser", "Generic Table (View/Materialized View) Initializer", "Full Medicaid Processing Pipeline", "Full Medicaid Processing Pipeline", "Table tuner tool (running VACUUM)", "Index Builder", "Python Core Platform Components", "NSAPH Data Loader", "Data Modelling for NSAPH Data Platform", "Project (Directory) Loading Utility", "SQL Documentation", "How to query the database", "Mapping between different territorial codes", "Preliminary Considerations for Handling User Requests", "NSAPH Core Data Platform", "The adi Module", "The common Module", "The create Module", "The cwl_collect_outputs Module", "The data_loader Module", "Database connection API", "The Domain Class", "Example request", "The executors Module", "The fips Module", "The hdf5_export Module", "DDL for HUD ZIP to FIPS mappings", "The index_builder Module", "The init_core_db Module", "The inserter Module", "The introspector Module", "The link_gis Module", "Data loader base abstract API", "The loader_config Module", "Set of SQL statements to map tables from another database", "The model Module", "The monitor Module", "The net Module", "NSAPH Core Package-wide utilities", "The pg_json_dump Module", "The pg_keywords Module", "The project_loader Module", "The query Module", "A procedure to rename indices", "The resources Module", "Sample query", "The sas_explorer Module", "The shapes Module", "The ssa2fips Module", "The utils Module", "Utility functions", "The vacuum Module", "The zip2fips Module", "SQL to create direct ZIP =&gt; FIPS lookup table and helper functions", "CWL Tools and Common Workflows", "NSAPH EPA Package Description", "Main Class for EPA AirNow Package", "Downloader for AirNow", "Configuration Options for EPA AirNow Package", "The airnow_setup Module", "The airnow_shapes Module", "Main Class for EPA AQS Package", "Configuration Options for EPA AQS Package", "The aqs_expand Module", "Internal scripts used for download tasks", "The registry Module", "Full EPA AirNow Processing Pipeline (including downloading shapefiles)", "Full AirNowProcessing Pipeline (with shapefiles on local file system)", "Full EPA AQS Processing Pipeline", "Downloader of AirNow Data", "Downloader of AQS Data", "Resource Loader", "Downloader of AQS Data", "Tool retrieving county or zip shapefiles from Census website", "Index Builder", "Uploader of the EPA Data to the database", "Introspector for downloaded data file", "Sample arguments to AirNow pipeline", "Sample arguments to AQS pipeline", "Prepare environment for AirNow", "Table tuner tool (running VACUUM)", "Python Components", "EPA Toolkit Usage", "NSAPH GIS python package", "GIS Annotator", "Observation values aggregation over shapes", "GIS Related Enums", "Shapefiles downloader", "A point in a raster class", "GIS Python Modules", "Bands (Gridmet Variables)", "Main Classes", "Parameters (Enums)", "Types of Geography", "Configuration Object", "Task Object", "Tools and Utilities", "Gridmet Computational Utilities", "The aggregator Module", "The config Module", "The csv2hdf5 Module", "The exclude_csv Module", "The geop Module", "The gridmet_tools Module", "The launcher Module", "The registry Module", "The shapes Module", "The task Module", "The test Module", "The wustl_file_processor Module", "Uploader of the gridMET Data to the database", "Downloader of gridMET Data", "Downloader of AirNow Data", "gridMET Pipeline", "Sub-workflow <em>init_tables</em> from gridmet.cwl", "Sub-workflow <em>process</em> from gridmet.cwl", "gridMET Pipeline", "Sub-workflow <em>process</em> from gridmet_dwnl_only.cwl", "gridMET Pipeline", "Sub-workflow <em>init_tables</em> from gridmet_humidity.cwl", "Sub-workflow <em>process</em> from gridmet_humidity.cwl", "gridMET Pipeline", "Sub-workflow <em>process</em> from gridmet_incremental.cwl", "gridMET Pipeline", "Sub-workflow <em>process</em> from gridmet_local_shapes.cwl", "Index Builder", "Uploader of the gridMET Data to the database", "Downloader of gridMET Data", "File rearranger", "Model YAML Writer", "Generic Table (View/Materialized View) Initializer", "Table tuner tool (running VACUUM)", "Pipeline to ingest Pollution downloaded from WashU Box", "Aggregates data in NetCDF file over given geographies", "Workflow to aggregate and ingest one file in NetCDF format", "Workflow to aggregate and ingest NetCDF files for one year", "gridMET Python Modules", "Types of Shape", "Rasterization Strategy", "Configuration Guide", "Airflow/CWL Glossary and FAQ", "CWL-Airflow Deployment Guide", "Howto", "Introduction to Deployment of NSAPH Data Platform", "Testing the installation", "Some useful commands", "NSAPH Data Platform Deployment", "Default Conda config", "Docker-compose file", "Environment example with conda and existing PostgreSQL", "Environment example without conda and with existing PostgreSQL", "Environment example with conda and with new container with PostgreSQL", "Environment example without conda and with new container with PostgreSQL", "Install Conda script", "Install projects script", "R packages", "List of Python requirements", "NSAPH Utils python package", "The DataSet Module", "The cli Module", "The collector Module", "The conf Module", "The context Module", "The copy_section Module", "The cwl2md Module", "The fwf Module", "The interface Module", "The interpolate_ma Module", "The io_utils Module", "The md_creator Module", "The pyfst Module", "The setup Module", "The test_cli_context Module", "The test_interpolation Module", "The test_qc Module", "The tester Module", "Indices", "Data Domains", "File Transfer Summary", "Terms and acronyms used in this documentation", "Data Platform Internals", "NSAPH Data Platform: Documentation Home", "NSAPH Data Platform", "Python Packages Included in the Platform", "Data Processing Pipelines", "Why Data Platform and what does it do?"], "terms": {"There": [0, 35, 40, 41, 90, 221, 239], "mani": [0, 6, 40, 90, 221, 225, 263, 267], "wai": [0, 11, 23, 35, 78, 95, 96, 181, 221, 222, 225, 247, 267], "we": [0, 6, 11, 13, 19, 23, 35, 36, 40, 41, 42, 43, 44, 47, 58, 78, 79, 80, 82, 90, 91, 93, 94, 95, 96, 97, 137, 176, 179, 181, 194, 195, 200, 203, 214, 221, 222, 225, 239, 249, 263, 264], "review": [0, 6, 35, 239], "follow": [0, 4, 7, 35, 36, 38, 40, 41, 42, 44, 90, 91, 93, 96, 137, 140, 144, 164, 176, 179, 181, 186, 221, 224, 226, 227, 228, 244, 263], "option": [0, 4, 11, 12, 13, 14, 15, 17, 19, 22, 23, 37, 45, 46, 48, 51, 53, 54, 62, 63, 66, 67, 88, 89, 90, 97, 98, 99, 101, 103, 105, 109, 112, 113, 114, 115, 116, 117, 118, 123, 130, 133, 137, 138, 139, 143, 145, 146, 147, 163, 164, 166, 167, 169, 170, 176, 179, 180, 181, 185, 186, 191, 221, 223, 224, 225, 228, 231, 232, 233, 234, 244, 245, 250, 252, 254, 263, 267], "its": [0, 36, 40, 48, 90, 96, 105, 140, 144, 170, 176, 178, 181, 185, 223, 224, 244, 263], "own": [0, 90, 221, 224, 263, 267], "pipelin": [0, 44, 56, 95, 96, 136, 137, 141, 176, 177, 181, 186, 189, 225, 239, 264, 267], "softwar": [0, 49, 64, 95, 116, 125, 127, 132, 135, 177, 189, 222, 230, 235, 236, 261], "tool": [0, 6, 24, 25, 28, 29, 31, 32, 33, 38, 41, 44, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 87, 88, 91, 100, 101, 114, 115, 123, 128, 137, 143, 146, 151, 152, 153, 154, 156, 157, 158, 161, 192, 193, 194, 207, 208, 209, 210, 211, 212, 215, 221, 222, 223, 225, 226, 260, 261, 263, 264, 265], "written": [0, 36, 37, 60, 90, 120, 146, 221, 250, 263, 267], "program": [0, 9, 42, 62, 91, 93, 225, 226, 264], "languag": [0, 49, 64, 93, 96, 116, 125, 127, 132, 135, 222, 225, 230, 235, 236, 261, 263, 264], "like": [0, 4, 36, 37, 42, 90, 91, 93, 96, 123, 146, 221, 250, 252], "python": [0, 10, 14, 23, 39, 40, 41, 42, 89, 90, 91, 103, 105, 106, 118, 137, 138, 142, 143, 146, 164, 229, 235, 249, 258, 262, 263, 264, 267], "java": [0, 263, 267], "r": [0, 39, 47, 94, 96, 107, 146, 178, 185, 225, 227, 228, 235, 236, 239, 249, 250, 261, 263, 267], "pl": [0, 67, 96, 263, 267], "pgsql": [0, 67, 96, 263, 267], "etc": [0, 40, 42, 88, 90, 91, 95, 123, 140, 144, 170, 177, 178, 179, 185, 186, 189, 235, 239], "remot": [0, 235], "sourc": [0, 1, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 40, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 210, 219, 220, 221, 230, 235, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 261, 263, 267], "bulk": 0, "csv": [0, 11, 23, 31, 33, 36, 37, 39, 40, 48, 52, 54, 55, 63, 65, 88, 89, 90, 91, 96, 101, 115, 123, 131, 139, 146, 176, 177, 179, 181, 189, 192, 208, 209, 215, 247, 250, 252, 260, 261], "support": [0, 14, 20, 23, 35, 42, 96, 97, 102, 109, 221, 247, 263, 264], "format": [0, 4, 20, 23, 35, 37, 40, 41, 44, 51, 55, 58, 60, 77, 81, 88, 91, 95, 96, 101, 104, 107, 115, 125, 127, 132, 139, 140, 143, 144, 146, 148, 149, 151, 155, 176, 177, 179, 186, 189, 214, 244, 250, 260, 261, 263], "local": [0, 6, 90, 93, 136, 137, 143, 236, 267], "lightweight": [0, 7], "For": [0, 4, 6, 8, 13, 19, 23, 35, 36, 38, 40, 41, 47, 58, 78, 90, 91, 96, 123, 136, 137, 140, 144, 146, 164, 176, 179, 186, 188, 221, 224, 228, 244, 263], "i": [0, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 54, 60, 62, 64, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 82, 89, 90, 91, 93, 94, 95, 96, 98, 101, 103, 105, 109, 115, 116, 120, 123, 124, 125, 127, 131, 132, 135, 137, 138, 139, 140, 142, 143, 144, 146, 147, 161, 167, 168, 170, 176, 177, 178, 185, 186, 189, 191, 220, 221, 224, 225, 226, 228, 230, 235, 236, 239, 244, 247, 248, 249, 250, 254, 261, 264, 267], "choic": 0, "between": [0, 8, 40, 41, 42, 72, 77, 88, 90, 96, 130, 135, 150, 170, 181, 221, 263], "manual": [0, 7, 91, 221], "requir": [0, 4, 6, 7, 11, 19, 20, 23, 42, 44, 48, 49, 54, 56, 64, 69, 90, 95, 96, 103, 116, 125, 127, 132, 135, 140, 144, 146, 148, 149, 150, 151, 153, 155, 164, 176, 177, 179, 186, 189, 193, 194, 195, 198, 200, 203, 205, 209, 214, 217, 222, 223, 224, 225, 226, 228, 230, 235, 236, 244, 263, 267], "convers": [0, 48, 54, 62], "transform": [0, 38, 62, 81, 146, 167, 168, 178, 185, 220, 250, 261], "infer": [0, 41, 88, 94, 96, 101, 112, 115, 148, 149, 150], "structur": [0, 10, 11, 23, 35, 36, 37, 41, 53, 90, 91, 123, 131, 139, 179, 186, 239, 260, 261], "base": [0, 7, 11, 23, 35, 36, 40, 41, 42, 48, 79, 88, 90, 91, 95, 98, 101, 123, 124, 131, 146, 224, 228, 235, 239, 250, 263, 267], "sampl": [0, 4, 9, 35, 42, 93, 96, 136, 224, 263], "discuss": [0, 40, 41, 263], "nsaph": [0, 32, 33, 34, 40, 44, 47, 68, 69, 70, 73, 77, 83, 86, 91, 99, 101, 102, 115, 116, 127, 130, 153, 156, 157, 159, 160, 162, 178, 179, 192, 207, 208, 212, 213, 260, 262], "platform": [0, 39, 93, 101, 165, 222, 239, 260], "exampl": [0, 6, 9, 10, 35, 36, 38, 40, 41, 78, 90, 91, 93, 95, 102, 105, 131, 140, 144, 146, 148, 150, 164, 176, 181, 186, 224, 227, 228, 244, 250], "medicar": [0, 37, 40, 46, 47, 51, 52, 53, 55, 56, 57, 58, 61, 77, 130, 260, 261, 263, 264, 266], "medicaid": [0, 37, 41, 45, 46, 47, 49, 64, 68, 75, 90, 260, 261, 263, 264, 266], "actual": [0, 40, 51, 54, 91, 95, 96, 179, 186, 221, 263, 267], "defin": [0, 4, 11, 12, 14, 15, 17, 20, 22, 23, 38, 40, 41, 44, 46, 51, 67, 68, 73, 90, 93, 95, 96, 98, 101, 102, 109, 115, 140, 143, 144, 147, 176, 177, 179, 181, 186, 189, 221, 222, 226, 244, 249, 254, 267], "respect": 0, "yaml": [0, 4, 11, 23, 35, 36, 37, 40, 44, 46, 51, 57, 60, 66, 82, 88, 89, 90, 91, 98, 101, 107, 115, 124, 131, 139, 147, 179, 187, 195, 200, 203, 205, 221, 224, 226, 228, 235], "To": [0, 4, 13, 23, 40, 41, 42, 47, 90, 91, 93, 139, 221, 224, 225, 226, 247, 267], "analyz": [0, 44, 47, 117, 133], "gener": [0, 6, 7, 36, 37, 41, 42, 44, 51, 53, 54, 56, 60, 61, 62, 88, 91, 95, 96, 98, 101, 103, 124, 131, 140, 143, 144, 146, 158, 176, 179, 225, 228, 239, 244, 248, 249, 257, 258, 260, 264, 265], "correspond": [0, 36, 38, 41, 48, 56, 96, 177, 178, 179, 181, 185, 186, 189, 221], "one": [0, 6, 7, 11, 12, 14, 15, 17, 22, 23, 35, 36, 38, 40, 41, 42, 44, 46, 51, 54, 67, 79, 80, 82, 90, 91, 96, 98, 101, 109, 114, 115, 139, 140, 144, 147, 164, 176, 179, 181, 186, 195, 200, 214, 221, 225, 230, 235, 236, 244, 247, 248, 249, 254, 267], "can": [0, 4, 6, 7, 8, 11, 13, 14, 17, 23, 35, 36, 38, 39, 40, 41, 42, 44, 48, 62, 66, 88, 89, 90, 91, 93, 94, 95, 96, 101, 105, 106, 115, 120, 123, 131, 140, 144, 146, 147, 176, 177, 179, 181, 186, 189, 222, 224, 226, 228, 239, 244, 247, 254, 257, 263, 264], "us": [0, 1, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 22, 23, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 54, 56, 59, 62, 64, 67, 68, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98, 99, 101, 102, 105, 106, 108, 109, 115, 116, 117, 120, 125, 127, 130, 131, 132, 135, 137, 138, 139, 142, 147, 156, 157, 158, 162, 163, 164, 166, 167, 168, 170, 173, 177, 178, 180, 181, 185, 186, 189, 192, 207, 208, 213, 220, 222, 223, 224, 225, 228, 230, 235, 236, 239, 244, 248, 249, 250, 254, 255, 256, 267], "introspector": [0, 37, 60, 88, 136, 137], "It": [0, 6, 36, 38, 41, 42, 51, 52, 56, 66, 72, 73, 77, 82, 90, 91, 93, 95, 96, 101, 140, 144, 147, 150, 161, 209, 215, 221, 222, 224, 226, 228, 263, 267], "run": [0, 6, 7, 10, 11, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 47, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 93, 95, 96, 98, 101, 109, 118, 123, 133, 136, 137, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 176, 179, 181, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 222, 224, 225, 226, 228, 230, 235, 257, 263, 267], "standalon": [0, 44], "command": [0, 7, 10, 14, 17, 23, 37, 40, 46, 52, 56, 65, 66, 88, 90, 93, 100, 101, 106, 115, 121, 123, 133, 140, 143, 144, 176, 181, 186, 188, 191, 221, 223, 228, 230, 235, 244, 254, 263, 267], "line": [0, 10, 14, 17, 23, 37, 46, 48, 52, 54, 56, 65, 66, 88, 89, 90, 96, 100, 101, 106, 112, 115, 117, 121, 123, 140, 143, 144, 146, 168, 176, 181, 186, 188, 191, 209, 215, 220, 221, 228, 244, 245, 250, 254, 263], "via": [0, 91, 102, 263, 267], "api": [0, 4, 9, 10, 13, 19, 20, 21, 23, 35, 36, 88, 124, 131, 138, 139, 140, 142, 148, 149, 151, 159, 161, 164, 180, 239, 263], "found": [0, 4, 36, 38, 41, 82, 91, 179, 236, 263], "epa": [0, 90, 116, 127, 136, 142, 146, 147, 151, 152, 154, 155, 158, 159, 160, 161, 163, 194, 261, 263, 264, 265, 266], "project": [0, 6, 7, 23, 40, 84, 88, 123, 148, 150, 179, 224, 228, 230, 231, 232, 233, 234, 235, 245, 267], "loader": [0, 32, 33, 34, 35, 37, 40, 41, 53, 56, 59, 68, 70, 71, 83, 86, 90, 91, 99, 101, 115, 136, 137, 156, 157, 162, 192, 207, 208, 212, 213, 260], "also": [0, 7, 10, 13, 23, 36, 39, 40, 41, 42, 44, 47, 48, 52, 65, 72, 89, 90, 91, 96, 101, 106, 115, 143, 170, 179, 221, 222, 263, 267], "repositori": [0, 7, 96, 224, 264], "github": [0, 1, 39, 47, 62, 93, 165, 178, 185, 221, 224, 228, 235, 249, 263], "other": [0, 11, 23, 36, 38, 40, 41, 47, 90, 96, 123, 146, 166, 221, 222, 228, 239, 263, 267], "control": [0, 222, 263, 267], "The": [0, 3, 4, 6, 7, 8, 9, 10, 23, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 96, 102, 137, 139, 143, 146, 148, 149, 150, 153, 156, 157, 162, 163, 168, 176, 177, 178, 179, 192, 195, 200, 203, 205, 207, 208, 209, 212, 213, 214, 215, 218, 220, 221, 224, 226, 228, 230, 235, 236, 239, 260, 261, 263, 267], "process": [0, 6, 33, 36, 37, 38, 44, 47, 56, 58, 59, 60, 62, 69, 73, 74, 76, 90, 94, 96, 105, 114, 118, 120, 130, 136, 137, 139, 153, 157, 163, 167, 168, 171, 176, 177, 179, 181, 186, 189, 192, 193, 195, 198, 200, 203, 205, 208, 209, 214, 225, 226, 228, 264, 267], "an": [0, 4, 6, 9, 10, 11, 13, 23, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 58, 64, 88, 89, 90, 91, 93, 95, 96, 98, 101, 105, 115, 116, 125, 127, 131, 132, 135, 140, 143, 144, 146, 164, 167, 170, 177, 178, 185, 186, 189, 191, 221, 222, 224, 225, 226, 230, 235, 236, 239, 247, 249, 250, 254, 255, 256, 257, 261, 263, 267], "describ": [0, 4, 11, 23, 37, 41, 44, 54, 63, 74, 90, 91, 93, 95, 140, 143, 144, 176, 177, 178, 185, 186, 189, 221, 222, 223, 228, 244, 247, 249, 260, 267], "In": [0, 4, 6, 7, 9, 35, 36, 38, 41, 47, 91, 94, 95, 96, 123, 139, 141, 146, 221, 224, 235, 250, 267], "case": [0, 40, 41, 61, 62, 135, 146, 221, 225, 250], "mean": [0, 41, 90, 167, 168, 171, 172, 178, 181, 185, 186, 195, 200, 203, 209, 215, 220, 249], "first": [0, 35, 40, 62, 79, 80, 90, 93, 102, 139, 140, 146, 164, 177, 186, 189, 221, 224, 226, 228, 250, 267], "json": [0, 35, 88, 91, 96, 101, 106, 115, 121, 123, 127, 131, 139], "fst": [0, 39, 88, 89, 90, 91, 96, 101, 115, 123, 131, 239, 252, 261, 263], "some": [0, 4, 10, 35, 36, 40, 41, 62, 67, 91, 95, 96, 105, 143, 146, 170, 221, 223, 224, 225, 228, 249, 250, 263], "howev": [0, 6, 36, 40, 41, 82, 90, 96, 221, 225, 247], "simpl": [0, 37, 38, 40, 55, 186, 224, 228], "either": [0, 4, 7, 19, 23, 38, 41, 42, 44, 48, 49, 64, 66, 90, 101, 115, 116, 125, 127, 132, 135, 146, 147, 148, 149, 150, 151, 152, 154, 155, 221, 230, 235, 236, 247, 249, 267], "just": [0, 42, 67, 91, 94, 96, 131, 221], "done": [0, 39, 40, 42, 93, 221, 235, 236, 239, 267], "dryrun": [0, 91, 98, 101], "argument": [0, 12, 14, 15, 17, 22, 23, 46, 47, 52, 65, 67, 89, 90, 91, 98, 101, 105, 109, 115, 123, 136, 137, 143, 147, 163, 164, 179, 181, 186, 191, 221, 244, 254], "see": [0, 6, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 52, 62, 64, 65, 77, 78, 85, 90, 91, 93, 96, 103, 116, 125, 127, 132, 135, 137, 139, 140, 143, 144, 148, 149, 150, 151, 152, 154, 155, 168, 170, 178, 179, 185, 188, 220, 221, 223, 224, 230, 235, 236, 239, 248, 257, 263], "detail": [0, 4, 6, 36, 40, 41, 44, 47, 48, 77, 78, 85, 90, 96, 102, 106, 178, 185, 188, 221, 223, 224, 228, 261, 263], "glossari": [1, 10, 223, 263], "show_api_kei": [1, 10, 21, 23], "public": [1, 9, 35, 38, 49, 61, 62, 64, 93, 94, 96, 108, 125, 132, 134, 135, 221, 267], "folder": [1, 7, 44, 78, 146, 179, 221, 236, 250], "hold": [1, 96, 239, 263], "webpag": 1, "document": [1, 6, 7, 10, 11, 12, 14, 15, 17, 22, 23, 35, 36, 37, 40, 41, 42, 46, 47, 61, 67, 77, 85, 90, 93, 95, 98, 101, 109, 115, 137, 140, 144, 146, 147, 176, 179, 181, 228, 244, 250, 254, 260], "gitlab": [1, 6, 7, 39, 61], "doc": [1, 6, 14, 23, 44, 46, 67, 96, 98, 101, 105, 109, 115, 137, 138, 139, 140, 142, 144, 147, 176, 181, 242], "set": [1, 4, 10, 11, 13, 19, 23, 35, 36, 37, 47, 78, 90, 91, 92, 95, 96, 101, 115, 123, 124, 177, 189, 224, 225, 231, 232, 233, 234, 235, 249, 263, 267], "up": [1, 10, 11, 23, 35, 62, 116, 137, 138, 142, 143, 224, 225, 228], "environ": [1, 10, 13, 23, 35, 36, 96, 136, 137, 222, 224, 225, 226, 230, 235, 239, 263, 267], "page": [1, 6, 33, 39, 40, 73, 74, 89, 90, 91, 101, 115, 128, 157, 192, 208, 223, 263], "get_censu": [1, 4, 7], "censu": [1, 3, 9, 11, 13, 14, 16, 19, 20, 21, 23, 24, 25, 28, 29, 31, 35, 62, 90, 93, 127, 136, 137, 165, 169, 217, 263, 264, 265], "reorgan": 1, "import": [1, 6, 35, 88, 96, 97, 105, 116, 121, 127, 221, 267], "docsourc": 1, "move": [1, 36, 40, 41, 96, 239, 248], "makefil": 1, "action": [1, 61, 62, 68, 90, 101, 103, 115], "make": [1, 4, 6, 7, 11, 23, 34, 36, 41, 86, 162, 213, 221, 222, 239, 267], "tbd": [2, 5], "packag": [3, 4, 6, 7, 8, 10, 14, 23, 35, 39, 44, 50, 95, 104, 163, 178, 179, 185, 221, 223, 225, 235, 262, 264, 267], "contain": [3, 11, 12, 13, 14, 15, 17, 19, 22, 23, 36, 37, 38, 40, 41, 44, 46, 54, 67, 69, 71, 73, 74, 77, 78, 82, 89, 90, 91, 95, 96, 98, 101, 102, 105, 107, 109, 115, 120, 123, 131, 137, 138, 140, 142, 143, 144, 146, 147, 150, 153, 165, 166, 167, 168, 176, 177, 178, 179, 180, 181, 185, 186, 189, 209, 214, 215, 222, 225, 226, 231, 232, 244, 248, 249, 254, 257, 260, 263, 267], "frame": [3, 11, 18, 20, 23, 36, 166, 248, 257], "list": [3, 4, 6, 11, 13, 18, 19, 23, 35, 40, 41, 48, 51, 52, 53, 54, 60, 62, 63, 90, 95, 101, 103, 107, 111, 112, 114, 117, 118, 124, 129, 130, 131, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 164, 166, 176, 177, 178, 179, 180, 181, 185, 186, 189, 228, 235, 236, 239, 244, 245, 247, 248, 250, 252, 257], "all": [3, 4, 6, 9, 11, 13, 18, 23, 32, 35, 36, 38, 39, 40, 41, 42, 44, 47, 60, 70, 75, 76, 82, 83, 88, 90, 91, 94, 96, 114, 123, 132, 140, 143, 144, 146, 156, 164, 168, 176, 177, 186, 189, 207, 212, 220, 221, 222, 226, 236, 244, 249, 263, 267], "state": [3, 9, 11, 18, 19, 23, 24, 30, 35, 38, 40, 41, 42, 44, 47, 49, 51, 61, 62, 64, 77, 79, 80, 88, 94, 95, 96, 104, 106, 117, 130, 135, 139, 150, 222, 225], "counti": [3, 9, 11, 18, 19, 23, 24, 30, 36, 38, 40, 51, 62, 77, 90, 94, 96, 108, 127, 130, 136, 137, 139, 141, 150, 161, 166, 167, 168, 171, 177, 178, 179, 185, 186, 189, 194, 195, 198, 200, 203, 205, 209, 214, 215, 216, 217], "fip": [3, 11, 18, 19, 23, 38, 40, 62, 72, 77, 88, 90, 92, 94, 96, 130, 134, 150, 166, 186, 209, 215], "code": [3, 4, 6, 7, 11, 18, 19, 20, 23, 35, 37, 38, 40, 42, 44, 47, 51, 61, 62, 72, 77, 88, 90, 91, 96, 106, 117, 130, 135, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 154, 155, 164, 166, 167, 177, 178, 179, 185, 186, 189, 195, 198, 200, 203, 205, 209, 214, 215, 216, 217, 221, 226, 228, 239, 263, 267], "primarili": [3, 67, 170, 181], "intern": [3, 35, 39, 40, 44, 47, 62, 77, 85, 137, 139, 163, 173, 221, 250, 264], "creat": [4, 7, 9, 11, 12, 14, 15, 17, 20, 22, 23, 33, 35, 36, 37, 39, 40, 44, 46, 47, 48, 49, 52, 61, 62, 64, 66, 67, 68, 71, 73, 75, 76, 77, 79, 80, 81, 82, 85, 88, 91, 92, 94, 96, 98, 101, 103, 106, 108, 109, 115, 116, 117, 123, 125, 130, 132, 140, 143, 144, 146, 147, 148, 149, 150, 151, 157, 158, 166, 176, 186, 187, 191, 192, 195, 200, 208, 214, 224, 225, 235, 236, 244, 248, 249, 250, 254, 255, 256, 261, 263, 264], "data": [4, 9, 10, 11, 13, 18, 19, 20, 23, 27, 30, 31, 32, 34, 35, 36, 38, 46, 47, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 70, 73, 76, 77, 82, 83, 84, 85, 86, 87, 88, 91, 93, 95, 98, 101, 103, 105, 112, 115, 116, 117, 123, 130, 131, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 155, 156, 162, 163, 164, 165, 166, 167, 176, 177, 178, 179, 180, 181, 185, 186, 187, 189, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 216, 217, 222, 230, 239, 248, 249, 250, 251, 257, 260, 261, 265], "must": [4, 11, 12, 14, 15, 17, 22, 23, 42, 46, 56, 67, 68, 78, 90, 95, 96, 98, 101, 109, 115, 139, 140, 144, 147, 176, 179, 186, 221, 224, 225, 226, 244, 254], "formal": 4, "each": [4, 9, 11, 23, 35, 36, 37, 40, 41, 44, 58, 60, 78, 79, 80, 82, 90, 91, 93, 95, 123, 139, 181, 195, 200, 203, 209, 214, 215, 221, 225, 226, 247, 248, 249, 260, 267], "top": [4, 44, 96, 221], "level": [4, 40, 44, 91, 96, 120, 123, 223, 251], "entri": [4, 90, 112, 117, 123, 131, 146, 250], "thi": [4, 6, 7, 9, 10, 11, 13, 14, 17, 20, 23, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44, 47, 49, 51, 52, 56, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 101, 102, 105, 109, 112, 115, 116, 120, 123, 125, 127, 131, 132, 133, 135, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 165, 167, 168, 170, 176, 177, 179, 181, 186, 187, 189, 192, 193, 194, 195, 200, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 221, 223, 224, 225, 226, 227, 228, 230, 235, 236, 239, 244, 248, 250, 254, 263, 267], "var_nam": 4, "num": [4, 11, 23, 35, 247, 250], "numerator_variable_1": 4, "numerator_variable_2": 4, "den": [4, 11, 23, 35], "denominator_variable_1": 4, "denominator_variable_2": 4, "These": [4, 35, 37, 40, 41, 58, 221, 222, 225, 260], "descript": [4, 12, 14, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 44, 46, 48, 61, 62, 67, 90, 91, 98, 101, 109, 115, 136, 140, 144, 147, 176, 179, 196, 197, 199, 201, 202, 204, 206, 223, 244, 254, 261, 263], "provid": [4, 9, 10, 13, 23, 35, 37, 40, 44, 62, 71, 73, 74, 77, 78, 90, 91, 94, 96, 101, 123, 124, 131, 137, 146, 150, 161, 166, 215, 222, 223, 225, 228, 247, 250, 252, 260, 263, 267], "instruct": [4, 90, 143, 224], "which": [4, 7, 11, 13, 23, 54, 90, 140, 144, 146, 170, 176, 178, 179, 181, 185, 186, 194, 221, 263, 267], "ask": [4, 10], "from": [4, 6, 7, 11, 12, 14, 15, 17, 19, 22, 23, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 54, 56, 58, 61, 62, 64, 65, 67, 73, 74, 79, 80, 83, 88, 90, 92, 93, 94, 96, 98, 100, 101, 105, 106, 109, 115, 118, 123, 124, 125, 127, 130, 131, 132, 134, 135, 136, 137, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 159, 164, 166, 169, 172, 176, 178, 179, 181, 185, 186, 191, 193, 194, 212, 217, 221, 222, 224, 225, 226, 228, 235, 239, 244, 249, 250, 254, 260, 263, 264, 266, 267], "how": [4, 11, 23, 36, 42, 90, 95, 111, 116, 125, 140, 143, 144, 223, 224, 239], "calcul": [4, 11, 23, 36, 62, 117, 168, 181, 195, 200, 203, 220, 226, 249], "desir": [4, 11, 23, 36, 146, 250], "inform": [4, 6, 9, 11, 12, 14, 15, 17, 20, 22, 23, 33, 35, 36, 37, 38, 39, 40, 41, 46, 47, 62, 67, 73, 74, 77, 85, 90, 94, 96, 98, 101, 109, 115, 130, 139, 140, 144, 147, 157, 168, 176, 192, 208, 228, 230, 235, 236, 244, 248, 254, 260, 261, 263], "avail": [4, 7, 9, 13, 23, 35, 36, 39, 41, 62, 94, 96, 101, 115, 177, 178, 185, 189, 225, 231, 232, 233, 234, 263], "user": [4, 7, 9, 35, 47, 88, 91, 93, 102, 107, 116, 124, 139, 140, 143, 144, 146, 222, 224, 230, 263, 267], "chosen": [4, 263], "name": [4, 7, 9, 11, 12, 14, 15, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 53, 54, 56, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98, 100, 101, 103, 104, 105, 107, 109, 111, 112, 114, 115, 117, 120, 123, 125, 126, 131, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 166, 176, 177, 178, 179, 181, 185, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 226, 227, 229, 230, 235, 242, 244, 247, 248, 250, 254, 255, 256, 257], "specif": [4, 6, 40, 49, 64, 88, 90, 91, 95, 96, 107, 116, 124, 125, 127, 132, 135, 144, 146, 172, 177, 181, 189, 221, 228, 230, 235, 236, 239, 250, 263, 267], "should": [4, 6, 11, 20, 23, 42, 44, 73, 78, 90, 93, 95, 96, 146, 177, 189, 221, 223, 226, 228, 248, 250], "closest": [4, 177, 178, 185, 189], "input": [4, 11, 19, 23, 46, 52, 65, 90, 101, 115, 136, 137, 146, 166, 179, 249, 250, 257], "current": [4, 6, 7, 9, 11, 20, 23, 35, 90, 91, 95, 96, 118, 252], "after": [4, 7, 11, 23, 33, 35, 36, 40, 47, 48, 73, 74, 96, 131, 157, 192, 208, 224, 228], "ac": [4, 9, 11, 23, 35, 36], "If": [4, 7, 8, 11, 12, 14, 15, 17, 22, 23, 35, 38, 40, 41, 42, 46, 47, 67, 82, 90, 91, 95, 98, 101, 109, 115, 139, 140, 144, 146, 147, 176, 186, 221, 224, 227, 228, 244, 247, 248, 249, 250, 254], "know": [4, 11, 23, 35, 40, 221], "call": [4, 11, 23, 36, 38, 40, 41, 47, 88, 90, 91, 100, 105, 139, 146, 177, 189, 221, 236, 248], "decenni": [4, 9, 11, 13, 23, 35, 36], "5": [4, 6, 9, 11, 23, 40, 41, 61, 62, 108, 139, 168, 178, 181, 185, 214, 220, 230], "As": [4, 7, 40, 41, 62], "remind": 4, "2000": [4, 11, 13, 19, 23, 35, 36, 62, 195, 200, 203, 214], "2010": [4, 11, 23, 37, 58, 59, 62, 135, 181, 195, 200, 214], "2009": [4, 11, 23, 36, 181, 195, 200, 214], "2018": [4, 9, 11, 23, 56, 130, 159, 195, 200, 203, 214], "present": [4, 90, 267], "ar": [4, 6, 7, 8, 9, 11, 19, 23, 35, 36, 37, 39, 40, 41, 42, 44, 58, 67, 69, 72, 73, 78, 79, 82, 90, 91, 93, 94, 96, 102, 105, 114, 123, 140, 143, 144, 146, 153, 176, 177, 178, 179, 185, 189, 194, 221, 224, 228, 239, 244, 247, 248, 249, 250, 260, 263, 264, 267], "alwai": [4, 41, 61, 62, 90, 221, 230], "sum": 4, "divid": [4, 11, 23], "valu": [4, 11, 12, 14, 15, 17, 22, 23, 38, 40, 41, 46, 47, 49, 52, 54, 64, 65, 67, 90, 95, 98, 101, 109, 115, 130, 137, 139, 140, 144, 146, 147, 165, 168, 170, 171, 172, 175, 176, 180, 181, 186, 189, 195, 200, 203, 209, 214, 215, 219, 220, 221, 231, 232, 233, 234, 244, 247, 248, 249, 250, 254, 257, 261], "report": [4, 47, 54, 61, 62, 82, 88], "here": [4, 6, 7, 9, 19, 23, 35, 42, 44, 47, 90, 93, 96, 178, 185, 221], "numer": [4, 11, 23, 35, 37, 38, 40, 41, 48, 62, 90, 120, 137, 148, 149, 150, 151, 152, 154, 155, 249, 260], "produc": [4, 40, 93, 131, 140, 144, 164, 176, 179, 209, 215, 244, 247], "final": [4, 226], "popul": [4, 9, 11, 23, 25, 35, 36, 44, 62, 67, 73, 90], "black": 4, "blk_pct": 4, "p007003": 4, "p007001": 4, "b02001_003": 4, "b02001_001": 4, "p006003": 4, "p006001": 4, "back": 4, "Then": [4, 56, 95, 177, 189, 221], "2011": [4, 11, 23, 35, 56, 78, 130, 140, 144, 164, 176, 179, 195, 198, 200, 203, 214, 244], "median": 4, "household": [4, 9], "incom": [4, 39, 40, 52, 65, 84, 90, 91, 123, 127, 166, 230], "median_household_incom": [4, 127], "p053001": 4, "b19013_001": 4, "note": [4, 11, 20, 23, 35, 36, 40, 41, 56, 93, 137, 226], "lack": 4, "denomin": [4, 11, 23, 41, 58], "wa": [4, 37, 39, 40, 41, 96], "miss": [4, 11, 23, 36, 40, 41, 47, 94, 137, 248, 249], "so": [4, 82, 88], "instead": [4, 19, 23, 42, 225, 226, 267], "sometim": [4, 8, 40, 41, 221], "you": [4, 6, 7, 8, 11, 13, 19, 23, 35, 36, 42, 49, 64, 93, 116, 125, 127, 132, 135, 179, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 264], "mai": [4, 7, 11, 23, 35, 36, 49, 64, 116, 125, 127, 132, 135, 221, 230, 235, 236], "want": [4, 7, 11, 13, 19, 23, 35, 42, 93, 221, 224], "get": [4, 6, 7, 20, 23, 35, 36, 42, 103], "given": [4, 13, 19, 23, 40, 41, 47, 52, 54, 59, 60, 62, 78, 91, 93, 94, 95, 96, 101, 102, 105, 114, 115, 123, 131, 146, 167, 169, 170, 177, 178, 179, 181, 185, 186, 189, 195, 200, 203, 209, 214, 216, 217, 247], "most": [4, 6, 39, 40, 41, 51, 89, 90, 91, 93, 96, 101, 115, 140, 144, 186, 221, 224, 225, 267], "common": [4, 37, 51, 57, 60, 81, 88, 101, 137, 140, 144, 222, 224, 261, 263, 267], "reason": [4, 41, 221], "do": [4, 6, 7, 8, 36, 39, 40, 41, 42, 51, 55, 90, 91, 93, 95, 96, 97, 98, 101, 115, 179, 195, 200, 203, 214, 221, 231, 232, 233, 234, 235, 236, 239], "when": [4, 6, 35, 36, 38, 40, 41, 44, 47, 61, 62, 90, 91, 93, 96, 105, 135, 146, 228, 247, 248, 250, 254, 255, 256, 257, 267], "work": [4, 6, 10, 35, 42, 44, 88, 139, 165, 170, 221, 224, 226, 230, 235, 236, 263, 267], "zcta": [4, 9, 19, 23, 137], "acs5": [4, 9, 11, 13, 19, 23], "despit": [4, 36], "being": [4, 40, 41, 73, 83, 91, 123, 146, 212, 249, 250, 263, 267], "those": [4, 6, 40, 42, 47, 146, 228, 239, 250], "further": [4, 210], "complic": 4, "thing": [4, 90], "handl": [4, 13, 14, 17, 23, 44, 56, 58, 59, 60, 78, 88, 90, 96, 101, 115, 137, 140, 144, 176, 181, 244, 254], "try": [4, 8, 37, 93, 179, 224], "queri": [4, 10, 11, 20, 34, 36, 40, 41, 43, 44, 45, 62, 86, 88, 96, 107, 146, 162, 213, 250, 261, 263], "hit": 4, "error": [4, 32, 33, 34, 40, 68, 69, 70, 73, 81, 82, 83, 86, 87, 95, 96, 105, 139, 157, 158, 162, 192, 193, 207, 208, 209, 210, 211, 212, 213, 215, 227, 257, 261], "fail": [4, 41, 226, 230, 247], "specifi": [4, 11, 12, 13, 14, 15, 17, 19, 22, 23, 32, 33, 36, 42, 46, 48, 52, 65, 67, 70, 73, 74, 89, 90, 91, 95, 98, 101, 102, 107, 109, 115, 137, 139, 140, 143, 144, 146, 147, 156, 157, 176, 181, 186, 191, 192, 207, 208, 221, 236, 244, 250, 254, 255, 256, 267], "your": [4, 6, 7, 11, 13, 19, 23, 35, 36, 42, 93, 221, 224, 226, 228], "write": [4, 11, 23, 33, 36, 42, 49, 64, 66, 73, 74, 89, 90, 91, 93, 101, 115, 116, 125, 127, 132, 135, 139, 146, 147, 157, 192, 195, 200, 203, 205, 208, 211, 221, 230, 235, 236, 250], "poverti": 4, "rate": 4, "might": [4, 13, 23, 40, 42, 91, 93, 221, 226, 267], "look": [4, 35, 36, 37, 38, 56, 58, 59, 60, 71, 73, 74, 77, 78, 82, 88, 146, 221, 226, 250, 263], "someth": [4, 42], "p001001": [4, 35], "b01001_001": 4, "p087002": 4, "p087001": 4, "b17001_002": 4, "b17001_001": 4, "onli": [4, 6, 7, 11, 20, 23, 36, 40, 41, 90, 146, 176, 179, 181, 186, 195, 200, 203, 205, 209, 221, 224, 226, 248, 249, 263], "assembl": [4, 11, 23, 30, 36], "read": [4, 9, 18, 23, 35, 41, 44, 48, 54, 56, 60, 90, 93, 96, 105, 130, 131, 146, 228, 235, 236, 239, 247, 250, 260, 263], "through": [4, 6, 7, 9, 20, 23, 36, 42, 186, 221, 267], "quit": 4, "tediou": 4, "especi": [4, 221, 225, 228], "figur": [4, 41, 95], "out": [4, 11, 21, 23, 36, 41, 52, 65, 90, 95, 96, 105, 261, 267], "more": [4, 6, 9, 34, 35, 36, 40, 41, 44, 47, 48, 86, 91, 93, 96, 139, 140, 144, 148, 149, 150, 151, 152, 154, 155, 162, 176, 178, 185, 186, 213, 221, 230, 235, 236, 244, 248, 261, 263, 264], "complex": [4, 263], "estim": [4, 9, 35], "link": [4, 35, 93, 96, 101, 263], "sf1": [4, 9, 13, 19, 23], "whole": [4, 96, 101, 115, 143, 186, 228], "u": [4, 7, 9, 10, 18, 23, 36, 39, 40, 41, 42, 61, 62, 88, 89, 91, 93, 95, 96, 106, 117, 169, 179, 217, 221, 230, 235, 261], "question": [4, 10, 36, 239], "http": [4, 6, 9, 35, 38, 39, 47, 49, 61, 62, 64, 90, 93, 105, 106, 116, 117, 125, 127, 130, 132, 134, 135, 137, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 155, 159, 160, 165, 169, 170, 177, 178, 185, 189, 193, 194, 195, 198, 200, 203, 205, 209, 214, 217, 221, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 249, 250], "gov": [4, 9, 35, 62, 90, 106, 134, 137, 143, 144, 146, 169], "html": [4, 9, 62, 96, 105, 134, 143, 146, 170, 178, 185], "sf3": [4, 9, 13, 19, 23], "smaller": 4, "www": [4, 9, 38, 49, 62, 64, 90, 106, 116, 125, 127, 130, 132, 134, 135, 137, 143, 144, 146, 169, 177, 178, 185, 189, 230, 235, 236], "develop": [4, 7, 8, 40, 47, 49, 64, 94, 96, 116, 125, 127, 132, 135, 223, 228, 248, 263, 264], "becaus": [4, 67, 96, 139, 221, 227], "cours": 4, "thei": [4, 9, 35, 41, 44, 89, 90, 91, 96, 101, 114, 115, 221, 267], "re": [4, 19, 23, 239], "consist": [4, 40, 41, 47, 54, 90, 131, 186, 225, 239, 263], "dec": [4, 9, 11, 13, 19, 23, 35], "5year": 4, "ani": [6, 7, 32, 33, 36, 40, 41, 47, 49, 53, 55, 64, 82, 89, 90, 91, 93, 101, 105, 115, 116, 123, 125, 127, 131, 132, 135, 140, 144, 186, 192, 197, 202, 204, 207, 208, 216, 217, 221, 230, 235, 236, 263, 267], "kind": [6, 40, 49, 64, 90, 116, 125, 127, 132, 135, 230, 235, 236], "welcom": 6, "test": [6, 7, 11, 23, 37, 52, 112, 139, 181, 195, 200, 203, 205, 209, 221, 223, 224, 230, 254, 255, 256, 257, 263], "improv": [6, 8], "add": [6, 7, 11, 23, 41, 49, 61, 64, 117, 143, 146, 166, 221, 257], "new": [6, 10, 11, 12, 14, 15, 17, 22, 23, 36, 38, 39, 40, 41, 46, 47, 67, 91, 98, 101, 105, 109, 115, 117, 125, 140, 143, 144, 147, 176, 186, 191, 221, 225, 244, 249, 254, 264], "featur": [6, 7, 20, 23, 103, 239, 267], "fix": [6, 41, 48, 55, 105, 221, 247, 260], "bug": 6, "request": [6, 19, 23, 35, 107, 124], "pleas": [6, 7, 35, 36, 41, 44, 56, 221, 228, 263], "refer": [6, 38, 40, 41, 47, 61, 62, 90, 146, 166, 172, 181, 228, 250, 261], "issu": [6, 257], "step": [6, 7, 40, 44, 69, 136, 137, 153, 179, 221, 223, 225, 228, 263, 267], "consid": [6, 40], "1": [6, 9, 35, 40, 41, 45, 49, 61, 62, 64, 89, 90, 91, 96, 104, 116, 127, 132, 134, 135, 137, 170, 178, 179, 185, 189, 214, 221, 224, 227, 228, 231, 232, 238, 239, 252, 267], "copi": [6, 36, 41, 49, 56, 64, 88, 93, 100, 116, 120, 125, 127, 132, 135, 221, 228, 230, 235, 236, 267], "updat": [6, 10, 11, 23, 37, 66, 72, 90, 91, 93, 101, 115, 137, 147, 163, 187, 221, 224, 228, 239, 248, 267], "repo": [6, 221, 235], "start": [6, 10, 12, 14, 15, 17, 22, 23, 36, 37, 40, 46, 48, 54, 67, 91, 98, 101, 109, 115, 140, 144, 147, 148, 149, 151, 155, 164, 176, 221, 223, 224, 244, 247, 252, 254, 260], "branch": 6, "git": [6, 93, 165, 224, 228, 267], "clone": [6, 221, 224, 228], "int": [6, 13, 19, 23, 33, 45, 48, 49, 54, 58, 59, 60, 61, 62, 64, 73, 74, 90, 94, 102, 103, 105, 111, 112, 114, 117, 118, 127, 130, 132, 134, 135, 145, 146, 157, 169, 177, 178, 185, 189, 192, 208, 214, 216, 217, 245, 247, 248, 249, 250, 251, 252], "rc": [6, 7, 39, 49, 61, 64, 116, 125, 127, 132, 135, 179, 228, 263, 267], "fa": [6, 39, 49, 61, 64, 116, 125, 127, 132, 135, 179, 228, 263, 267], "harvard": [6, 39, 49, 61, 64, 116, 125, 127, 132, 135, 179, 228, 263, 267], "edu": [6, 39, 61, 93, 102, 177, 179, 189], "rse": [6, 61], "francesca_dominici": [6, 61], "getcensu": 6, "alreadi": [6, 39, 73, 79, 80, 85, 89, 90, 91, 96, 101, 115, 146, 177, 189, 221, 225, 239, 250], "have": [6, 7, 9, 35, 36, 38, 40, 41, 44, 47, 58, 73, 89, 90, 91, 93, 94, 101, 115, 123, 139, 146, 179, 186, 221, 224, 226, 227, 228, 239, 247, 249, 254, 255, 256, 263, 267], "directori": [6, 20, 23, 41, 44, 46, 52, 56, 65, 71, 73, 74, 77, 78, 82, 84, 88, 89, 90, 93, 96, 98, 101, 115, 123, 139, 140, 144, 146, 158, 161, 164, 176, 177, 178, 179, 181, 185, 186, 189, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 214, 215, 216, 217, 221, 224, 250], "veri": [6, 8, 40, 90, 95, 267], "keep": [6, 221, 224, 226], "dev": [6, 235], "fetch": [6, 224, 267], "checkout": 6, "origin": [6, 9, 35, 40, 41, 47, 51, 52, 54, 56, 61, 90, 178, 185, 189, 228], "pull": 6, "b": [6, 49, 51, 64, 78, 146, 178, 185, 235, 250], "new_branch": 6, "2": [6, 11, 19, 23, 39, 40, 45, 49, 61, 62, 64, 77, 90, 96, 97, 99, 102, 108, 116, 117, 125, 127, 132, 134, 135, 137, 150, 170, 172, 181, 214, 224, 228, 230, 235, 236, 238, 239, 249], "modif": [6, 91, 98, 101], "choos": 6, "topic": [6, 9, 41, 178, 185], "sure": [6, 7, 221], "polish": 6, "expect": [6, 45, 77, 78, 91, 96, 143, 177, 179, 180, 189, 257], "chang": [6, 9, 35, 40, 41, 47, 179, 224], "codebas": 6, "mix": 6, "extrem": 6, "time": [6, 32, 35, 36, 40, 44, 70, 137, 138, 142, 144, 146, 156, 195, 200, 203, 207, 209, 214, 221, 224, 248], "consum": 6, "accept": [6, 90, 105, 181], "modifi": [6, 91, 146], "ad": [6, 7, 40, 41, 62, 90, 93, 120, 146, 166, 264], "function": [6, 7, 10, 11, 13, 14, 19, 21, 23, 36, 38, 42, 44, 47, 50, 62, 72, 90, 91, 92, 96, 110, 123, 131, 146, 170, 178, 185, 221, 248, 249, 250, 267], "relat": [6, 41, 90, 165, 171, 225, 227], "3": [6, 11, 19, 23, 40, 42, 45, 61, 62, 90, 105, 108, 118, 134, 135, 178, 180, 181, 185, 186, 214, 229, 230, 235, 238, 248], "unit": [6, 36, 94, 137, 170], "pass": [6, 19, 23, 36, 90, 105, 140, 144, 176, 244, 257], "todo": [6, 9], "need": [6, 7, 9, 11, 13, 19, 23, 35, 36, 42, 90, 93, 137, 195, 200, 203, 214, 222, 224, 226, 264], "4": [6, 33, 39, 40, 41, 45, 61, 62, 73, 74, 91, 93, 134, 157, 177, 178, 179, 185, 186, 189, 192, 208, 214, 221, 230, 248], "changelog": [6, 10], "md": [6, 62], "file": [6, 7, 9, 10, 11, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 98, 101, 102, 105, 107, 112, 114, 115, 116, 120, 121, 123, 125, 127, 128, 131, 132, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 169, 176, 177, 178, 179, 180, 181, 185, 186, 189, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 224, 226, 228, 235, 236, 239, 247, 250, 252, 261, 263, 264, 267], "understand": [6, 42, 47, 93], "what": [6, 8, 11, 23, 35, 48, 90, 93, 114, 125, 140, 144, 167, 176, 181, 239, 264], "ha": [6, 35, 38, 40, 41, 42, 47, 54, 67, 90, 95, 103, 130, 139, 146, 177, 179, 186, 189, 221, 225, 226, 249, 250, 267], "happen": [6, 41, 93, 102], "submit": [6, 105], "merg": [6, 36], "recent": 6, "implement": [6, 11, 14, 17, 23, 35, 41, 88, 90, 95, 101, 105, 115, 123, 140, 144, 176, 177, 178, 181, 185, 189, 221, 222, 239, 244, 249, 254, 267], "ey": 6, "accordingli": 6, "earlier": 6, "befor": [6, 67, 91, 93, 96, 177, 178, 185, 189, 217, 267], "complet": [6, 36, 224], "finish": 6, "help": [6, 36, 89, 90, 91, 131, 140, 144, 164, 176, 179, 225, 244], "feedback": 6, "group": [6, 9, 20, 23, 40, 41, 42, 61, 62, 90, 95, 104, 107, 127, 135, 137, 178, 185, 193], "ci": 6, "ensur": [6, 69, 72, 77, 78, 93, 121, 150, 153, 221, 267], "right": [6, 36, 226, 251], "path": [6, 11, 23, 26, 30, 32, 33, 34, 36, 40, 46, 48, 56, 59, 60, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 98, 100, 101, 107, 112, 115, 123, 131, 140, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 162, 164, 166, 167, 168, 176, 177, 178, 179, 181, 185, 189, 192, 195, 200, 203, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 220, 224, 235, 247, 250, 252], "anaconda": [7, 225, 235], "system": [7, 124, 131, 136, 137, 146, 166, 221, 225, 227, 247, 261, 264, 267], "miniconda": 7, "version": [7, 49, 64, 72, 78, 96, 97, 99, 102, 116, 118, 125, 127, 132, 135, 170, 177, 178, 185, 189, 225, 228, 230, 235, 236, 239, 263, 267], "On": [7, 36, 91, 221, 267], "hpc": [7, 222, 267], "systm": 7, "load": [7, 35, 39, 47, 56, 59, 67, 69, 72, 73, 74, 76, 77, 78, 88, 89, 90, 94, 96, 98, 101, 114, 115, 123, 131, 153, 263], "modul": [7, 10, 37, 38, 40, 44, 88, 90, 94, 95, 102, 103, 137, 138, 140, 143, 144, 146, 163, 165, 167, 168, 239, 258, 264], "extra": [7, 102, 127], "librari": [7, 62, 105, 118, 146, 224, 263, 267], "surpport": 7, "research": [7, 35, 38, 40, 49, 62, 64, 77, 90, 94, 116, 125, 127, 130, 132, 135, 267], "yml": [7, 29, 31, 35, 36, 61, 90, 96, 148, 150, 221, 235], "environment_dev": 7, "exmapl": 7, "env": [7, 224, 228, 235], "your_env_nam": 7, "latest": [7, 40, 41, 72, 78, 177, 178, 185, 189, 221], "navig": [7, 261], "pip3": [7, 235, 236], "e": [7, 11, 19, 23, 41, 42, 44, 49, 56, 64, 78, 88, 89, 90, 91, 94, 95, 101, 115, 123, 132, 140, 144, 148, 149, 150, 151, 152, 154, 155, 167, 168, 170, 176, 177, 178, 181, 185, 186, 189, 220, 221, 224, 227, 235, 239, 247], "flag": [7, 40, 41, 103, 117], "mode": [7, 139, 146, 177, 180, 189, 221, 224, 228, 250, 264], "result": [7, 35, 40, 41, 54, 56, 82, 88, 90, 96, 106, 107, 124, 140, 144, 146, 164, 168, 176, 177, 179, 180, 189, 211, 220, 226, 239, 244, 261, 267], "reintal": 7, "chane": 7, "depend": [7, 32, 33, 34, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 86, 87, 156, 157, 158, 162, 192, 207, 208, 213, 221, 226, 228, 229, 235, 236, 263, 267], "cran": [7, 235, 237], "pypi": 7, "similar": [7, 40, 42, 90, 221, 247], "skip": [7, 10, 73, 89, 90, 91, 101, 103, 115], "while": [7, 40, 41, 61, 102, 235, 236, 267], "insid": [7, 40, 41, 72, 90, 91, 221, 225, 226, 231, 232, 233, 234, 263, 267], "order": [7, 32, 33, 34, 40, 41, 42, 45, 48, 49, 62, 64, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 86, 87, 125, 127, 135, 137, 156, 157, 158, 162, 192, 207, 208, 213, 224, 225, 247], "interact": [7, 20, 23, 36, 40, 222], "scale": [7, 112, 247], "ll": 7, "onc": [7, 40, 41, 47, 226], "config": [7, 91, 140, 164, 179, 218, 224, 230, 235], "var": [7, 179, 230], "census_api_kei": [7, 13, 19, 23], "directli": [7, 90, 102, 221], "set_api_kei": [7, 10, 13, 19, 23], "affect": [7, 267], "session": [7, 13, 23], "isn": 7, "t": [7, 20, 23, 39, 40, 49, 64, 89, 90, 91, 107, 124, 127, 132, 146, 178, 185, 249, 250, 257], "perman": [7, 13, 23], "plan": [7, 9, 11, 23, 35, 36, 93], "onn": 7, "jupyt": 7, "notebook": 7, "activ": [7, 35, 88, 93, 118, 179, 221, 235], "python3": [7, 93, 118], "m": [7, 39, 40, 61, 89, 90, 91, 93, 164, 172, 179, 181, 224, 226, 228], "ipykernel": 7, "export": [7, 40, 54, 88, 95, 96, 107, 121, 221, 224, 228, 235, 260], "remov": [7, 47, 52, 105, 143], "prefix": [7, 105], "section": [7, 23, 26, 30, 32, 33, 34, 35, 40, 44, 47, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 101, 102, 107, 113, 148, 149, 150, 153, 156, 157, 162, 192, 195, 200, 203, 205, 207, 208, 212, 213, 214, 221, 224, 228, 245, 263], "well": 7, "q": 8, "slow": [8, 40], "about": [8, 9, 10, 35, 37, 39, 40, 41, 44, 47, 48, 54, 118, 221, 228, 239, 260, 263], "A": [8, 11, 12, 14, 15, 17, 22, 23, 32, 33, 34, 40, 41, 46, 48, 49, 52, 64, 65, 67, 70, 71, 73, 74, 77, 78, 82, 83, 86, 88, 90, 92, 95, 96, 98, 101, 105, 107, 109, 115, 116, 118, 120, 121, 127, 128, 132, 135, 140, 144, 146, 147, 154, 156, 157, 158, 162, 165, 166, 167, 168, 171, 176, 177, 178, 185, 187, 188, 189, 192, 200, 207, 208, 211, 212, 213, 220, 244, 247, 248, 250, 252, 254, 261, 263, 267], "vpn": 8, "turn": 8, "off": 8, "switch": [8, 221], "ipv4": 8, "ipv6": 8, "perform": [8, 40, 41, 42, 44, 54, 88, 90, 91, 96, 140, 146, 164, 222, 223, 224, 228, 250, 267], "american": [9, 35], "commun": [9, 35, 267], "survei": [9, 35], "ongo": 9, "everi": [9, 13, 23, 33, 41, 42, 62, 73, 74, 89, 90, 91, 101, 115, 157, 181, 192, 208], "year": [9, 10, 11, 13, 19, 20, 23, 24, 30, 35, 36, 39, 40, 42, 44, 47, 49, 51, 54, 56, 58, 59, 60, 61, 62, 64, 78, 79, 80, 82, 94, 95, 96, 104, 108, 127, 130, 132, 134, 135, 137, 140, 143, 144, 146, 150, 152, 160, 163, 164, 169, 176, 177, 178, 179, 181, 185, 186, 188, 189, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 214, 216, 244], "give": [9, 91, 105, 221], "invest": 9, "servic": [9, 40, 44, 77, 94, 221, 230, 260, 261, 263], "cover": [9, 179, 228], "broad": 9, "rang": [9, 13, 23, 90, 139, 140, 164, 181, 249], "social": [9, 38, 62, 94], "econom": [9, 94, 130], "demograph": [9, 47, 259, 263, 264], "hous": [9, 94], "characterist": 9, "": [9, 11, 20, 23, 35, 48, 49, 54, 60, 61, 62, 64, 88, 89, 90, 91, 101, 103, 112, 115, 117, 127, 132, 135, 139, 140, 144, 164, 170, 172, 176, 178, 179, 181, 185, 189, 221, 244, 261, 267], "much": [9, 40, 44, 105], "bureau": [9, 94, 130], "web": 9, "site": [9, 10, 88, 134, 263], "separ": [9, 40, 41, 42, 78, 79, 80, 90, 91, 101, 115, 123, 139, 221, 248, 261, 267], "ag": [9, 42, 62], "race": [9, 41, 62], "hispan": [9, 35], "sex": [9, 40, 41, 61, 62], "summari": [9, 37, 40, 44, 46, 48, 51, 58, 62, 66, 77, 78, 79, 80, 82, 147, 247, 261, 263], "subject": 9, "tabl": [9, 11, 23, 27, 30, 32, 33, 35, 37, 38, 40, 44, 45, 49, 51, 58, 59, 60, 61, 62, 64, 67, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 85, 88, 89, 91, 92, 95, 96, 97, 98, 99, 101, 103, 108, 109, 110, 111, 113, 115, 117, 121, 123, 124, 125, 130, 131, 132, 134, 136, 137, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 163, 178, 179, 185, 187, 192, 195, 196, 197, 200, 201, 202, 204, 206, 207, 208, 214, 216, 217, 263, 264], "profil": [9, 228, 230, 231, 232, 233, 234, 235], "comparison": 9, "nation": [9, 90, 94, 106, 130], "50": [9, 230, 257], "district": 9, "columbia": 9, "puerto": 9, "rico": 9, "congression": 9, "metropolitan": 9, "area": [9, 11, 20, 23, 36, 176, 179, 181, 186], "place": [9, 36, 94, 95, 140, 144, 146, 179, 186, 221, 248, 250, 267], "65": 9, "000": [9, 20, 23, 135], "acs1": [9, 11, 13, 19, 23, 35], "indic": [9, 11, 23, 32, 40, 41, 61, 62, 70, 71, 75, 76, 79, 88, 91, 92, 93, 95, 101, 109, 137, 156, 207, 249], "collect": [9, 35, 40, 100, 146, 177, 179, 186, 189, 242, 250, 261], "over": [9, 42, 89, 90, 91, 96, 101, 115, 165, 171, 176, 177, 179, 180, 181, 189, 195, 200, 203, 209, 214, 216, 217, 263], "decad": 9, "1790": 9, "head": [9, 35], "famili": 9, "number": [9, 20, 23, 33, 35, 37, 40, 41, 48, 54, 61, 62, 73, 74, 79, 89, 90, 91, 101, 105, 115, 157, 192, 208, 226, 247, 249, 260, 261, 263], "person": [9, 48, 263], "five": 9, "categori": [9, 137], "pum": [9, 11, 13, 19, 23, 35], "microdata": [9, 35], "enabl": [9, 10, 221, 226, 267], "custom": [9, 14, 17, 23, 38, 101, 115, 140, 144, 168, 171, 176, 179, 181, 186, 221, 223, 224, 228, 244, 254, 263, 267], "free": 9, "charg": 9, "pretabul": 9, "product": [9, 221, 267], "zipcod": [9, 41, 90, 237], "tabul": 9, "interfac": [10, 14, 23, 96, 101, 131, 221, 222, 247, 252, 263, 267], "includ": [10, 11, 19, 23, 35, 36, 40, 44, 56, 90, 91, 95, 96, 108, 117, 123, 135, 136, 137, 139, 146, 168, 186, 220, 221, 223, 225, 228, 239, 248, 249, 260, 261, 263, 264, 266, 267], "main": [10, 40, 90, 96, 137, 139, 146, 163, 179, 186, 218, 223, 242, 245, 246], "tigerweb": [10, 36], "ftp": 10, "tiger": [10, 169], "shapefil": [10, 136, 137, 165, 167, 171, 177, 178, 180, 185, 188, 189, 264, 266], "download": [10, 20, 23, 33, 35, 42, 88, 94, 134, 136, 137, 138, 140, 142, 143, 144, 147, 149, 150, 155, 157, 161, 163, 164, 165, 171, 176, 178, 179, 181, 185, 186, 188, 189, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 208, 210, 215, 216, 217, 244, 250, 264, 266], "quick": [10, 221, 223, 224], "standard": [10, 11, 23, 44, 54, 90, 94, 120, 178, 185, 222, 247, 261, 267], "workflow": [10, 26, 30, 40, 44, 75, 76, 77, 78, 79, 80, 84, 85, 88, 96, 100, 137, 148, 149, 150, 179, 195, 198, 200, 203, 205, 214, 222, 224, 225, 261, 263, 267], "exist": [10, 11, 23, 49, 64, 89, 90, 91, 101, 115, 116, 117, 132, 135, 140, 146, 164, 177, 178, 185, 189, 221, 225, 227, 250, 264], "instal": [10, 36, 129, 141, 161, 224, 225, 267], "nsaph_util": [10, 11, 23, 36, 140, 144, 176, 239, 244, 263], "kei": [10, 11, 13, 19, 21, 23, 49, 64, 90, 102, 103, 139, 140, 143, 146, 148, 149, 151, 159, 161, 164, 247], "regist": [10, 40, 41], "conda": [10, 96, 225, 226, 228, 230, 263, 267], "kernal": 10, "recip": 10, "variabl": [10, 11, 13, 19, 23, 35, 36, 47, 61, 62, 90, 95, 104, 124, 140, 144, 174, 176, 177, 178, 179, 180, 181, 185, 186, 189, 200, 209, 214, 215, 216, 224, 226, 231, 232, 233, 234, 248, 257], "field": [10, 32, 33, 34, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 86, 87, 156, 157, 158, 162, 192, 207, 208, 213], "definit": [10, 36, 54, 89, 90, 91, 96, 98, 101, 103, 131, 261], "store": [10, 11, 23, 26, 44, 61, 62, 90, 93, 96, 107, 124, 130, 222, 225, 263, 267], "contribut": 10, "checklist": 10, "py": [10, 36, 90, 93, 96, 118, 179, 221, 236, 242], "get_census_data": [10, 19, 23], "api_geographi": [10, 19, 23], "assemble_data": [10, 35, 36], "dataplan": [10, 11, 23, 35, 36], "get_var_nam": [10, 11, 23], "add_geoid": [10, 11, 23], "adjust_geo_field": [10, 11, 23], "create_missing": [10, 11, 23], "write_data": [10, 11, 23, 31, 36], "calculate_dens": [10, 11, 23, 25, 36], "interpol": [10, 11, 23, 28, 30, 36, 170, 239, 248, 249, 263], "quality_check": [10, 11, 23], "write_schema": [10, 11, 23], "variabledef": [10, 11, 23], "get_var": [10, 11, 23], "do_queri": [10, 11, 23, 35], "calculate_var": [10, 11, 23], "census_info": [10, 35], "get_endpoint": [10, 13, 23], "get_varlist": [10, 13, 23, 35], "census_year": [10, 11, 13, 23, 35, 36], "get_area": [10, 20, 23], "download_geometri": [10, 20, 23], "cli": [10, 24, 36, 239, 263], "censuscontext": [10, 14, 23], "valid": [10, 14, 17, 23, 41, 54, 55, 94, 101, 115, 131, 137, 140, 144, 163, 176, 181, 195, 200, 203, 214, 236, 244, 247, 248, 254, 257], "except": [10, 38, 40, 47, 49, 54, 64, 90, 112, 116, 125, 127, 132, 135, 146, 230, 235, 236, 247, 250, 257], "censusexcept": [10, 16, 23], "load_county_cod": [10, 18, 23], "load_state_cod": [10, 18, 23], "util": [10, 36, 41, 44, 51, 56, 69, 78, 92, 93, 94, 100, 107, 118, 121, 124, 125, 130, 134, 140, 143, 144, 146, 153, 169, 170, 176, 187, 188, 221, 228, 244, 247, 250, 260, 262, 264, 265, 267], "frequent": 10, "contant": 10, "unreleas": 10, "index": [10, 27, 30, 37, 42, 44, 61, 62, 71, 75, 76, 79, 85, 88, 91, 96, 101, 108, 109, 117, 118, 125, 135, 136, 137, 148, 149, 150, 172, 178, 179, 181, 185, 196, 201, 206, 214, 239, 249, 258, 263, 264], "core": [11, 13, 23, 93, 110, 262, 264], "class": [11, 12, 14, 15, 17, 22, 23, 24, 25, 28, 29, 31, 35, 37, 45, 46, 47, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 66, 67, 84, 88, 90, 96, 98, 101, 102, 105, 107, 109, 111, 112, 114, 115, 117, 118, 123, 124, 130, 131, 133, 134, 137, 139, 146, 147, 159, 160, 163, 165, 166, 167, 168, 169, 171, 172, 175, 177, 179, 180, 181, 186, 187, 189, 191, 218, 219, 220, 226, 242, 244, 246, 247, 250, 251, 252, 254, 255, 256, 257], "yaml_path": [11, 23], "geometri": [11, 20, 23, 24, 30, 35, 168, 220], "2012": [11, 23, 39, 130, 195, 200, 203, 214], "2013": [11, 23, 78, 130, 195, 200, 203, 214], "2014": [11, 23, 130, 195, 200, 203, 214], "2015": [11, 23, 37, 76, 130, 140, 144, 164, 176, 179, 195, 200, 203, 214, 244], "2016": [11, 23, 104, 130, 140, 144, 164, 176, 179, 195, 200, 203, 214, 244], "2017": [11, 23, 78, 130, 140, 144, 164, 176, 179, 195, 200, 203, 214, 244], "2019": [11, 13, 20, 23, 24, 28, 36, 160, 195, 200, 203], "none": [11, 13, 14, 19, 20, 23, 41, 45, 46, 48, 51, 53, 54, 62, 63, 66, 67, 89, 90, 91, 97, 99, 101, 102, 103, 105, 109, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 130, 131, 133, 138, 139, 140, 143, 144, 146, 147, 164, 169, 176, 177, 178, 180, 181, 185, 186, 189, 191, 230, 244, 245, 247, 248, 250, 252, 257], "initi": [11, 23, 40, 50, 71, 79, 80, 88, 105, 110, 120, 140, 144, 176, 179, 224, 239, 244], "object": [11, 12, 14, 15, 17, 22, 23, 36, 46, 48, 67, 90, 91, 98, 101, 109, 115, 130, 140, 143, 144, 146, 147, 173, 178, 185, 186, 189, 191, 239, 244, 247, 249, 250, 254, 257], "census_yaml": 11, "geographi": [11, 19, 23, 36, 167, 168, 171, 174, 176, 177, 178, 179, 180, 181, 185, 186, 188, 189, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 214, 216, 217], "timefram": [11, 23], "interest": [11, 23, 42, 249, 263], "appli": [11, 23, 40, 48, 167], "That": [11, 23], "futur": [11, 13, 23, 96, 105], "now": [11, 23, 35, 36, 42, 49, 64, 96, 118], "besid": [11, 23, 90, 96, 221, 225, 263, 267], "default": [11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 98, 101, 111, 120, 140, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 168, 171, 176, 179, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 231, 232, 233, 234, 244, 248, 250, 267], "left": [11, 23, 38, 251], "exercis": [11, 23], "reader": [11, 23, 41, 48, 111, 112, 131, 146, 247, 250, 252, 260], "digit": [11, 19, 23, 38, 40, 41, 48, 62], "limit": [11, 19, 20, 23, 33, 36, 41, 49, 62, 64, 68, 73, 74, 79, 89, 90, 91, 101, 103, 111, 115, 116, 125, 127, 132, 135, 139, 157, 192, 208, 221, 230, 235, 236], "06": [11, 19, 23, 35, 134, 159], "ca": [11, 19, 23, 104], "member": [11, 23, 124, 140, 144, 176, 242, 244], "dict": [11, 23, 45, 47, 103, 112, 117, 118, 121, 124, 126, 131, 139, 146, 147, 250, 252], "panda": [11, 18, 19, 20, 23, 248, 257], "method": [11, 14, 17, 23, 35, 36, 96, 101, 115, 117, 139, 140, 144, 146, 176, 177, 178, 181, 185, 189, 244, 248, 249, 250, 254, 255, 256], "paramet": [11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 46, 48, 54, 61, 67, 68, 78, 89, 90, 91, 93, 96, 98, 101, 107, 109, 114, 115, 117, 120, 123, 125, 131, 137, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 163, 164, 166, 167, 170, 176, 177, 178, 179, 180, 181, 185, 186, 189, 191, 195, 200, 203, 214, 218, 231, 232, 233, 234, 244, 248, 249, 250, 254, 257, 261, 263, 267], "supported_out_format": 11, "geoid": [11, 20, 23, 127], "return": [11, 13, 14, 17, 18, 19, 20, 23, 48, 52, 54, 65, 94, 101, 105, 107, 114, 115, 117, 120, 123, 124, 127, 131, 132, 135, 139, 140, 143, 144, 146, 166, 167, 170, 176, 177, 178, 180, 181, 185, 186, 189, 244, 247, 248, 249, 250, 254, 257], "self": [11, 23], "string": [11, 13, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 120, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 248, 250], "singl": [11, 23, 37, 38, 40, 44, 47, 51, 54, 62, 79, 80, 81, 89, 90, 91, 96, 101, 115, 140, 144, 146, 176, 177, 189, 216, 221, 239, 244, 248, 250, 264], "column": [11, 23, 35, 36, 37, 42, 51, 54, 61, 62, 79, 80, 81, 88, 91, 95, 96, 101, 103, 112, 115, 117, 124, 130, 131, 132, 139, 143, 146, 166, 176, 177, 178, 179, 181, 185, 186, 189, 247, 248, 260], "combin": [11, 23, 37, 40, 44, 51, 61, 62, 79, 80, 81, 94, 146, 168, 171, 179, 220, 221, 250, 263, 267], "portion": [11, 23, 239, 263], "geograph": [11, 19, 23, 36, 139, 166, 167, 169, 176, 179, 181], "identifi": [11, 23, 40, 47, 61, 62, 103, 120, 167, 248, 261], "geo": [11, 19, 23, 169, 194, 209, 215], "min_year": [11, 13, 23, 36], "max_year": [11, 13, 23, 36], "row": [11, 23, 37, 40, 96, 107, 111, 112, 117, 121, 127, 131, 139, 146, 170, 189, 247, 250, 260], "geospati": [11, 23, 248], "id": [11, 23, 41, 47, 61, 77, 120, 150, 209, 215, 248], "file_typ": [11, 23, 58, 59, 60], "output": [11, 23, 46, 52, 54, 65, 88, 91, 98, 100, 101, 120, 136, 137, 139, 143, 146, 147, 163, 177, 179, 186, 189, 224, 235, 250], "disk": [11, 20, 23, 36], "sq_mi": [11, 20, 23, 36], "true": [11, 20, 23, 36, 38, 41, 61, 62, 63, 71, 90, 91, 94, 109, 112, 114, 117, 120, 121, 123, 127, 135, 140, 143, 144, 146, 164, 176, 179, 221, 230, 231, 232, 233, 234, 244, 250, 251], "param": [11, 23, 102, 143, 146, 221, 247, 250], "_sphinx_paramlinks_censu": [11, 23], "densiti": [11, 23, 25, 36], "denisti": [11, 23], "per": [11, 20, 23, 35, 36, 41, 44, 51, 79, 80], "squar": [11, 20, 23, 36, 170], "mile": [11, 20, 23, 36], "fals": [11, 23, 46, 61, 62, 89, 90, 91, 94, 99, 102, 117, 120, 123, 131, 135, 143, 146, 164, 169, 189, 221, 230, 231, 232, 233, 234, 235, 247, 250, 252], "meter": [11, 23], "ma": [11, 23, 104, 248], "fill": [11, 23, 38, 40], "minimum": [11, 13, 23, 90, 137, 144, 172, 181, 249], "maximum": [11, 23, 105, 137, 144, 172, 181], "test_fil": [11, 23, 91], "str": [11, 12, 13, 15, 17, 19, 22, 23, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 97, 99, 100, 101, 103, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 139, 140, 141, 144, 145, 146, 166, 167, 169, 176, 177, 178, 180, 181, 185, 187, 189, 242, 244, 245, 246, 247, 248, 250, 251, 252], "check": [11, 23, 35, 54, 114, 143, 146, 161, 239, 250, 257], "qualiti": [11, 23, 41, 44, 257, 261], "paradigm": [11, 23], "qc": [11, 23, 137, 139, 140, 163, 164, 239, 263], "filenam": [11, 23, 102, 146, 250], "table_nam": [11, 23, 31, 125, 132], "schema": [11, 23, 27, 31, 44, 46, 51, 54, 61, 62, 91, 94, 96, 101, 109, 115, 116, 123, 125, 131, 132, 147, 148, 149, 150, 187], "var_dict": [11, 23], "log": [11, 12, 15, 17, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 39, 40, 54, 68, 69, 70, 72, 73, 74, 81, 82, 83, 86, 87, 88, 89, 90, 91, 101, 115, 120, 146, 151, 153, 154, 156, 157, 158, 161, 162, 192, 193, 207, 208, 209, 211, 212, 213, 215, 221, 224, 226, 228, 230, 231, 232, 233, 234, 250], "logger": [11, 23, 120, 257], "repres": [11, 23, 40, 44, 54, 88, 90, 105, 106, 139, 170, 222], "dataset": [11, 13, 19, 23, 35, 36, 63, 96, 97, 107, 134, 178, 179, 180, 185, 189, 261], "has_den": [11, 23], "boolean": [11, 23, 40, 41, 68, 70, 71, 73, 75, 90, 247, 257], "whether": [11, 23, 41, 140, 144, 146, 164, 176, 224, 225, 244, 247, 250], "union": [11, 23, 45, 139], "calcualt": [11, 23], "censusdensitycontext": 12, "subclass": [12, 14, 15, 17, 22, 23, 37, 46, 53, 67, 98, 101, 109, 115, 140, 144, 147, 176, 177, 181, 189, 244, 254], "concret": [12, 14, 15, 17, 22, 23, 46, 67, 98, 101, 109, 115, 140, 144, 147, 176, 244, 254], "configur": [12, 14, 15, 17, 22, 23, 46, 67, 88, 96, 98, 109, 115, 123, 137, 143, 147, 163, 168, 173, 177, 181, 186, 189, 223, 224, 225, 228, 244, 254], "memeb": [12, 14, 15, 17, 22, 23, 46, 67, 98, 101, 109, 115, 140, 144, 147, 176, 244, 254], "_": [12, 14, 15, 17, 22, 23, 46, 67, 91, 98, 101, 105, 109, 115, 123, 140, 144, 147, 176, 244, 254], "charact": [12, 14, 15, 17, 22, 23, 37, 38, 40, 41, 46, 62, 67, 98, 101, 109, 115, 132, 140, 144, 146, 147, 176, 244, 250, 254, 260], "instanc": [12, 14, 15, 17, 22, 23, 46, 67, 90, 93, 98, 101, 105, 109, 115, 140, 143, 144, 146, 147, 176, 177, 178, 185, 186, 189, 191, 244, 247, 250, 254, 255, 256, 263], "text": [12, 14, 15, 17, 22, 23, 37, 40, 41, 46, 67, 98, 101, 105, 109, 115, 132, 135, 137, 140, 144, 146, 147, 176, 224, 244, 250, 251, 254, 260], "extract": [12, 14, 15, 17, 22, 23, 37, 40, 41, 42, 46, 48, 56, 61, 62, 67, 77, 98, 101, 109, 115, 127, 132, 137, 140, 144, 146, 147, 176, 178, 185, 244, 250, 254, 260, 261, 263], "initialize_log": [12, 15, 17, 22], "metadata": [13, 23, 41, 48, 54, 56, 60, 74, 88, 128, 146, 176, 177, 179, 181, 186, 189, 247, 250], "sum_fil": [13, 19, 23], "url": [13, 23, 90, 130, 146, 177, 178, 185, 189, 221, 224, 250], "endpoint": [13, 23], "datafram": [13, 19, 23, 134, 166, 167, 248, 250, 252, 257], "avoid": [13, 23, 88, 181], "noth": [13, 23, 48, 123, 143, 146, 177, 189, 221, 250], "construct": [13, 23, 40, 47, 91, 120, 123, 143, 146, 177, 178, 185, 186, 189, 191], "At": [13, 23, 41, 90, 186, 267], "point": [13, 23, 36, 40, 48, 165, 168, 171, 176, 177, 178, 179, 181, 185, 186, 189, 219, 220, 226, 247, 249, 267], "assum": [13, 23, 68, 78, 79, 80, 90, 101, 115, 221, 225, 263, 267], "expand": [13, 23, 150], "allow": [13, 23, 40, 41, 140, 144, 164, 176, 224, 244, 263, 267], "vari": [13, 23, 38, 41, 47, 62, 132], "max": [13, 23, 39, 40, 47, 61, 62, 77, 84, 87, 137, 261, 263], "inclus": [13, 23, 139, 140, 164], "context": [14, 23, 45, 51, 53, 56, 66, 67, 101, 109, 111, 114, 118, 123, 130, 131, 133, 137, 138, 139, 143, 146, 147, 163, 177, 181, 186, 189, 191, 230, 239], "attr": [14, 17, 23, 101, 107, 115, 140, 144, 176, 181, 244, 254], "overrid": [14, 17, 23, 88, 90, 91, 101, 115, 140, 144, 176, 181, 231, 232, 233, 234, 244, 254], "argpars": [14, 17, 23, 101, 115, 140, 144, 176, 181, 244, 254], "census_cli": 14, "censusqccontext": 15, "qc_log": [15, 29], "censusinterpolatecontext": 17, "resolut": [19, 23, 179, 261], "recommend": [19, 23], "environment": [19, 23, 261, 263], "go": [19, 23, 221, 226], "shorthand": [19, 23], "type": [19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 46, 48, 51, 54, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 101, 112, 115, 117, 118, 124, 131, 137, 140, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 167, 168, 174, 176, 177, 178, 179, 181, 185, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 230, 235, 244, 247, 250], "correct": [19, 23, 35, 87], "shape": [20, 23, 36, 137, 140, 141, 149, 151, 155, 161, 163, 164, 165, 166, 169, 171, 174, 176, 177, 178, 179, 180, 181, 185, 186, 189, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 214, 215, 216, 217, 218, 263], "due": [20, 23, 36], "100": [20, 23, 36, 62, 128, 172, 181], "block": [20, 23, 38, 88, 102, 105, 131, 146, 247, 250], "aren": [20, 23], "wrapper": [20, 23, 116, 140, 144, 146, 170, 176, 178, 239, 244, 250, 263, 267], "convert": [20, 23, 37, 40, 41, 54, 55, 63, 88, 89, 90, 91, 96, 101, 115, 260], "out_dir": [20, 23], "spatial": [20, 23, 179, 248, 261], "geojson": [20, 23], "save": [20, 23, 36, 47, 57, 96, 117, 134, 139, 146, 251], "multipl": [20, 23, 40, 41, 47, 62, 88, 90, 144, 176, 222, 225, 239, 244, 263, 264, 267], "tract": [20, 23, 36], "print": [21, 23, 35, 54, 88, 115, 118, 127, 128, 130, 131, 140, 144, 176, 181, 186], "censuswritecontext": 22, "http_proxi": [24, 25, 30, 148, 150], "api_kei": [24, 30, 137, 139, 140, 163, 164], "var_fil": [24, 30, 36], "1999": [24, 28, 36, 37, 39, 49, 58, 59, 64, 140, 144, 164, 176, 179, 195, 198, 200, 203, 244], "locat": [24, 25, 28, 29, 31, 84, 96, 186, 221, 226, 249], "pkl_file": 24, "pkl": [24, 25, 28, 29, 31], "in_pkl": [25, 28, 29, 31], "out_pkl": [25, 28], "databas": [26, 27, 30, 32, 34, 37, 39, 40, 44, 50, 54, 56, 59, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 98, 101, 105, 107, 110, 115, 117, 120, 121, 123, 130, 135, 136, 137, 148, 149, 150, 153, 156, 159, 160, 162, 179, 187, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 216, 217, 224, 225, 261, 267], "connect": [26, 27, 30, 32, 33, 34, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 101, 103, 107, 109, 111, 114, 121, 124, 127, 148, 149, 150, 152, 153, 156, 157, 162, 192, 195, 200, 203, 205, 207, 208, 212, 213, 214, 221, 224, 228, 267], "usual": [26, 30, 32, 33, 34, 35, 41, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 105, 123, 131, 148, 149, 150, 153, 156, 157, 162, 192, 195, 200, 203, 205, 207, 208, 212, 213, 214, 247, 267], "ini": [26, 30, 32, 33, 34, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 96, 102, 107, 148, 149, 150, 153, 156, 157, 159, 160, 162, 192, 195, 200, 203, 205, 207, 208, 212, 213, 214], "connection_nam": [26, 30, 32, 33, 34, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 107, 148, 149, 150, 153, 156, 157, 159, 160, 162, 192, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 216, 217], "registri": [26, 32, 33, 34, 37, 60, 68, 70, 71, 73, 74, 78, 82, 83, 85, 86, 89, 91, 98, 101, 114, 137, 156, 157, 158, 162, 163, 192, 195, 196, 200, 201, 203, 205, 207, 208, 211, 212, 213], "data_fil": [26, 101, 112, 117], "ingest_log": [26, 27, 30, 148, 149, 150, 195, 197, 200, 202, 203, 204, 205, 206, 214, 216, 217], "index_log": [26, 27, 30, 71, 75, 76, 148, 149, 150, 195, 196, 200, 201, 205, 206, 214], "vacuum_log": [26, 27, 30, 71, 75, 76, 148, 195, 197, 200, 202, 203, 204, 205, 206, 214], "ingest_error": [26, 30], "index_error": [26, 30], "vacuum_error": [26, 30], "sub": [26, 88, 95, 100, 179, 195, 198, 200, 203, 205, 216, 217], "db": [27, 88, 89, 90, 91, 96, 97, 98, 99, 101, 107, 113, 127, 227, 230], "index_err": [27, 71, 75, 76, 195, 196, 200, 201, 205, 206, 214], "ingest_err": [27, 150, 195, 197, 200, 202, 203, 204, 205, 206, 214, 216, 217], "vacuum_err": [27, 71, 75, 76, 195, 197, 200, 202, 203, 204, 205, 206, 214], "ingest": [27, 30, 33, 40, 44, 56, 71, 73, 74, 77, 84, 85, 89, 91, 94, 101, 105, 115, 123, 148, 149, 150, 157, 179, 192, 195, 197, 198, 200, 202, 203, 204, 205, 206, 208, 210, 264, 266], "upload": [27, 30, 136, 137, 148, 149, 150, 179, 197, 202, 204, 206], "vacuum": [27, 30, 71, 75, 76, 79, 85, 88, 136, 137, 148, 179, 197, 202, 204, 206, 214], "interpolate_data": 28, "do_qc": 29, "qc_file": [29, 30], "interpolate_year": 30, "density_var": 30, "assemble_pkl": 30, "interpolate_pkl": 30, "density_interp_pkl": 30, "density_no_interp_pkl": 30, "interp_out": 30, "interp_tablenam": 30, "interp_schema": 30, "no_interp_out": 30, "no_interp_tablenam": 30, "no_interp_schema": 30, "interp_qc_log": 30, "no_interp_qc_log": 30, "interp_pkl": 30, "interp_data": 30, "no_interp_data": 30, "make_log": 30, "touch": [30, 168, 220, 236], "census_assembl": 30, "census_interpol": [30, 36], "no_interp_dens": 30, "census_dens": 30, "interp_dens": 30, "no_interp_qc": 30, "census_qc": 30, "interp_qc": 30, "write_interp": 30, "census_writ": 30, "write_no_interp": 30, "out_fil": 31, "schema_nam": [31, 125, 132], "census_schema": 31, "index_build": [32, 70, 96, 156, 207], "build": [32, 40, 41, 70, 71, 75, 76, 79, 88, 90, 91, 95, 96, 109, 140, 144, 156, 176, 207, 225, 228, 230, 244, 264, 267], "displai": [32, 70, 156, 207], "real": [32, 41, 70, 137, 138, 142, 156, 207], "progress": [32, 70, 88, 96, 109, 146, 156, 179, 207, 224, 250], "model": [32, 33, 34, 36, 37, 38, 41, 46, 51, 56, 57, 60, 61, 62, 66, 70, 71, 73, 82, 83, 86, 88, 131, 147, 148, 149, 150, 156, 157, 158, 162, 179, 187, 192, 195, 197, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 264], "domain": [32, 34, 40, 68, 70, 71, 73, 75, 83, 86, 88, 89, 91, 96, 98, 101, 109, 111, 114, 115, 162, 192, 207, 212, 213, 264], "depends_on": [32, 33, 34, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 86, 87, 156, 157, 158, 162, 192, 197, 202, 204, 207, 208, 213, 216, 217, 230], "special": [32, 33, 34, 41, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 86, 87, 90, 146, 156, 157, 158, 162, 192, 207, 208, 213, 221, 250, 260, 267], "enforc": [32, 33, 34, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 86, 87, 156, 157, 158, 162, 192, 207, 208, 213], "execut": [32, 33, 34, 40, 51, 67, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 86, 87, 88, 91, 105, 107, 109, 110, 124, 125, 127, 132, 133, 143, 156, 157, 158, 162, 177, 179, 180, 186, 189, 191, 192, 207, 208, 213, 224, 226, 227, 239, 254, 255, 256, 263, 267], "stderr": [32, 33, 34, 68, 69, 70, 72, 73, 74, 81, 82, 83, 86, 87, 157, 158, 162, 192, 193, 207, 208, 209, 210, 211, 212, 213, 215], "data_load": [33, 40, 68, 73, 83, 88, 89, 96, 99, 157, 192, 208, 212], "pattern": [33, 35, 38, 40, 41, 48, 52, 54, 56, 58, 59, 60, 65, 71, 73, 74, 77, 78, 89, 90, 91, 101, 115, 123, 131, 166, 192, 208, 242], "thread": [33, 39, 40, 73, 74, 89, 90, 91, 101, 105, 115, 120, 157, 192, 208], "concurr": [33, 73, 74, 105, 157, 192, 208], "page_s": [33, 73, 74, 111, 157, 192, 208], "1000": [33, 40, 73, 74, 90, 111, 157, 172, 181, 192, 208, 226], "explicit": [33, 73, 74, 89, 90, 91, 101, 115, 157, 192, 208], "size": [33, 37, 40, 73, 74, 89, 90, 91, 101, 102, 115, 146, 157, 192, 208, 247, 248, 250, 260], "log_frequ": [33, 73, 74, 157, 192, 208], "long": [33, 73, 74, 88, 96, 157, 181, 189, 192, 208], "100000": [33, 40, 62, 73, 74, 157, 192, 208], "occur": [33, 73, 74, 139, 157, 192, 208], "record": [33, 40, 41, 42, 47, 48, 54, 56, 61, 62, 73, 74, 79, 89, 91, 93, 101, 111, 115, 137, 157, 167, 171, 192, 208, 247], "stop": [33, 73, 74, 105, 157, 192, 208], "aanalyz": [34, 86, 162, 213], "subsequ": [34, 40, 86, 91, 162, 213], "effici": [34, 40, 41, 44, 62, 86, 162, 213], "come": [35, 41, 166, 214], "differ": [35, 40, 41, 51, 68, 82, 90, 96, 131, 221, 225, 267], "resourc": [35, 36, 88, 136, 137, 225, 267], "been": [35, 41, 47, 54, 73, 89, 90, 91, 101, 115, 130, 139, 146, 177, 189, 226, 249, 250, 267], "familiar": 35, "varlist": 35, "f": [35, 39, 58, 112, 117, 131, 178, 185, 189, 224, 227, 235, 236, 248, 250], "len": 35, "10": [35, 42, 61, 62, 120, 139, 159, 160, 214, 230, 257], "accord": [35, 71, 73, 74, 77, 78], "34450": 35, "b19001b_014e": 35, "c02014_002e": 35, "b23023_070e": 35, "b07007pr_019e": 35, "b19101a_004": 35, "b24022_061e": 35, "b19001b_013e": 35, "c02014_003e": 35, "b07007pr_018e": 35, "googl": 35, "variable_nam": 35, "And": 35, "total": [35, 48, 172, 181], "femal": 35, "disabl": [35, 146, 250], "past": [35, 228], "12": [35, 61, 62, 134, 139, 181, 214], "month": [35, 40, 41, 49, 61, 64, 95, 104, 108, 134, 135, 137, 181, 214, 216, 217], "14": [35, 181], "hour": [35, 40, 172, 181, 228], "week": [35, 93], "48": 35, "49": 35, "select": [35, 37, 41, 42, 45, 47, 49, 52, 56, 61, 62, 64, 65, 87, 90, 96, 125, 127, 132, 135, 137, 140, 144, 263, 267], "beyond": 35, "scope": 35, "best": [35, 36, 40, 44, 47, 239, 267], "decid": [35, 93], "census_var": [35, 36], "hispanic_count": 35, "p004002": 35, "let": 35, "sai": [35, 40], "open": [35, 53, 131, 146, 177, 180, 189, 222, 239, 247, 250, 252, 267], "yaml_dict": 35, "fullload": 35, "my_var": 35, "variabledev": 35, "count_hispan": 35, "becom": [35, 42], "same": [35, 38, 40, 62, 90, 91, 94, 146, 247, 250, 252, 267], "conduct": 35, "analys": 35, "filter": [35, 42, 62, 95, 146, 176, 181, 250], "census_myvar_test": 35, "take": [35, 36, 40, 41, 51, 93, 228, 263, 267], "rather": [35, 38, 40, 90, 91, 267], "than": [35, 38, 40, 41, 90, 91, 105, 137, 138, 139, 142, 146, 186, 221, 248, 250, 267], "01": [35, 148, 159, 181], "75830": 35, "02": 35, "25852": 35, "04": 35, "1295617": 35, "05": [35, 235], "86866": 35, "10966556": 35, "comput": [35, 40, 49, 61, 64, 111, 116, 125, 127, 132, 135, 180, 189, 222, 267], "percentag": 35, "hispanic_pct": 35, "rerun": 35, "0": [35, 49, 61, 62, 64, 90, 97, 99, 102, 111, 116, 125, 127, 132, 135, 137, 146, 170, 178, 185, 221, 230, 235, 236, 249, 250], "017052": 35, "041236": 35, "252526": 35, "032493": 35, "323768": 35, "old": [36, 125], "prepar": [36, 40, 77, 111, 124, 136, 137, 141, 180, 189, 191], "ben": [36, 239], "find": [36, 63, 96, 103, 177, 178, 185, 189, 227], "automat": [36, 41, 44, 46, 90, 97, 102, 221, 264, 267], "made": [36, 263], "access": [36, 221, 263, 267], "would": [36, 42, 90, 91, 120, 221, 239], "y": [36, 49, 61, 64, 90, 130, 132, 135, 140, 144, 164, 166, 170, 171, 176, 178, 179, 185, 224, 228, 235, 244], "geom": 36, "d": [36, 51, 61, 78, 90, 127, 164, 170, 178, 179, 185, 224, 228, 230, 235, 247], "x": [36, 121, 132, 135, 166, 170, 171, 178, 185, 230, 235], "census_tract_2009_2019": 36, "them": [36, 38, 56, 90, 91, 93, 94, 96, 105, 140, 144, 176, 221, 222, 244, 267], "within": [36, 47, 78, 96, 131, 168, 220, 221, 225, 239], "creation": [36, 40, 77, 96, 101, 239, 263], "seri": [36, 38, 62, 90, 130], "tell": 36, "comb": 36, "usabl": 36, "analysi": [36, 44, 178, 185, 193, 222, 261], "still": 36, "practic": [36, 139, 140, 144, 176, 244], "reproducu": 36, "census_uninterpol": 36, "begin": [36, 41, 49, 64, 125, 132, 135], "weight": [36, 249], "averag": [36, 139, 239, 248, 249], "sinc": [36, 41, 97, 99, 102], "onward": 36, "2001": [36, 179, 195, 200, 203, 214], "2008": [36, 195, 198, 200, 203, 214], "seen": 36, "addit": [36, 40, 41, 62, 90, 117, 221, 225, 230, 235, 236, 248, 267], "fts2yaml": 37, "parser": [37, 41, 244, 247, 260], "both": [37, 40, 41, 93, 96, 101, 146, 168, 220, 221, 226, 228, 267], "create_schema_config": [37, 40], "interpret": [37, 177, 189], "introspect": [37, 88, 96, 101, 112, 115, 123, 147, 148, 149, 150, 264], "raw": [37, 39, 44, 53, 54, 56, 66, 71, 77, 78, 79, 80, 82, 139, 176, 179, 181, 195, 200, 203, 214], "random_selector": 37, "random": [37, 47, 52, 56, 65, 84, 87, 260], "awar": [37, 53, 223, 228], "match": [37, 38, 40, 47, 53, 59, 60, 90, 91, 103, 123, 166, 171, 239], "dat": [37, 48, 53, 54, 56, 63, 74, 78], "mcr_combine_t": [37, 38, 81], "dispar": [37, 79, 80, 81], "consolid": 37, "view": [37, 40, 44, 51, 61, 62, 67, 71, 77, 79, 80, 81, 85, 90, 94, 96, 101, 115, 135, 179], "medpar_convert": 37, "mcr_file": 37, "mcr_fts2csv": 37, "fwf": [37, 41, 48, 55, 88, 239], "mcr_fts2db": [37, 74], "mcr_registri": 37, "content": [37, 46, 57, 96, 139, 146, 221, 250], "mcr_sa": 37, "abstract": [37, 58, 88, 96, 98, 101, 131, 137, 163, 177, 189, 250], "mcr_sas2db": 37, "sa": [37, 40, 41, 44, 58, 59, 60, 78, 88, 91, 123, 128, 247, 260, 261], "7bdat": [37, 41, 58, 59, 60], "mcr_sas2yaml": 37, "corrupt": [37, 90], "ultim": 37, "attempt": [37, 38, 39, 40, 47, 88], "unsuccess": 37, "transfer": [37, 40, 41, 46, 66, 77, 82, 88, 96, 137, 146, 147, 163, 247, 261], "plain": [37, 40, 224, 228, 260], "posit": [37, 40, 48, 146, 247, 250, 260], "length": [37, 40, 62, 247, 260], "date": [37, 38, 39, 40, 41, 42, 44, 47, 61, 62, 90, 95, 104, 138, 139, 140, 142, 143, 148, 149, 151, 155, 164, 169, 176, 181, 186, 189, 195, 197, 200, 202, 203, 204, 205, 206, 209, 215, 224, 228, 247, 260], "arrai": [38, 41, 42, 61, 62, 106, 131, 170, 171, 195, 198, 200, 203, 205, 214, 249], "ssa3": [38, 41, 62, 130, 135], "cnty_cd": [38, 62], "bene_county_cd": [38, 62], "ssa_counti": [38, 62], "map": [38, 40, 72, 77, 88, 92, 96, 130, 134, 135, 150, 221, 231, 232, 233, 234], "neither": 38, "three": [38, 41, 62, 90], "null": [38, 40, 41, 47, 62, 132, 135, 137, 146, 231, 232, 233, 234, 235, 250], "without": [38, 42, 49, 64, 91, 105, 116, 125, 127, 132, 135, 146, 186, 221, 230, 235, 236, 250, 267], "appropri": [38, 41, 95, 96, 221, 225, 267], "rais": [38, 49, 54, 64, 90, 146, 247, 250, 254, 255, 256], "secur": [38, 62, 94, 96, 221, 267], "administr": [38, 62, 94, 221], "ssa": [38, 41, 62, 72, 88, 90, 94, 130, 135], "nber": [38, 62, 90, 94, 130], "org": [38, 47, 49, 61, 62, 64, 90, 105, 116, 125, 127, 130, 132, 135, 137, 138, 139, 140, 142, 170, 178, 185, 230, 235, 236], "crosswalk": [38, 62, 90, 94, 130], "certain": [38, 40, 42, 62, 78, 90, 91, 103, 123, 146, 167, 250], "patern": 38, "teh": 38, "cm": [38, 39, 40, 41, 44, 45, 47, 50, 53, 54, 55, 61, 62, 63, 65, 66, 71, 72, 73, 77, 78, 81, 82, 83, 87, 260, 261, 263], "mbsf_ab": [38, 41, 62], "mcr_bene_": [38, 41, 62], "mbsf_ab_2015": [38, 62], "p": [38, 40, 41, 44, 45, 47, 48, 51, 61, 62, 80, 83, 123, 127, 164, 212, 224, 228, 235, 263], "possibl": [38, 41, 44, 90, 95, 101, 115, 139, 146, 221, 224, 239, 250, 263, 267], "anoth": [38, 41, 82, 90, 92, 95, 96, 114, 123, 225], "dob": [38, 40, 41, 42, 47, 61, 62], "parse_d": [38, 62], "column_nam": [38, 62, 132, 137, 247], "to_dat": [38, 62, 189], "to_char": [38, 62, 132, 135], "00000000": [38, 62], "yyyymmdd": [38, 62], "postgresql": [38, 39, 40, 41, 43, 62, 77, 88, 90, 93, 96, 101, 102, 115, 116, 133, 224, 225, 228, 230, 263, 267], "abandon": 39, "favor": 39, "reproduc": [39, 267], "deliv": 39, "resdac": [39, 41, 47, 56, 61, 62, 260, 263], "com": [39, 47, 62, 93, 116, 117, 165, 178, 185, 224, 227, 228, 235, 249], "data_model": [39, 47, 90, 96], "maxdata_demograph": 39, "ci3_d_medicaid": [39, 40], "processed_data": [39, 47], "cms_medicaid": [39, 40], "data_cms_medicaid": 39, "demographics_pati": 39, "nf": 39, "nsaph_ci3": 39, "obtain": [39, 49, 64, 95, 116, 125, 127, 132, 135, 230, 235, 236], "script": [39, 47, 137, 163, 221, 263, 267], "1_create_demographics_data": [39, 47], "medicaid_mortality_": 39, "ps_patient": 39, "2_process_enrollment_data": 39, "cvd_admissions_": 39, "ci3_health_data": 39, "cvd": 39, "1999_2012": 39, "desouza": 39, "claim": [39, 130, 263], "2_create_cvd_data": 39, "sandbox01": [39, 179], "model2": [39, 90], "gz": [39, 89, 90, 91, 96, 101, 115, 177, 189], "nohup": [39, 40], "medicaid_mortality_2005": 39, "enrollments_year": 39, "5000": 39, "ip_pati": 39, "maxdata_": [39, 40, 89, 90, 91, 101, 115], "_ip_": 39, "echo": [39, 226, 235, 236], "10000": [39, 62, 91, 102, 250, 252], "center": [40, 44, 77, 168, 170, 220, 249, 251, 260, 261, 263], "analyt": [40, 77, 261, 263], "excel": [40, 263, 267], "semant": 40, "put": [40, 90, 96, 221], "framework": [40, 118, 222, 239, 263], "wrap": 40, "cwl": [40, 71, 75, 76, 77, 78, 79, 80, 84, 85, 88, 100, 137, 148, 149, 150, 195, 200, 203, 205, 214, 216, 217, 221, 224, 225, 227, 228, 230, 235, 261, 263, 264, 266, 267], "parse_ft": [40, 77], "pyhton": 40, "univers": [40, 49, 64, 90, 96, 116, 125, 127, 132, 135, 178, 185, 247, 267], "increment": [40, 70, 71, 73, 75, 89, 90, 91, 101, 115], "rce": [40, 41], "original_data": 40, "_ps_": [40, 89, 90, 91, 101, 115], "2021": [40, 116, 135, 160, 198, 235, 239], "09": [40, 134], "25": [40, 62], "21": 40, "37": 40, "four": [40, 41, 221, 267], "fulfil": [40, 96], "monthli": [40, 44, 61, 77, 85], "abov": [40, 41, 42, 91, 94, 221], "expos": 40, "thu": [40, 90, 96, 221], "hundr": [40, 93], "transpos": 40, "One": [40, 41, 42, 90, 179, 224, 267], "henc": [40, 41, 93, 221, 222, 267], "transposit": 40, "physic": [40, 222, 247], "think": 40, "virtual": [40, 90, 96, 101, 221, 267], "materi": [40, 61, 62, 68, 80, 90, 94, 96, 101, 135, 179], "world": [40, 178, 185, 261], "term": [40, 264], "built": [40, 42, 66, 89, 91, 96, 98, 101, 147, 221, 267], "even": [40, 41, 195, 200, 203, 214], "vast": 40, "amount": [40, 105, 172, 181], "non": [40, 44, 247, 249], "instantan": 40, "oper": [40, 41, 42, 62, 170, 267], "technic": [40, 41, 42, 90, 106], "quiri": 40, "often": [40, 260, 261, 267], "faster": [40, 105], "uniqu": [40, 143, 146, 248], "encrypt": [40, 47, 61], "agreement": [40, 230, 235, 236, 263, 267], "dua": 40, "chronic": [40, 261], "condit": [40, 42, 49, 62, 64, 90, 116, 125, 127, 132, 135, 137, 181, 230, 235, 236, 257, 261], "warehous": [40, 44, 261], "ccw": [40, 47, 61, 261], "protect": [40, 261, 263], "ident": [40, 114, 267], "unreli": 40, "7": [40, 47, 48, 61, 214, 267], "conflict": [40, 225], "birth": [40, 62], "death": [40, 41, 47, 62], "ethnic": 40, "80": 40, "eighti": 40, "offici": [40, 47], "assign": [40, 47, 177, 189], "team": [40, 47], "cross": [40, 47], "histor": [40, 47], "enterpris": [40, 47], "ecr": [40, 47, 49, 64], "receiv": [40, 47, 56, 139], "msis_id": [40, 47, 61], "state_cd": [40, 41, 47, 61], "ssn": [40, 47], "gender": [40, 47], "compar": [40, 47, 51, 93, 257], "against": [40, 47, 257], "exhaust": [40, 47], "stringent": [40, 47], "approxim": [40, 41, 47, 261], "8": [40, 47, 61, 93, 214, 229, 235], "particular": [40, 47, 94, 141], "reassign": [40, 47], "patient": [40, 44, 51, 58, 62, 77, 78, 79, 80], "exclud": [40, 41, 61, 62, 90, 91, 146, 250, 257], "inconsist": [40, 41, 47, 90], "BY": [40, 42, 45, 49, 62, 64, 90, 125, 127, 135, 137], "sql": [40, 41, 48, 72, 88, 93, 103, 109, 111, 117, 124, 127, 133, 186, 221, 261], "claus": [40, 42, 90], "rule": 40, "clearli": 40, "mark": 40, "duplic": [40, 41, 61, 62, 90], "count": [40, 41, 42, 45, 54, 61, 62, 84, 87, 96, 127, 132, 135, 137, 146, 250], "distinct": [40, 41, 49, 61, 62, 64, 132, 135, 261], "where": [40, 41, 42, 49, 61, 62, 64, 90, 91, 125, 132, 135, 137, 139, 140, 144, 168, 220, 221, 222, 224, 228, 247, 249, 264], "our": [40, 95, 105, 267], "dod": [40, 41, 61, 62], "race_ethnicity_cod": [40, 61], "earliest": [40, 41], "comma": [40, 41, 139, 261], "comm": 40, "dob_latest": [40, 41, 61, 62], "dod_earliest": [40, 41, 61, 62], "curat": 40, "variou": [40, 96, 103, 146, 239, 250, 263, 267], "strategi": [40, 167, 168, 174, 176, 177, 179, 180, 181, 189, 209, 214, 215, 216, 217], "establish": [40, 102], "later": [40, 56, 90, 263], "sop": 40, "systemat": 40, "neighbourhood": 40, "summar": [40, 263], "dure": [40, 41, 90, 96, 224, 228, 267], "compris": 40, "conveni": [40, 96], "state_iso": [40, 41, 61, 62], "iso": [40, 41, 77, 117, 135, 150], "residence_counti": [40, 41, 61, 62, 90], "resid": [40, 41, 267], "alphabet": [40, 41], "fips5": [40, 41, 61, 62, 90, 130, 135, 137], "zip": [40, 41, 42, 51, 61, 62, 72, 77, 88, 89, 90, 91, 92, 94, 96, 101, 104, 115, 132, 134, 136, 137, 139, 141, 146, 150, 161, 166, 167, 168, 169, 171, 177, 178, 179, 185, 186, 189, 194, 195, 198, 200, 203, 205, 209, 214, 215, 216, 217, 250], "months_elig": [40, 61], "months_dual_elig": [40, 61], "state_count": [40, 41, 61, 62], "di": [40, 41, 61, 62], "quot": [40, 61, 62, 90, 91, 121, 131, 189, 226], "fact": 40, "signal": 40, "could": 40, "detal": 40, "bill": [40, 41], "discharg": [40, 41], "icd": [40, 41, 42], "intermedi": [40, 62], "ip": [40, 48, 51, 61, 62, 79, 263], "jenni": 40, "lee": 40, "februari": 40, "two": [41, 42, 62, 77, 78, 90, 94, 96, 150, 177, 189, 221, 226, 228, 249, 267], "aka": [41, 62, 78, 79, 101, 115, 186, 226], "unfortun": [41, 93], "almost": 41, "pair": 41, "mbsf_ab_summari": 41, "mbsf_d_cmpnt": 41, "mbsf_abcd_summari": 41, "medpar_all_fil": 41, "similarli": 41, "insult": 41, "injuri": 41, "prior": 41, "preprocess": [41, 137, 209], "easier": 41, "join": [41, 42, 127, 139, 166, 171], "uniform": [41, 79, 80, 81, 96], "bene_id": [41, 42, 47, 49, 61, 62, 64], "intbid": 41, "qid": 41, "bid_5333": 41, "ssa_stat": 41, "state_cod": [41, 127, 135, 137], "bene_rsdnc_ssa_state_cd": 41, "medpar_bene_rsdnc_ssa_state_cd": 41, "bene_zip_cd": 41, "bene_zip": 41, "bene_mlg_cntct_zip_cd": 41, "medpar_bene_mlg_cntct_zip_cd": 41, "enrolyr": 41, "bene_enrollmt_ref_yr": 41, "rfrnc_yr": 41, "natur": [41, 42], "sno": 41, "trace": 41, "sas7bdat": [41, 88, 112, 128, 131], "width": [41, 48, 54, 55, 247, 260], "ft": [41, 44, 46, 53, 54, 56, 63, 73, 74, 77, 78, 247, 260, 261], "intend": [41, 96, 101, 115, 239, 263], "human": 41, "difficult": 41, "pars": [41, 44, 46, 48, 52, 54, 56, 65, 66, 77, 105, 147, 246, 247], "partial": 41, "reli": 41, "known": [41, 179, 249], "extarct": 41, "mbsf": [41, 62], "hospit": [41, 42], "medpar": [41, 62, 78, 79], "below": [41, 93, 96, 102, 178, 185, 221, 224, 228], "visual": [41, 91, 222], "extens": [41, 43, 91, 116, 132, 146, 250], "full": [41, 56, 136, 137, 146, 228, 250, 264, 266], "though": [41, 267], "divis": [41, 248], "pure": 41, "readabl": 41, "part": [41, 90, 93, 140, 144, 221, 225], "statement": [41, 92, 93, 96], "integ": [41, 62, 108, 146, 164, 250], "fips2": [41, 61, 62, 94, 108, 130, 135], "9": [41, 61, 118, 127, 214, 230], "split": [41, 44, 131], "zip4": [41, 62], "last": [41, 131, 139, 140, 164], "form": [41, 51, 90], "respons": [41, 90, 96, 101, 114, 135, 146, 250], "_p": [41, 44, 62, 80], "latter": [41, 96, 139], "fips3": [41, 62, 94, 108, 130, 135], "absent": [41, 143], "essenti": [41, 228, 263], "care": [41, 51, 61], "discrep": 41, "duplciat": 41, "show": [41, 89, 90, 91, 93, 121, 164, 179, 221], "greater": [41, 146, 250], "hll": [41, 62, 96, 132, 261], "hash": [41, 62, 90, 96, 132], "bene": [41, 62], "yearli": 41, "track": 41, "elig": [41, 44, 45, 49, 61, 64, 77, 85], "address": [41, 44, 137, 140, 221, 225, 239], "volatil": [41, 132, 135], "doe": [41, 42, 52, 55, 91, 146, 250, 254, 255, 256], "direct": [41, 92, 94, 172, 181, 267], "analog": 41, "word": [41, 96, 226], "leav": [41, 90], "arguabl": 41, "less": [41, 93, 137, 138, 142, 221], "sens": [41, 239, 267], "therefor": [41, 137, 221, 225, 228, 247, 267], "ssa2": [41, 62, 130, 135], "polici": [41, 94, 101], "arbitrari": [41, 221], "determinist": [41, 90], "encount": [41, 42, 44, 90], "ssa2_list": [41, 62], "ssa3_list": [41, 62], "reflect": 41, "associ": [41, 75, 76, 131, 186, 228, 263], "fips3_is_approxim": [41, 62], "taken": [41, 90, 94, 130, 186], "fips3_valdi": [41, 62], "mcr_ip_": [41, 62], "admission_d": [41, 42, 61, 62, 90], "discharge_d": [41, 42, 61, 62], "adm_day_of_week": [41, 62], "diagnos": [41, 62], "major": [41, 96], "diagnosi": [41, 42, 61], "pd_hll_hash": [41, 62], "icd_hll": [41, 62], "medicare_audit": [41, 62], "togeth": 41, "failur": 41, "distinguish": 41, "foreign": [41, 61, 90, 116], "sever": [41, 90, 146, 165, 250, 257, 263, 267], "expens": [42, 93], "explain": [42, 221, 223], "optim": [42, 44, 62, 91, 170], "samplequeri": 42, "primari": [42, 49, 61, 64, 90], "secondari": 42, "timestamp": [42, 49, 64, 137], "bene_ag": 42, "admiss": [42, 44, 48, 51, 58, 61, 62, 77, 78], "enrol": [42, 44, 45, 47, 58, 61, 62, 77, 78, 79, 80, 85], "beneficiari": [42, 44, 45, 47, 49, 61, 62, 64, 77, 78, 85], "29620": 42, "varchar": [42, 49, 61, 62, 64, 94, 108, 125, 132, 135, 137], "29633": 42, "AND": [42, 49, 61, 62, 64, 127, 132, 135], "18": [42, 221], "icd9": 42, "syntax": [42, 51], "explicitli": [42, 90, 91], "2962": 42, "fly": [42, 146, 250], "around": [42, 96, 146, 170, 221, 249, 250], "unnest": [42, 61, 132], "horribl": 42, "solut": [42, 267], "29621": 42, "g": [42, 56, 78, 88, 89, 90, 91, 95, 101, 115, 123, 140, 144, 148, 149, 150, 151, 152, 154, 155, 168, 170, 176, 177, 178, 181, 185, 186, 189, 220, 221, 224], "uml": 42, "websit": [42, 136, 137, 151, 152, 154, 169, 194, 217, 222, 261], "individu": [42, 44, 267], "aggreg": [42, 62, 87, 90, 96, 139, 144, 146, 150, 152, 160, 163, 164, 165, 171, 176, 177, 179, 181, 186, 189, 195, 197, 200, 202, 203, 204, 209, 214], "enrolle": 42, "IN": [42, 132], "2963": 42, "AS": [42, 49, 61, 62, 64, 116, 125, 127, 132, 135, 137, 230, 235, 236], "peopl": 42, "who": [42, 263], "desc": [42, 48, 54, 62, 135, 137], "background": 43, "info": [43, 54, 128, 226, 257, 261], "wikipedia": [43, 62, 261], "facilit": 43, "cleans": [44, 263], "dedupl": 44, "tip": 44, "src": [44, 90, 96, 148, 150, 179], "under": [44, 49, 64, 82, 91, 96, 116, 125, 127, 132, 135, 221, 230, 235, 236], "reusabl": [44, 96], "_elig": [44, 49, 61, 64, 77], "inpati": [44, 48, 51, 58, 62, 77, 78, 263], "_beneficiari": [44, 62], "_enrol": [44, 62, 80], "procedur": [44, 49, 50, 67, 92, 96, 110, 132, 221, 225, 267], "problem": [44, 221, 227, 267], "transact": [44, 73], "too": 44, "memori": [44, 88, 96, 105, 261], "helper": [44, 92, 94, 140, 144, 176, 244], "dbconnectionconfig": [45, 98, 101, 118, 130], "n": [45, 62, 105, 112, 117, 235, 242], "ord": [45, 54, 247], "verifi": [45, 84, 87], "expecteddata": 45, "cmsschema": [46, 66], "inpt": 46, "tp": 46, "reset": [46, 71, 89, 90, 91, 101, 115, 137, 140, 163, 164, 196, 201, 214, 250], "de_dupl": 47, "nsaphplatform": 47, "blob": [47, 61, 62, 178, 185, 249], "master": [47, 61, 62, 116, 165, 178, 185, 249], "intak": 47, "l29": 47, "l45": 47, "medicaid_script": 47, "seed": 47, "987987": 47, "correctli": [47, 93], "el_dod": [47, 48, 61], "l50": 47, "data_request": 47, "tree": [47, 221], "request_project": 47, "dec2019_medicaid_platform_cvd": 47, "remain": [47, 143, 239], "randomli": [47, 52], "l44": 47, "variat": 47, "across": [47, 222, 239, 263], "www2": [47, 169], "ccwdata": 47, "10280": 47, "19002246": 47, "guid": [47, 228], "pdf": 47, "723": [47, 61], "duplicatesexplor": 47, "init": [47, 48, 54, 66, 103, 221, 224, 228, 235], "explore_on": 47, "cursor": [47, 49, 51, 64, 117, 121, 125, 127], "explore_al": 47, "is_load": 47, "find_duplicate_d": 47, "date_typ": 47, "analyze_inconsistent_ag": 47, "arg": [47, 48, 50, 52, 54, 63, 65, 67, 102, 105, 110, 111, 141, 230], "tri": 48, "recogn": 48, "medicareft": 48, "type_of_data": 48, "cmsft": 48, "fts_path": [48, 52, 53, 55, 56], "on_after_read_fil": 48, "ftscolumn": 48, "callback": [48, 263, 267], "check_key_column": 48, "add_indic": 48, "medicaidft": 48, "medicaid_indic": 48, "el_dob": [48, 61], "el_sex_cd": [48, 61], "el_race_ethncy_cd": [48, 61], "c_type": 48, "c_format": 48, "c_width": 48, "label": [48, 146, 166, 186], "classmethod": [48, 53, 56, 59, 60, 63, 102, 103, 109, 112, 114, 115, 123, 140, 144, 167, 169, 176, 177, 189, 244, 250], "conv": [48, 54], "th": [48, 172, 179, 181, 198], "attribut": [48, 54], "ordin": [48, 247], "callabl": [48, 53, 101, 105, 114, 146, 250], "analyze_format": 48, "to_sql_typ": 48, "to_dict": 48, "to_fwf_column": 48, "po": [48, 54, 247], "fwfcolumn": [48, 247], "descriptor": [48, 247], "medicareftscolumn": 48, "long_nam": [48, 54], "short_nam": [48, 54], "nattr": 48, "medicaidftscolumn": 48, "6": [48, 61, 62, 214], "aliascolumn": 48, "alia": 48, "columnread": 48, "constructor": [48, 139, 140, 144, 176, 181, 247], "columnattribut": [48, 54], "end": [48, 49, 54, 61, 62, 64, 125, 132, 135, 148, 149, 151, 155, 164, 221, 247, 252], "mcr_type": 48, "file_nam": [48, 251], "guess": 48, "denot": [48, 90, 170, 247], "tupl": [48, 51, 53, 101, 103, 105, 131, 146, 178, 180, 185, 247, 250], "fist": 48, "element": [48, 146, 177, 178, 185, 189, 261], "second": [48, 93, 102], "decim": [48, 127], "copyright": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "c": [49, 64, 78, 116, 117, 125, 127, 132, 135, 164, 178, 179, 185, 221, 235, 263, 267], "2022": [49, 64, 125, 127, 132, 135, 139, 148], "engin": [49, 64, 116, 125, 127, 132, 135, 267], "faculti": [49, 64, 116, 125, 127, 132, 135], "art": [49, 64, 116, 125, 127, 132, 135], "scienc": [49, 64, 116, 125, 127, 132, 135, 222, 225, 267], "author": [49, 64, 116, 125, 127, 132, 135, 222], "michael": [49, 64, 116, 125, 127, 132, 135], "bouzini": [49, 64, 116, 125, 127, 132, 135], "licens": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "apach": [49, 64, 116, 125, 127, 132, 135, 221, 222, 225, 228, 230, 235, 236, 263], "complianc": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236, 267], "unless": [49, 61, 62, 64, 90, 91, 96, 116, 125, 127, 132, 135, 177, 189, 230, 235, 236], "applic": [49, 64, 116, 120, 125, 127, 132, 135, 139, 221, 222, 225, 228, 230, 235, 236, 247], "law": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "agre": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "distribut": [49, 64, 116, 125, 127, 132, 135, 226, 230, 235, 236], "basi": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "warranti": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "OR": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "OF": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "express": [49, 64, 90, 116, 125, 127, 132, 135, 214, 216, 230, 235, 236], "impli": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "govern": [49, 64, 90, 116, 125, 127, 132, 135, 148, 149, 150, 230, 235, 236, 261], "permiss": [49, 64, 116, 125, 127, 132, 135, 230, 235, 236], "replac": [49, 64, 90, 91, 121, 123, 125, 132, 135, 146, 221, 248, 249, 250], "create_eligibility_by_beneficiari": [49, 64], "plpgsql": [49, 64, 96, 125, 132, 135], "declar": [49, 64, 93, 125, 132, 135], "cur_bene_id": [49, 64], "bene_cursor": [49, 64], "FOR": [49, 61, 62, 64, 116, 125, 132], "NOT": [49, 62, 64, 116, 132, 221], "e2": [49, 64], "bene_rec": [49, 64], "loop": [49, 64, 125, 132], "insert": [49, 61, 62, 64, 88, 90, 96, 115], "INTO": [49, 64, 116, 132, 135], "_e": [49, 64], "commit": [49, 64, 73, 89, 90, 91, 101, 115], "notic": [49, 64, 230, 235, 236], "create_eligibility_by_year_st": [49, 64], "y_cursor": [49, 64], "generate_seri": [49, 64], "2030": [49, 64], "state_cursor": [49, 64], "state_id": [49, 61, 62, 64, 135], "us_stat": [49, 61, 62, 64, 77, 135, 150], "drop": [49, 64, 68, 83, 91, 101, 103, 109, 115, 117, 135, 212], "IF": [49, 64, 116, 132, 135], "cascad": [49, 64], "WITH": [49, 64], "NO": [49, 64, 137], "alter": [49, 61, 64, 125, 221], "medicaid_audit": [49, 61, 64], "durat": [49, 64], "interv": [49, 64, 89, 90, 91, 101, 115, 230], "s_rec": [49, 64], "y_rec": [49, 64], "init_cm": [50, 67], "extend": 51, "medicarecombinedview": 51, "dbtableconfig": [51, 98, 101], "supported_t": 51, "print_sql": 51, "generate_sql": 51, "get_tabl": 51, "table_sql": 51, "qtabl": 51, "get_column": [51, 103, 112], "static": [51, 56, 63, 66, 102, 103, 111, 112, 117, 139, 147, 166, 187], "candid": [51, 60], "ctype": 51, "small": [52, 84, 136, 137], "subset": [52, 84, 200, 260], "purpos": [52, 125, 135, 176, 181, 195, 200, 203, 205, 209, 264, 265, 267], "pii": 52, "selector": [52, 65], "ftstupl": 52, "root": [52, 90, 103, 230, 235], "fts_file": 52, "dat_path": [52, 53], "dat_fil": 52, "find_fts_tupl": 52, "destin": [52, 56, 63, 65, 137, 140, 144, 146, 163, 164, 176, 177, 179, 181, 187, 189, 242, 250], "threshold": [52, 65], "float": [52, 65, 108, 111, 127, 167, 170, 185, 247, 267], "share": [52, 65, 228, 267], "dictionari": [52, 65, 88, 90, 106, 137, 139, 146, 247, 250], "medicaredataload": 53, "dat4ft": 53, "fwfreader": [53, 247], "get_fil": [53, 101], "medparparseexcept": 54, "msg": [54, 247], "cannot": [54, 67, 95, 221, 247, 257, 263, 267], "columndef": 54, "medicarefil": 54, "dir_path": 54, "dest": [54, 129, 164, 179, 250], "manipul": [54, 61, 88, 91, 96, 98, 101, 103, 264, 265, 267], "read_record": [54, 247], "ln": 54, "slice": [54, 167], "assert": 54, "count_lines_in_sourc": 54, "count_lines_in_dest": 54, "statu": [54, 63, 226], "successfulli": [54, 247], "status_messag": 54, "messag": [54, 89, 90, 91, 164, 179, 226], "few": [56, 93, 221, 224, 226, 228], "my_data": 56, "medicareload": 56, "travers": [56, 58], "handle_empti": 56, "loader_for_csv": 56, "loaderconfig": [56, 91, 101, 114, 115, 123], "data_path": 56, "dataload": [56, 101], "loader_for_fwf": 56, "medicareregistri": 57, "registry_path": [57, 60], "init_registri": 57, "read_registri": 57, "semi": 58, "medicaresa": 58, "root_dir": [58, 60], "handle_sas_fil": 58, "file_path": [58, 59, 60, 123, 128, 131], "sasload": 59, "sasintrospector": 60, "add_sas_t": 60, "index_al": 60, "bool": [60, 63, 94, 99, 101, 102, 103, 114, 117, 124, 132, 135, 140, 144, 146, 169, 170, 176, 244, 247, 250, 251, 252], "dominici_data_pipelin": 61, "header": [61, 62, 90, 91, 146, 186, 247, 250], "audit": [61, 62, 90], "min": [61, 62, 137], "raceethn": [61, 62], "msi": [61, 62], "string_agg": [61, 62, 132, 135], "THEN": [61, 62, 132, 135], "children": [61, 62, 90], "max_elg_cd": 61, "max_yr_dt": 61, "11": [61, 214], "max_elg_cd_mo_1": 61, "max_elg_cd_mo_2": 61, "max_elg_cd_mo_3": 61, "max_elg_cd_mo_4": 61, "max_elg_cd_mo_5": 61, "max_elg_cd_mo_6": 61, "max_elg_cd_mo_7": 61, "max_elg_cd_mo_8": 61, "max_elg_cd_mo_9": 61, "max_elg_cd_mo_10": 61, "max_elg_cd_mo_11": 61, "max_elg_cd_mo_12": 61, "el_mdcr_ben": 61, "el_mdcr_ben_mo_1": 61, "el_mdcr_ben_mo_2": 61, "el_mdcr_ben_mo_3": 61, "el_mdcr_ben_mo_4": 61, "el_mdcr_ben_mo_5": 61, "el_mdcr_ben_mo_6": 61, "el_mdcr_ben_mo_7": 61, "el_mdcr_ben_mo_8": 61, "el_mdcr_ben_mo_9": 61, "el_mdcr_ben_mo_10": 61, "el_mdcr_ben_mo_11": 61, "el_mdcr_ben_mo_12": 61, "el_mdcr_dual": 61, "el_mdcr_dual_mo_1": 61, "el_mdcr_dual_mo_2": 61, "el_mdcr_dual_mo_3": 61, "el_mdcr_dual_mo_4": 61, "el_mdcr_dual_mo_5": 61, "el_mdcr_dual_mo_6": 61, "el_mdcr_dual_mo_7": 61, "el_mdcr_dual_mo_8": 61, "el_mdcr_dual_mo_9": 61, "el_mdcr_dual_mo_10": 61, "el_mdcr_dual_mo_11": 61, "el_mdcr_dual_mo_12": 61, "mc_combo": 61, "mc_combo_mo_1": 61, "mc_combo_mo_2": 61, "mc_combo_mo_3": 61, "mc_combo_mo_4": 61, "mc_combo_mo_5": 61, "mc_combo_mo_6": 61, "mc_combo_mo_7": 61, "mc_combo_mo_8": 61, "mc_combo_mo_9": 61, "mc_combo_mo_10": 61, "mc_combo_mo_11": 61, "mc_combo_mo_12": 61, "el_rstrct_bnft_flg": 61, "el_rstrct_bnft_flg_1": 61, "el_rstrct_bnft_flg_2": 61, "el_rstrct_bnft_flg_3": 61, "el_rstrct_bnft_flg_4": 61, "el_rstrct_bnft_flg_5": 61, "el_rstrct_bnft_flg_6": 61, "el_rstrct_bnft_flg_7": 61, "el_rstrct_bnft_flg_8": 61, "el_rstrct_bnft_flg_9": 61, "el_rstrct_bnft_flg_10": 61, "el_rstrct_bnft_flg_11": 61, "el_rstrct_bnft_flg_12": 61, "el_rsdnc_cnty_cd_ltst": 61, "zip9": 61, "el_rsdnc_zip_cd_ltst": 61, "renam": [61, 92, 96], "2005": [61, 195, 200, 203, 214], "substr": [61, 62, 139], "els": [61, 62, 127, 132, 135, 224], "00": [61, 135], "ps2": [61, 62], "eligibility_cod": 61, "dual": 61, "januari": [61, 62, 181], "managed_care_cod": 61, "manag": [61, 131, 222, 225, 261, 263, 267], "jan": 61, "medicare_elig": 61, "restrict": [61, 95, 104, 195, 200, 203, 205, 209], "benefit": 61, "primary_kei": [61, 62, 90], "eligibility_ys_idx": 61, "invalid": [61, 62], "ignor": [61, 90], "target": [61, 62, 90, 103, 117, 125, 139, 146, 177, 189, 230, 250], "admsn_dt": [61, 62, 90], "datetim": [61, 90, 118, 139, 189], "strptime": [61, 90], "srvc_end_dt": 61, "diag_cd_": 61, "required_before_loading_data": 61, "128": [61, 108], "adm_ys_idx": [61, 62], "source_column": 61, "yr_num": 61, "race_code_1": 61, "race_code_2": 61, "race_code_3": 61, "race_code_4": 61, "race_code_5": 61, "ethnicity_cod": 61, "el_ss_elgblty_cd_ltst": 61, "el_ss_elgblty_cd_mo": 61, "el_max_elgblty_cd_ltst": 61, "el_max_elgblty_cd_mo": 61, "el_mdcr_ann_xovr_old": 61, "msng_elg_data": 61, "el_mdcr_xovr_clm_bsd_cd": 61, "el_mdcr_ann_xovr_99": 61, "msis_to": 61, "msis_top": 61, "max_to": 61, "prvdr_id_nmbr": 61, "npi": 61, "taxonomi": 61, "type_clm_cd": 61, "adjust_cd": 61, "php_type": 61, "php_id": 61, "mdcd_pymt_amt": 61, "tp_pymt_amt": 61, "pymt_dt": 61, "chrg_amt": 61, "php_val": 61, "mdcr_coinsur_pymt_amt": 61, "mdcr_ded_pymt_amt": 61, "srvc_bgn_dt": 61, "diag_cd_1": 61, "diag_cd_2": 61, "diag_cd_3": 61, "diag_cd_4": 61, "diag_cd_5": 61, "diag_cd_6": 61, "diag_cd_7": 61, "diag_cd_8": 61, "diag_cd_9": 61, "prncpl_prcdr_dt": 61, "prcdr_cd_sys_1": 61, "prcdr_cd_1": 61, "prcdr_cd_sys_2": 61, "prcdr_cd_2": 61, "prcdr_cd_sys_3": 61, "prcdr_cd_3": 61, "prcdr_cd_sys_4": 61, "prcdr_cd_4": 61, "prcdr_cd_sys_5": 61, "prcdr_cd_5": 61, "prcdr_cd_sys_6": 61, "prcdr_cd_6": 61, "rcpnt_dlvry_cd": 61, "mdcd_cvrd_ip_dai": 61, "patient_status_cd": 61, "drg_rel_group_ind": 61, "drg_rel_group": 61, "ub_92_rev_cd_gp_1": 61, "ub_92_rev_cd_chgs_1": 61, "ub_92_rev_cd_units_1": 61, "ub_92_rev_cd_gp_2": 61, "ub_92_rev_cd_chgs_2": 61, "ub_92_rev_cd_units_2": 61, "ub_92_rev_cd_gp_3": 61, "ub_92_rev_cd_chgs_3": 61, "ub_92_rev_cd_units_3": 61, "ub_92_rev_cd_gp_4": 61, "ub_92_rev_cd_chgs_4": 61, "ub_92_rev_cd_units_4": 61, "ub_92_rev_cd_gp_5": 61, "ub_92_rev_cd_chgs_5": 61, "ub_92_rev_cd_units_5": 61, "ub_92_rev_cd_gp_6": 61, "ub_92_rev_cd_chgs_6": 61, "ub_92_rev_cd_units_6": 61, "ub_92_rev_cd_gp_7": 61, "ub_92_rev_cd_chgs_7": 61, "ub_92_rev_cd_units_7": 61, "ub_92_rev_cd_gp_8": 61, "ub_92_rev_cd_chgs_8": 61, "ub_92_rev_cd_units_8": 61, "ub_92_rev_cd_gp_9": 61, "ub_92_rev_cd_chgs_9": 61, "ub_92_rev_cd_units_9": 61, "ub_92_rev_cd_gp_10": 61, "ub_92_rev_cd_chgs_10": 61, "ub_92_rev_cd_units_10": 61, "ub_92_rev_cd_gp_11": 61, "ub_92_rev_cd_chgs_11": 61, "ub_92_rev_cd_units_11": 61, "ub_92_rev_cd_gp_12": 61, "ub_92_rev_cd_chgs_12": 61, "ub_92_rev_cd_units_12": 61, "ub_92_rev_cd_gp_13": 61, "ub_92_rev_cd_chgs_13": 61, "ub_92_rev_cd_units_13": 61, "ub_92_rev_cd_gp_14": 61, "ub_92_rev_cd_chgs_14": 61, "ub_92_rev_cd_units_14": 61, "ub_92_rev_cd_gp_15": 61, "ub_92_rev_cd_chgs_15": 61, "ub_92_rev_cd_units_15": 61, "ub_92_rev_cd_gp_16": 61, "ub_92_rev_cd_chgs_16": 61, "ub_92_rev_cd_units_16": 61, "ub_92_rev_cd_gp_17": 61, "ub_92_rev_cd_chgs_17": 61, "ub_92_rev_cd_units_17": 61, "ub_92_rev_cd_gp_18": 61, "ub_92_rev_cd_chgs_18": 61, "ub_92_rev_cd_units_18": 61, "ub_92_rev_cd_gp_19": 61, "ub_92_rev_cd_chgs_19": 61, "ub_92_rev_cd_units_19": 61, "ub_92_rev_cd_gp_20": 61, "ub_92_rev_cd_chgs_20": 61, "ub_92_rev_cd_units_20": 61, "ub_92_rev_cd_gp_21": 61, "ub_92_rev_cd_chgs_21": 61, "ub_92_rev_cd_units_21": 61, "ub_92_rev_cd_gp_22": 61, "ub_92_rev_cd_chgs_22": 61, "ub_92_rev_cd_units_22": 61, "ub_92_rev_cd_gp_23": 61, "ub_92_rev_cd_chgs_23": 61, "ub_92_rev_cd_units_23": 61, "15": [61, 127], "20": [62, 228, 257], "1900": [62, 189], "feder": [62, 90, 94, 130], "en": [62, 178, 185], "wiki": 62, "federal_information_processing_standard_state_cod": 62, "ansi": 62, "postal": [62, 94, 135], "cast": 62, "bene_dob": 62, "bene_birth_dt": 62, "yob": 62, "clacul": 62, "19000000": 62, "death_dt": 62, "bef_dod": 62, "bene_dod": 62, "bene_death_dt": 62, "bene_sex_ident_cd": 62, "ff": 62, "bene_race_cd": 62, "dod_ndi": 62, "certif": 62, "ndi": 62, "deathmbsf": 62, "ndi_death_dt": 62, "race_rti": 62, "triangl": 62, "institut": [62, 267], "rti": 62, "rti_race_cd": 62, "adminiss": 62, "medpar_": 62, "admission_date_raw": 62, "trim": 62, "999999999": 62, "medpar_admsn_dt": 62, "admsndt": 62, "discharge_date_raw": 62, "medpar_dschrg_dt": 62, "dschrg_dt": 62, "dschrgdt": 62, "medpar_admsn_day_cd": 62, "admsn_day_cd": 62, "admsndai": 62, "diag": 62, "medpar_dgns_cd_": 62, "dgns_cd0": 62, "dgns_cd": 62, "dgns_": 62, "n_cd": 62, "dgnscd": 62, "2003": [62, 130, 195, 200, 203, 214], "zip_to_fips3": [62, 135], "is_zip_to_fips_exact": [62, 94, 135], "fips3_list": 62, "ps_to_enrl_idx": 62, "yob_latest": 62, "age_min": 62, "validate_zip_fip": [62, 94, 135], "clean": [62, 228], "unifi": [62, 82], "hll_hashval": 62, "hyperloglog": [62, 261], "su": 62, "satisfi": [62, 90, 263, 267], "hll_add_agg": [62, 132], "hll_cardin": 62, "citusdata": 62, "basic": [62, 95, 140, 164], "hll_hash_text": 62, "bene_rsd_idx": 62, "bsy_idx": 62, "sy_idx": 62, "fips_idx": 62, "zc_idx": 62, "scz_idx": 62, "diag1": 62, "primary_diagnosi": 62, "array_remov": 62, "diag2": 62, "diag3": 62, "diag4": 62, "diag5": 62, "diag6": 62, "diag7": 62, "diag8": 62, "diag9": 62, "diag10": 62, "diag11": 62, "diag12": 62, "diag13": 62, "diag14": 62, "diag15": 62, "diag16": 62, "diag17": 62, "diag18": 62, "diag19": 62, "diag20": 62, "diag21": 62, "diag22": 62, "diag23": 62, "diag24": 62, "diag25": 62, "admission_year": 62, "hll_arr_agg": [62, 132], "adm_ysdz_idx": 62, "medparfileset": 63, "medparconvert": 63, "source_path": [63, 242], "verbos": [63, 91, 98, 101], "basepath": 63, "convert_dataset": 63, "design": [66, 147, 222, 267], "update_medicaid": 66, "update_medicar": 66, "built_in_registry_path": [66, 187], "advanc": [67, 91, 224, 228, 267], "dynam": 67, "populateconfig": 67, "tablepopul": 67, "ddl": [68, 75, 94, 96, 101, 103], "recreat": [68, 89, 90, 91, 101, 115, 195, 200, 214, 224], "By": [68, 90, 91, 120, 221, 225], "sloppi": [68, 91, 101, 115], "input_data": 68, "pg_json_dump": [69, 96, 153], "forc": [70, 89, 90, 91, 99, 101, 115], "shortcut": [71, 75, 76], "unpack": [71, 73, 74, 77, 78, 82, 214], "recurs": [71, 73, 74, 77, 78, 82, 88, 89, 90, 91, 101, 115, 221, 224, 228], "reset_log": [71, 195, 196, 200, 201, 214], "create_log": [71, 75, 76], "reset_err": [71, 195, 196, 200, 201, 214], "create_err": [71, 75, 76], "load_raw_medicaid": 71, "init_cms_db": 72, "pgpl": 72, "stdout": [72, 161], "err": [72, 74], "inspect": 73, "accompani": [74, 78, 96, 260], "yun": 76, "dbm": [77, 93, 261, 263, 267], "resource1_log": [77, 84, 150], "resource2_log": [77, 84, 150], "parse_log": [77, 84], "ps_reset_log": [77, 84], "ps_create_log": [77, 78, 80, 84], "ps_index_log": [77, 84, 85], "ps_vacuum_log": [77, 84, 85], "ip_reset_log": [77, 84], "ip_create_log": [77, 78, 79, 84], "ip_index_log": [77, 84], "ip_vacuum_log": [77, 84], "ben_create_log": [77, 84, 85], "ben_index_log": [77, 84, 85], "ben_vacuum_log": [77, 84, 85], "mnth_create_log": [77, 84, 85], "mnth_index_log": [77, 84, 85], "mnth_vacuum_log": [77, 84, 85], "enrlm_create_log": [77, 84, 85], "enrlm_index_log": [77, 84, 85], "enrlm_vacuum_log": [77, 84, 85], "elgb_prepare_log": [77, 84], "elgb_create_log": [77, 84, 85], "elgb_index_log": [77, 84, 85], "elgb_vacuum_log": [77, 84, 85], "admissions_reset_log": [77, 84], "admissions_create_log": [77, 84], "admissions_index_log": [77, 84], "admissions_vacuum_log": [77, 84], "parse_err": [77, 84], "ps_reset_err": [77, 84], "ps_create_err": [77, 78, 80, 84], "ps_index_err": [77, 84, 85], "ps_vacuum_err": [77, 84, 85], "ip_reset_err": [77, 84], "ip_create_err": [77, 78, 79, 84], "ip_index_err": [77, 84], "ip_vacuum_err": [77, 84], "ben_create_err": [77, 84, 85], "ben_index_err": [77, 84, 85], "ben_vacuum_err": [77, 84, 85], "mnth_create_err": [77, 84, 85], "mnth_index_err": [77, 84, 85], "mnth_vacuum_err": [77, 84, 85], "enrlm_create_err": [77, 84, 85], "enrlm_index_err": [77, 84, 85], "enrlm_vacuum_err": [77, 84, 85], "elgb_create_err": [77, 84, 85], "elgb_prepare_err": [77, 84], "elgb_index_err": [77, 84, 85], "elgb_vacuum_err": [77, 84, 85], "admissions_reset_err": [77, 84], "admissions_create_err": [77, 84], "admissions_index_err": [77, 84], "admissions_vacuum_err": [77, 84], "ensure_resourc": [77, 150], "presenc": [77, 150, 263], "letter": [77, 150], "abbrevi": [77, 150], "3166": [77, 117, 150], "us_iso": [77, 150], "load_p": 77, "load_ip": 77, "create_beneficiari": [77, 85], "matview": [77, 80, 85], "create_monthly_view": [77, 85], "create_enrol": [77, 85], "prepare_elig": 77, "prerequisit": [77, 221, 223, 224, 225], "create_elig": [77, 85], "load_admiss": 77, "least": [78, 222, 226, 249], "nb": [78, 221, 224, 228], "organ": [78, 96, 178, 185], "dicrectori": 78, "immedi": 78, "parent": [78, 90, 103, 107], "mbsf_abcd_xyzacdfrtwe_request12345": 78, "initdb_log": 78, "initdb_err": 78, "load_raw_log": 78, "load_raw_err": 78, "ps2_create_log": [78, 80], "ps2_create_err": [78, 80], "bene_view_log": [78, 80], "bene_view_err": [78, 80], "bene_table_create_log": [78, 80], "bene_table_index_log": [78, 80], "bene_table_vacuum_log": [78, 80], "bene_table_create_err": [78, 80], "bene_table_index_err": [78, 80], "bene_table_vacuum_err": [78, 80], "enrlm_view_log": [78, 80], "enrlm_view_err": [78, 80], "enrlm_table_create_log": [78, 80], "enrlm_table_index_log": [78, 80], "enrlm_table_vacuum_log": [78, 80], "enrlm_table_create_err": [78, 80], "enrlm_table_index_err": [78, 80], "enrlm_table_vacuum_err": [78, 80], "adm_create_log": [78, 79], "adm_create_err": [78, 79], "adm_populate_log": [78, 79], "adm_populate_err": [78, 79], "adm_index_log": [78, 79], "adm_index_err": [78, 79], "adm_vacuum_log": [78, 79], "adm_vacuum_err": [78, 79], "initdb": 78, "load_raw_data": 78, "load_raw_medicar": 78, "medicare_beneficiari": 78, "medicare_admiss": 78, "debug": [79, 120, 176, 181, 257], "create_ip": 79, "medicare_combine_t": [79, 80], "create_admissions_t": 79, "empti": [79, 90, 146], "populate_admissions_t": 79, "index_admissions_t": 79, "vacuum_admissions_t": 79, "ps2_index_log": 80, "ps2_vacuum_log": 80, "ps2_index_err": 80, "ps2_vacuum_err": 80, "create_p": 80, "create__ps_view": 80, "create_bene_view": 80, "preliminari": 80, "create_bene_t": 80, "create_enrlm_view": 80, "create_enrlm_t": 80, "examin": [82, 91, 158, 221, 223, 224, 226], "examnin": 82, "incompat": 82, "warn": [82, 257], "far": [82, 225], "compat": [82, 90], "subdirectori": [82, 91, 123, 221, 267], "delet": [83, 91, 212, 224], "previou": [83, 212, 239], "opt": [84, 148, 150, 159, 160, 221, 230, 231, 232, 233, 234], "airflow": [84, 88, 96, 148, 150, 159, 160, 225, 228, 230, 231, 232, 233, 234, 235, 261, 263, 267], "nsaph_test": 84, "mini_random_data": 84, "verification_log": 84, "verification_err": 84, "prcoess": 85, "index_p": 85, "vacuum_p": 85, "mediciad": 87, "wide": [88, 263, 267], "pg_keyword": 88, "keyword": 88, "parallel": [88, 89, 91, 96, 101, 105, 115, 148, 177, 186, 189], "miscellan": 88, "columnar": [88, 96, 112], "builder": [88, 109, 136, 137, 179], "monitor": [88, 96, 109, 137, 143, 146, 222], "tune": 88, "better": [88, 239], "tackl": 88, "incomplet": [88, 90], "hdf5": [88, 95, 96, 104, 107, 261], "quer": [88, 107], "collector": [88, 137, 146, 163, 177, 180, 189, 250], "executor": [88, 96], "pool": 88, "overflow": 88, "queue": [88, 96, 105], "localhost": [88, 93, 96, 102, 221, 226, 230, 231, 232, 233, 234], "host": [88, 91, 93, 96, 102, 116, 137, 143, 146, 221, 224, 225, 228, 231, 232, 233, 234], "resolv": [88, 96], "finder": 88, "sas_explor": 88, "hud": [88, 94, 134], "h": [89, 90, 91, 164, 179, 224, 228], "buffer": [89, 90, 91, 101, 115], "autocommit": [89, 90, 91, 98, 101], "exit": [89, 90, 91, 164, 179, 235, 236], "gzip": [89, 90, 91, 101, 115, 140, 144, 146, 164, 176, 179, 244, 250], "tar": [89, 90, 91, 101, 115], "tgz": [89, 90, 91, 101, 115], "archiv": [89, 90, 91, 98, 101, 115, 131, 146, 235, 250], "nsaph2": [89, 91, 93, 102, 116, 148, 150], "convent": 90, "role": 90, "knowledg": [90, 96, 103, 178, 185, 267], "linkag": 90, "gridmet": [90, 104, 127, 174, 176, 177, 178, 181, 185, 186, 187, 189, 194, 211, 212, 261, 263, 264, 265, 266], "forest": 90, "treelik": 90, "my_domain": 90, "fro": 90, "ye": [90, 137], "auto": 90, "extern": [90, 146, 263, 267], "itself": [90, 221, 263, 267], "quote_minim": [90, 91], "minim": 90, "quote_al": 90, "quote_nonnumer": 90, "nonnumer": 90, "quote_non": 90, "hard_link": 90, "integr": 90, "relationship": 90, "child": 90, "upon": 90, "never": 90, "ehnc": 90, "mostli": [90, 221], "trigger": [90, 226], "behaviour": 90, "normal": [90, 96, 221], "tabular": 90, "multi_column": 90, "whose": [90, 170], "theoret": 90, "occupi": 90, "storag": [90, 143], "were": 90, "referenc": 90, "curli": 90, "bracket": 90, "fips_dict": 90, "sequenti": [90, 186], "spell": 90, "btree": [90, 108], "dialect": 90, "index_column": 90, "nrc": [90, 106], "usda": [90, 106], "wp": [90, 106], "portal": [90, 106, 134], "nra": [90, 106], "nri": [90, 106], "cid": [90, 106], "nrcs143_013696": [90, 106], "hard": 90, "usag": [90, 116, 132, 137, 179, 227, 231, 232, 233, 234, 267], "nest": [91, 123], "crate": [91, 123], "rel": [91, 123, 172, 181, 228], "o": [91, 123, 221, 235, 239, 263], "underscor": [91, 123], "good": 91, "idea": 91, "whitespac": 91, "edit": [91, 221, 224], "preserv": 91, "project_load": 91, "my_schema": 91, "valuabl": 91, "my_temp_schema": 91, "postgr": [91, 93, 102, 221, 224, 227, 230, 231, 232, 233, 234], "temporari": [91, 146, 250], "increas": [91, 249], "ram": 91, "retriev": [91, 95, 136, 137, 200, 267], "projectload": [91, 123], "__doc__": 91, "instanti": [91, 244], "lookup": [92, 94], "climat": [93, 95, 186, 259, 263, 264], "pollut": [93, 137, 138, 142, 179, 215, 259, 264, 266], "venv": 93, "bin": [93, 179, 235, 236], "next": [93, 247], "pip": [93, 165], "mimic": [93, 102], "mimicii": [93, 102], "password": [93, 102, 116, 224, 227], "cluster": [93, 102, 222, 267], "uni": [93, 102], "dbuser": [93, 102], "ssh_user": [93, 102], "johndo": [93, 102], "my": 93, "laptop": 93, "ssh": [93, 96, 102], "tunnel": [93, 96, 102], "mbouzini": 93, "usernam": [93, 132, 224, 226, 227], "million": 93, "easili": 93, "did": 93, "cost": 93, "tutori": 93, "minut": [93, 228], "suggest": 93, "pai": 93, "attent": [93, 267], "scan": 93, "usp": [94, 134], "depart": 94, "urban": 94, "offic": 94, "pd": 94, "ssa2fip": 94, "zip2fip": [94, 135], "hud_zip2fip": [94, 108, 134, 135], "zip_to_fip": [94, 135], "unambigu": 94, "otherwis": [94, 139, 143], "potenti": [95, 96, 172, 181], "crude": 95, "wil": 95, "dispatch": [95, 96], "reuqest": 95, "determin": [95, 146, 250], "prototyp": 95, "search": [95, 139], "dai": [95, 139, 177, 178, 181, 185, 189], "necessarili": 95, "iin": 95, "home": [96, 137, 139, 179, 228, 235, 239, 264], "gi": [96, 264, 265], "jsonlin": 96, "bound": [96, 105], "intens": [96, 222], "flux": 96, "commonwl": 96, "superset": [96, 263], "brief": 96, "overview": [96, 223, 264], "deprec": [96, 97, 99, 102], "deploy": [96, 221, 262, 264, 267], "plugin": 96, "easi": 96, "datasourc": 96, "probabl": [96, 146, 221], "dashboard": 96, "toolkit": [96, 137, 139, 140, 144], "focus": 96, "flat": 96, "readm": [96, 146, 224, 228, 250], "concept": [96, 223], "auxiliari": 96, "mainten": 96, "task": [96, 105, 137, 143, 163, 173, 179, 180, 186, 218, 224], "dataread": [96, 111, 131], "transpar": 96, "Its": 96, "hdf5_export": 96, "pg": 96, "net": 96, "threadpoolexecutor": [96, 105], "prevent": 96, "oom": [96, 105, 261], "huge": [96, 105], "abl": [96, 179, 221], "accomod": 96, "downstream": 96, "workspac": [96, 141], "example_request": 96, "handler": 96, "resource1": 96, "resource2": 96, "wheel": [96, 238], "deploi": [96, 222, 224, 225, 228, 264], "nativ": 96, "dbmss": 96, "grant": [96, 116, 132], "privileg": 96, "anybodi": 96, "health": [96, 230, 259, 263, 264, 265], "territori": 96, "genindex": 96, "modindex": 96, "add_gis_column": [97, 113], "dry": [98, 101], "commonconfig": [98, 101, 133], "create_t": [99, 103], "set_tabl": 101, "print_ddl": 101, "print_table_ddl": 101, "insert_from_select": 101, "is_parallel": 101, "get_connect": 101, "has_been_ingest": 101, "rollback": 101, "close": [101, 102, 131, 247, 252], "import_data_from_fil": 101, "enumer": [101, 115, 189, 257], "dataloaderact": [101, 115], "introduct": [101, 223, 264], "multi": [101, 222], "nomenclatur": 101, "credenti": 102, "silent": [102, 127], "app_name_postfix": [102, 127], "default_filenam": 102, "default_sect": 102, "read_config": 102, "host_nam": 102, "resolve_host": 102, "default_port": 102, "connect_to_databas": 102, "connect_via_tunnel": 102, "get_database_typ": 102, "test_connect": 102, "resultsetdeprec": [102, 107], "kwarg": [102, 105, 111], "psycopg2": [102, 127, 230, 238], "realdictcursor": [102, 127], "dedic": [103, 228], "spec": 103, "set_sloppi": 103, "list_column": 103, "list_source_column": 103, "has_hard_linked_children": 103, "fqn": [103, 121, 124], "find_depend": 103, "spillover_t": 103, "append_ddl": 103, "get_select_from": 103, "ddl_for_nod": 103, "node": [103, 131], "generate_insert_from_select": 103, "create_object_from": 103, "obj_typ": 103, "map_selected_column": 103, "selected_column": 103, "cdef": 103, "pdef": 103, "create_true_t": 103, "need_index": 103, "get_index_ddl": [103, 117], "add_index_by_ddl": 103, "get_multi_column_index_ddl": 103, "add_index": [103, 107], "is_arrai": 103, "is_gener": 103, "extract_generation_cod": 103, "other_column": 103, "qualifi": [103, 131], "get_column_typ": 103, "has_column_spec": 103, "column_spec": 103, "view_column_spec": 103, "table_fqn": 103, "find_mapped_column_nam": 103, "column1": 103, "table2": 103, "view_column_join": 103, "list_identifi": 103, "create_stat": 103, "list_of_t": 103, "add_fk_valid": 103, "pk": 103, "pt": 103, "fk_column": 103, "parse_wildcard_column_spec": 103, "is_column_wildcard": 103, "get_columns_as_dict": 103, "request_148302": 104, "sitecod": 104, "tmmx": [104, 127, 172, 178, 179, 181, 185, 198], "rmax": [104, 127, 172, 179, 181, 198, 200], "ferndal": 104, "allston": 104, "newton": 104, "capac": 105, "reach": 105, "until": [105, 249], "signific": 105, "lead": 105, "danger": [105, 172, 181], "caus": [105, 225], "thread_initi": 105, "blockingthreadpoolexecutor": 105, "max_queue_s": 105, "timeout": [105, 230], "max_work": 105, "thread_name_prefix": 105, "worker": 105, "initarg": 105, "_blockingthreadpoolexecutor__fn": 105, "schedul": [105, 189, 222, 227, 230], "fn": 105, "wait_for_complet": 105, "wait": [105, 224], "clear": [107, 137, 143, 163, 224], "idx": [107, 125], "append": [107, 146, 250], "type_nam": [107, 137], "to_hdf5": 107, "dtype": [107, 257], "map2d": 107, "path_to_user_request": 107, "db_ini": 107, "fips2i": 108, "fips3i": 108, "zip5": 108, "res_ratio": [108, 135], "bus_ratio": 108, "oth_ratio": 108, "tot_ratio": 108, "usps_zip_pref_c": 108, "usps_zip_pref_st": 108, "z2f_zip_idx": 108, "ON": [108, 116, 132], "z2f_zip2_idx": 108, "z2f_cnty_idx": 108, "z2f_f2i_idx": 108, "z2f_f2s_idx": 108, "z2f_f3i_idx": 108, "z2f_f3s_idx": 108, "z2f_zfs1_idx": 108, "z2f_zfs2_idx": 108, "z2f_yzip_idx": 108, "z2f_yzip2_idx": 108, "z2f_ycnty_idx": 108, "find_nam": [109, 133], "indexerconfig": 109, "indexbuild": 109, "cnxn": [109, 127], "print_stat": 109, "drop_al": 109, "act": 109, "load_data": 110, "sql_file": 110, "get_sql_dir": 110, "me": 110, "init_cor": 110, "parse_arg": 110, "root_table_nam": 111, "read_batch": 111, "import_fil": 111, "log_step": 111, "1000000": 111, "push": 111, "batch": [111, 221], "drilldown": 111, "get_autocommit": 111, "log_progress": [111, 117], "timer": 111, "get_thread_tim": 111, "get_tim": 111, "get_cumulative_tim": 111, "stamp_tim": 111, "get_timestamp": 111, "reset_tim": 111, "column_name_replac": [112, 117], "load_rang": [112, 117], "csv_reader": [112, 117], "unquot": [112, 117], "fopen": [112, 117, 137, 146, 163, 250], "handle_csv": 112, "handle_json": 112, "sas2db_typ": 112, "handle_sa": 112, "append_sql_column": 112, "load_csv": 112, "load_fst": 112, "load_sa": 112, "load_json": 112, "guess_str": 112, "v": [112, 172, 179, 181, 235, 250, 252, 264], "v2": 112, "precis": 112, "max_val": 112, "guess_typ": [112, 117], "reconcil": 112, "cell_typ": 112, "column_typ": 112, "db_type": 112, "append_file_column": 112, "append_record_column": 112, "classifi": 112, "inconsistenttyp": 112, "diff": 114, "iter": [114, 167, 226, 251], "loaderbas": 114, "find_file_in_path": 114, "fname": 114, "get_domain": 114, "get_pid": 114, "connxn": [114, 133], "execute_with_monitor": 114, "on_monitor": 114, "log_act": [114, 133], "pid": [114, 118], "towardsdatasci": 116, "ebec152827f3": 116, "postgres_fdw": 116, "server": [116, 148, 149, 150, 222, 267], "127": 116, "port": [116, 225, 230, 239], "5432": [116, 221, 230, 231, 232, 233, 234], "dbname": 116, "admin": [116, 224, 227], "TO": [116, 125, 132], "index_method": 117, "customcolumn": 117, "extraction_method": 117, "extract_valu": 117, "input_sourc": 117, "metadata_fil": 117, "get_entri": [117, 137, 146, 163, 250], "concurrent_indic": 117, "to_dir": 117, "add_column": 117, "make_column": 117, "include_in_index": 117, "make_fips_column": 117, "make_iso_column": 117, "anchor": 117, "simplemap": 117, "citi": 117, "parse_fips12": 117, "make_int_column": 117, "build_indic": 117, "type_from_metadata": 117, "add_data": [117, 197, 202, 204, 216], "copy_data": 117, "t0": 117, "t1": 117, "char": [117, 247], "statist": [118, 168, 177, 189, 220, 261], "dbactivitymonitor": 118, "get_indexing_progress": 118, "get_act": [118, 244], "lib": [118, 230], "msg_len": 118, "32": [118, 221], "get_hostname_as_localhost": 119, "app_nam": 120, "init_log": 120, "with_thread_id": 120, "func": [120, 140, 144, 176, 244], "conn": 121, "flush": [121, 189, 250], "result_set": 121, "dump": [121, 127, 139], "fd": 121, "corrector": 121, "import_t": 121, "add_state_fip": 121, "is_relative_to": 123, "purepath": 123, "remove_ext": 123, "new_domain": 123, "save_registri": 123, "user_request": 124, "find_tabl": 124, "generate_select": 124, "collect_t": 124, "generate_from": 124, "aux": 124, "generate_wher": 124, "used_t": 124, "all_tabl": 124, "reduce_t": 124, "generate_order_bi": 124, "aim": [125, 165, 263], "indici": 125, "rename_indic": 125, "i_cursor": 125, "schemanam": 125, "indexnam": 125, "pg_index": 125, "tablenam": 125, "new_nam": 125, "cmd": [125, 230], "get_resource_dir": 126, "name2path": 126, "get_resourc": 126, "sy": 127, "avg": [127, 137], "273": 127, "rmin": [127, 172, 179, 181, 198, 200], "arithmetic_mean": [127, 137], "pm25": [127, 136, 137, 139, 140, 144, 148, 149, 150, 151, 152, 154, 155, 159, 163, 164, 178, 185, 214, 216, 217], "county_tmmx": 127, "county_rmin": 127, "r1": 127, "observation_d": [127, 132], "county_rmax": 127, "r2": 127, "county_interp": 127, "pm25_daili": [127, 160], "date_loc": [127, 137], "county_cod": [127, 135, 137], "def": 127, "db_ini_fil": 127, "db_conn_nam": 127, "sample_queri": 127, "cursor_factori": 127, "k": [127, 172, 181, 249], "isinst": 127, "__name__": 127, "__main__": 127, "argv": 127, "simul": 128, "ssafil": 130, "ssa5": 130, "set_year": 130, "meta": [130, 179, 247], "basenam": [131, 137, 146, 163, 250], "fulli": 131, "piec": 131, "dot": 131, "entry_to_path": 131, "arcjv": 131, "csvlikejsonread": 131, "returns_map": [131, 252], "buffer_s": [131, 250, 252], "has_head": 131, "delimit": 131, "open_fst": 131, "open_csv": 131, "lambda": 131, "open_sas7bdat": 131, "open_fwf": 131, "open_json": 131, "get_path": 131, "regex": 131, "count_row": 132, "bigint": 132, "bodi": [132, 135], "cnt": [132, 135], "estimate_row": 132, "reltupl": 132, "pg_class": 132, "oid": 132, "regclass": 132, "has_column": 132, "information_schema": 132, "table_schema": 132, "get_year": 132, "anyel": 132, "yr": 132, "elsif": 132, "zip_as_text": 132, "immut": [132, 135], "btrim": [132, 135], "00000": [132, 135], "grant_select": 132, "sch": 132, "nspname": 132, "pg_namespac": 132, "arr": 132, "anyarrai": 132, "hx": 132, "hll_hash_ani": 132, "hy": 132, "hudus": 134, "usps_crosswalk": 134, "zip2fipscrosswalk": 134, "url_pattern": 134, "zip_county_": 134, "xlsx": 134, "m2q": 134, "03": [134, 181], "quarter": 134, "ratio": 135, "num_counti": 135, "exact": [135, 267], "fips": 135, "z2f_yz1_idx": 135, "z2f_z2_idx": 135, "z2f_r_idx": 135, "z2f_c_idx": 135, "z2f_exact_idx": 135, "_year": 135, "_zip": 135, "ex": 135, "fips2stat": 135, "state_fip": 135, "fips2state_iso": 135, "state2ssa2": 135, "fips2ssa3": 135, "airnow": [136, 141, 142, 149, 155, 163, 179, 261, 263, 264, 266], "airnowprocess": [136, 137], "aq": [136, 138, 142, 146, 148, 149, 151, 155, 163, 261, 263, 264, 266], "annual": [136, 144, 146, 150, 152, 163, 164], "no2": [136, 137, 139, 140, 144, 148, 149, 150, 151, 152, 154, 155, 163, 164], "nitrogen": [136, 137], "daili": [136, 144, 146, 152, 163, 164, 172, 179, 181, 195, 200, 203, 209, 261], "particl": [136, 137], "tuner": [136, 137, 179], "airnowapi": [137, 138, 139, 140, 142], "webservic": [137, 138, 142], "reliabl": [137, 138, 142], "compon": [137, 172, 181, 223, 263, 264, 265], "airnowdownload": [137, 139, 163], "dump_csv": [137, 139, 163], "write_csv_head": [137, 139, 163], "download_rang": [137, 139, 163], "ozon": [137, 139, 140, 144, 163, 164], "pm10": [137, 139, 140, 163, 164], "co": [137, 139, 140, 163, 164], "so2": [137, 139, 140, 163, 164], "airnowcontext": [137, 138, 139, 140, 163], "enum": [137, 140, 146, 163, 165, 171, 179, 181, 218, 244], "start_dat": [137, 139, 140, 163, 164], "compress": [137, 140, 144, 163, 164, 176, 179, 244], "end_dat": [137, 139, 140, 163, 164], "cfg": [137, 140, 163, 164], "proxi": [137, 140, 148, 149, 150, 151, 152, 155, 159, 160, 163, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 214, 217, 221], "airnow_setup": [137, 161, 163], "setup": [137, 141, 163, 221, 225, 236], "airnow_shap": [137, 155, 163], "download_shap": [137, 142, 163, 169, 171, 188], "collect_download": [137, 143, 163], "is_download": [137, 143, 146, 163, 250], "max_temp": [137, 144, 163, 164], "min_temp": [137, 144, 163, 164], "aqscontext": [137, 143, 144, 146, 163], "merge_year": [137, 144, 146, 163, 164], "cardin": [137, 140, 163, 244], "aqs_expand": [137, 154, 163], "expand_data": [137, 145, 163], "add_monitor_kei": [137, 146, 163], "download_data": [137, 146, 148, 149, 163], "destination_path": [137, 146, 163], "collect_annual_download": [137, 146, 163], "collect_daily_download": [137, 146, 163], "collect_aqs_download_task": [137, 146, 163], "as_stream": [137, 146, 163, 250], "as_cont": [137, 146, 163, 250], "as_csv_read": [137, 146, 163, 250], "file_as_stream": [137, 146, 163, 250], "file_as_csv_read": [137, 146, 163, 250], "check_http_respons": [137, 146, 163, 250], "write_csv": [137, 146, 163, 250], "csvwriter": [137, 146, 163, 189, 250], "listcollector": [137, 146, 163, 189, 250], "csvfilewrapp": [137, 146, 163, 250], "is_readm": [137, 146, 163, 250], "get_readm": [137, 146, 163, 250], "is_dir": [137, 146, 163, 250], "epaconfig": [137, 147, 163], "create_domain_yaml": [137, 147, 163], "create_table_yaml": [137, 147, 163], "neg": [137, 146, 250], "is_nul": 137, "is_autoincr": 137, "is_generatedcolumn": 137, "fullaqscod": 137, "latitud": [137, 166, 180, 185], "longitud": [137, 166, 180, 185], "utc": 137, "aqi": 137, "int4": 137, "sitenam": 137, "agencynam": 137, "intlaqscod": 137, "statefp": 137, "countyfp": 137, "stusp": 137, "mean_valu": 137, "airnow_pm25_2022": [137, 148], "site_num": 137, "parameter_cod": [137, 148, 149, 150, 151, 152, 154, 155, 159, 160], "poc": 137, "datum": 137, "parameter_nam": 137, "sample_dur": 137, "pollutant_standard": 137, "metric_us": 137, "method_nam": 137, "units_of_measur": 137, "event_typ": 137, "observation_count": 137, "observation_perc": 137, "completeness_ind": 137, "valid_day_count": 137, "required_day_count": 137, "exceptional_data_count": 137, "null_data_count": 137, "primary_exceedance_count": 137, "secondary_exceedance_count": 137, "certification_ind": 137, "num_obs_below_mdl": 137, "arithmetic_standard_dev": 137, "c_1st_max_valu": 137, "c_1st_max_datetim": 137, "c_2nd_max_valu": 137, "c_2nd_max_datetim": 137, "c_3rd_max_valu": 137, "c_3rd_max_datetim": 137, "c_4th_max_valu": 137, "c_4th_max_datetim": 137, "c_1st_max_non_overlapping_valu": 137, "c_1st_no_max_datetim": 137, "c_2nd_max_non_overlapping_valu": 137, "c_2nd_no_max_datetim": 137, "c_99th_percentil": 137, "c_98th_percentil": 137, "c_95th_percentil": 137, "c_90th_percentil": 137, "c_75th_percentil": 137, "c_50th_percentil": 137, "c_10th_percentil": 137, "local_site_nam": 137, "state_nam": 137, "county_nam": 137, "city_nam": 137, "cbsa_nam": 137, "date_of_last_chang": 137, "scope_t": 137, "c_1st_max_hour": 137, "method_cod": 137, "caller": 139, "runtim": [139, 221, 225, 263, 267], "o3": 139, "pm2": 139, "requested_d": 139, "serv": 139, "ehad": 139, "hourli": 139, "dictinari": 139, "invok": 139, "mnemon": [140, 144, 146, 164], "enum_cl": [140, 144, 176, 244], "cl": [140, 144, 176, 244], "1992": [140, 144, 164, 176, 179, 244], "1995": [140, 144, 164, 176, 179, 244], "1998": [140, 144, 164, 176, 179, 244], "1993": [140, 144, 164, 176, 179, 244], "1994": [140, 144, 164, 176, 179, 244], "discard": [140, 164], "previous": [140, 143, 164], "include_default": [140, 144, 176, 244], "alias": [140, 144, 176, 230, 244], "valid_valu": [140, 144, 176, 244], "rigid": [140, 144, 176, 244], "argumentpars": [140, 144, 176, 244], "add_argu": [140, 144, 176, 244], "aqsweb": [143, 146], "airdata": [143, 146], "download_fil": [143, 146], "job": [143, 186, 226], "_sphinx_paramlinks_epa": 143, "necessari": [143, 161], "anyth": [143, 221, 224], "everyth": 143, "42602": [144, 160], "44201": [144, 148, 149, 150, 151, 152, 154, 155, 164], "88101": [144, 148, 149, 150, 151, 152, 154, 155, 160], "68104": 144, "temperatur": [144, 172, 181], "68103": 144, "concaten": [144, 164], "consecut": [144, 164], "singular": [144, 176, 244], "download_aqs_data": 146, "dictread": [146, 250], "writer": [146, 177, 179, 180, 189, 250], "dictwrit": [146, 250], "flt": 146, "rewrit": [146, 250], "omit": [146, 250], "downloadtask": [146, 250], "contiguous_year_seg": 146, "contigu": [146, 179], "taht": 146, "ylabel": 146, "stream": [146, 250], "binari": [146, 238, 250], "byte": [146, 247, 250], "send": [146, 250], "encod": [146, 250], "csvreader": [146, 250], "ok": [146, 250], "io": [146, 178, 185, 250], "larg": [146, 228, 250], "check_siz": [146, 250], "equal": [146, 250], "newer": [146, 250], "write_head": [146, 180, 250], "tranmsform": [146, 250], "out_stream": [146, 189, 250], "file_like_object": [146, 250], "sep": [146, 250], "null_replac": [146, 250], "na": [146, 250], "markdown": [146, 238, 250, 263], "_sphinx_paramlinks_nsaph_util": [146, 247, 250], "io_util": [146, 239], "possibli": [146, 250], "runner": [148, 150, 221, 226, 238], "sample_airnow": 148, "Or": [148, 150, 224], "xxxxxxxx": 148, "yyyi": [148, 149, 151, 155, 181, 186], "zzzz": 148, "xxxx": 148, "yyyyyyyyi": 148, "08": 148, "31": 148, "downolad": [148, 149, 151, 155], "mm": [148, 149, 151, 155, 172, 181, 186], "dd": [148, 149, 151, 155, 181, 186], "symbol": [148, 149, 150, 151, 152, 154, 155], "shapes_data": 148, "download_log": [148, 149, 195, 197, 198, 199, 200, 202, 203, 204], "get_shap": [148, 197, 202, 204, 217], "download_airnow": [148, 149], "sample_aqs_annu": 150, "agreg": 150, "pm25_annual": 150, "expand_log": 150, "introspect_log": 150, "introspect_err": 150, "download_aq": 150, "expand_aq": 150, "wget": [152, 193, 235], "downlaod": 158, "defint": 158, "dag": [159, 160, 221, 222, 226, 228, 230, 231, 232, 233, 234], "xxx": 159, "airnow_pm25_2018_2020": 159, "30": [159, 181, 230, 257], "240": [159, 160], "64": [159, 160], "17": [159, 160, 221], "3128": [159, 160], "no2_annu": 160, "2020": [160, 164, 179, 195, 200, 203], "environemnt": 161, "shape_dir": 161, "1990": [164, 179], "annot": [165, 171], "observ": [165, 171, 249], "raster": [165, 167, 168, 171, 174, 176, 177, 178, 179, 181, 185, 189, 209, 214, 215, 216, 217], "egg": 165, "gisannot": [166, 171], "shape_fil": [166, 194, 205, 206, 209, 215, 216], "cr": [166, 261], "epsg": [166, 261], "4326": [166, 261], "coordin": [166, 167, 170, 176, 177, 178, 179, 181, 185, 189, 261], "df": [166, 250, 257], "layer": [167, 177, 178, 180, 185, 189], "band": [167, 174, 176, 177, 178, 179, 181, 185, 186, 189, 193, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 214, 216, 217], "prop": [167, 171], "statscount": [167, 171], "rasterizationstrategi": [167, 168, 171, 174, 176, 177, 180, 181, 189, 220], "affin": [167, 168, 170, 178, 185, 220], "vector": [168, 220, 249, 252], "pixel": [168, 178, 185, 220], "along": [168, 220], "render": [168, 220], "cell": [168, 170, 220], "polygon": [168, 176, 178, 179, 181, 185, 186, 219, 220], "all_touch": [168, 171, 179, 220], "altern": [168, 220, 221, 267], "arithmet": [168, 220], "downscal": [168, 171, 179, 209, 214, 215, 220], "factor": [168, 178, 185, 220], "get_affine_transform": [168, 178, 185, 220], "gisdownload": [169, 171, 188], "county_templ": [169, 171], "genz": 169, "shp": 169, "cb_": 169, "_us_county_500k": 169, "zip_templ": [169, 171], "_us_zcta510_500k": 169, "output_dir": 169, "strict": [169, 267], "download_zip": [169, 171], "download_counti": [169, 171], "pointinrast": [170, 171, 189], "rasterstat": 170, "bilinear": [170, 171], "pythonhost": 170, "_modul": 170, "completely_mask": [170, 171], "partially_mask": [170, 171], "window": [170, 171, 248, 249], "2x2": 170, "encompass": 170, "is_mask": [170, 171], "treat": 170, "belong": 170, "fraction": 170, "col": 170, "gridmetvari": [172, 174, 176, 177, 181, 189], "bi": [172, 179, 181], "burn": [172, 181], "nfdr": [172, 181], "fire": [172, 181], "erc": [172, 179, 181], "energi": [172, 181, 222], "releas": [172, 181], "etr": [172, 179, 181], "evapotranspir": [172, 181], "alfalfa": [172, 181], "fm100": [172, 179, 181], "dead": [172, 181], "fuel": [172, 181], "moistur": [172, 181], "fm1000": [172, 179, 181], "pet": [172, 179, 181], "pr": [172, 179, 181], "precipit": [172, 181], "humid": [172, 181, 200], "sph": [172, 179, 181, 198, 200], "humididi": [172, 181], "kg": [172, 181], "srad": [172, 179, 181, 198], "surfac": [172, 179, 181, 261], "downward": [172, 181], "shortwav": [172, 181], "radiat": [172, 181], "w": [172, 177, 181, 189], "wind": [172, 181], "degre": [172, 179, 181], "clockwis": [172, 181], "north": [172, 181], "tmmn": [172, 179, 181, 198], "vpd": [172, 179, 181], "vapor": [172, 181], "pressur": [172, 181], "deficit": [172, 181], "kpa": [172, 181], "veloc": [172, 181], "10m": [172, 181], "gridmetcontext": [173, 176, 177, 181, 186, 189, 191], "gridmettask": [173, 177, 189], "subtask": [173, 189], "raw_download": [176, 179, 181], "shapes_dir": [176, 178, 179, 181, 185], "datefilt": [176, 181], "destination_file_nam": [177, 189], "variable_geography_year": [177, 189], "find_shape_fil": [177, 178, 185, 189], "downloadgridmettask": [177, 189], "ncdf4": [177, 178, 185, 189], "get_url": [177, 189], "computegridmettask": [177, 189], "infil": [177, 180, 189], "outfil": [177, 180, 189], "date_filt": [177, 189], "unidata": [177, 189], "netcdf": [177, 179, 180, 189, 214], "gridemt": [177, 189], "wt": [177, 180, 189], "compute_one_dai": [177, 189], "computeshapestask": [177, 189], "_unidata": [177, 189], "ucar": [177, 189], "computepointstask": [177, 189], "points_fil": [177, 189], "site_id": [177, 189], "get_atmos_url": [178, 185], "atmospher": [178, 185, 193], "composit": [178, 185, 193], "get_nkn_url": [178, 185], "idaho": [178, 185], "ui": [178, 185, 228], "northwest": [178, 185], "network": [178, 185, 230], "geography_typ": [178, 185], "shape_typ": [178, 185], "geo_typ": [178, 179, 185, 186], "get_vari": [178, 185, 189], "gee": [178, 185], "stac": [178, 185], "cloud": [178, 185, 222, 267], "wutw2spmec7am9rk6xmxutstkmtbvidthk": [178, 185], "get_dai": [178, 185, 189], "fo": [178, 185, 217], "nc_file": [178, 185], "rasterio": [178, 185], "readthedoc": [178, 185], "matrix": [178, 185], "equat": [178, 185], "imag": [178, 185, 222, 230], "georeferenc": [178, 185], "disaggreg": [178, 185], "rdocument": [178, 185], "forg": [178, 185, 229, 235], "pkg": [178, 185], "high": [179, 222, 223, 261, 267], "km": 179, "24th": 179, "meteorolog": [179, 261], "1979": 179, "yesterdai": 179, "cite": [179, 222], "metdata": 179, "xy": 179, "coord": 179, "forget": 179, "pythonpath": 179, "zip_shape_fil": 179, "gridmet_tool": [179, 218], "launcher": [179, 209, 218], "init_t": [179, 195, 200, 214], "gridmet_dwnl_onli": 179, "gridmet_humid": 179, "gridmet_increment": 179, "gridmet_local_shap": 179, "rearrang": 179, "washu": [179, 264, 266], "box": [179, 226, 264, 266], "extra_column": 180, "collect_data": [180, 189], "fall": 181, "decemb": 181, "dayofmonth": 181, "march": 181, "check_shape_fil": 185, "get_address": 185, "moment": 186, "collect_task": 186, "execute_sequenti": 186, "skeleton": 187, "create_yaml": 187, "count_lin": [189, 250], "writerow": [189, 250], "get_result": [189, 250], "get_kei": 189, "force_standard_api": 189, "make_point": 189, "block_siz": 189, "65536": 189, "wustlfil": 191, "parse_file_nam": 191, "calendar": 194, "isntead": [195, 200, 203, 214], "2002": [195, 200, 203, 214], "2004": [195, 200, 203, 214], "2006": [195, 200, 203, 214], "2007": [195, 200, 203, 214], "registry_log": [195, 200, 203, 205], "registry_err": [195, 200, 203], "download_err": [195, 197, 198, 199, 200, 202, 203, 204], "process_log": [195, 200, 203, 205, 206], "process_err": [195, 200, 203], "make_registri": [195, 200, 203], "down": [195, 200, 203, 205, 221, 224, 227], "aggregate_data": [197, 202, 204, 216, 217], "aggregate_err": [197, 202, 204, 214, 216, 217], "aggregate_log": [197, 202, 204, 214, 216, 217], "nc": [205, 206], "process_data": 206, "mv": 210, "wustl": 214, "make_table_nam": 214, "evalu": [214, 216], "javascript": [214, 216], "wustl_one_year": 214, "wustl_file_processor": 215, "netcdf_data": 215, "csv_data": 215, "findfil": 216, "exepect": 216, "wustl_aggreg": 216, "gographi": 216, "process_fil": 217, "wustl_one_fil": 217, "relvant": 217, "mind": [221, 224, 226], "docker": [221, 223, 225, 226, 227, 228, 231, 232, 233, 234, 263, 267], "bring": 221, "With": 221, "shell": [221, 230, 235, 263, 267], "simplic": 221, "repeat": 221, "templat": [221, 224, 242], "env_example_nopostgres_conda": 221, "env_example_postgres_conda": 221, "env_example_nopostgres_noconda": 221, "env_example_postgres_noconda": [221, 224], "cp": [221, 224, 228], "compose_profil": [221, 231, 232, 233, 234], "airflow_conda_env": [221, 230, 231, 232, 233, 234], "conda_default": [221, 229, 231, 232, 233, 234], "mycondaenv": 221, "prefer": 221, "rebuild": [221, 267], "shut": 221, "webserv": [221, 222, 224, 226, 227, 230], "restart": [221, 230], "txt": [221, 235], "install_conda": 221, "simpli": 221, "python_sample_project": 221, "install_requir": 221, "lst": [221, 236], "subfold": 221, "install_project": [221, 235], "sh": [221, 227, 235], "r_sample_project": [221, 226], "internet": [221, 228, 267], "capabl": [221, 228], "subproject": 221, "nginx": 221, "redirect": 221, "behind": [221, 267], "enable_proxy_fix": 221, "my_host": 221, "myorg": 221, "_airflow_www_user_usernam": [221, 226, 227, 230, 231, 232, 233, 234], "_airflow_www_user_password": [221, 226, 227, 230, 231, 232, 233, 234], "reus": 221, "rdbm": [221, 225], "subsect": 221, "machin": [221, 222], "consol": [221, 224], "sudo": [221, 226], "createus": 221, "superus": 221, "createrol": 221, "createdb": 221, "login": [221, 227], "inherit": [221, 239], "owner": 221, "psql": [221, 267], "bridg": [221, 230], "adjust": [221, 224], "pg_hba": 221, "conf": 221, "data_directori": 221, "compos": [221, 223, 224, 227, 228, 231, 232, 233, 234, 263, 267], "subnet": [221, 230], "172": [221, 230, 231, 232], "16": [221, 230, 231, 232], "238": [221, 230, 231, 232], "24": [221, 230], "gatewai": 221, "bottom": 221, "listen": 221, "listen_address": 221, "linux": [221, 235], "13": [221, 230, 263], "systemctl": 221, "network_nam": 221, "web_server_container_ip": 221, "scheduler_container_ip": 221, "uncom": 221, "postgre_us": [221, 224, 230, 231, 232, 233, 234], "postgre_pass": [221, 224, 230, 231, 232, 233, 234], "postgre_db": [221, 224, 230, 231, 232, 233, 234], "postgre_serv": [221, 230, 231, 232, 233, 234], "desktop": 221, "docker0": 221, "workaround": 221, "postgres_port": [221, 230, 231, 232, 233, 234], "web_server_port": [221, 230, 231, 232, 233, 234], "8080": [221, 226, 230, 231, 232, 233, 234], "airflow__core__load_exampl": [221, 230, 231, 232, 233, 234], "airflow__webserver__expose_config": [221, 230, 231, 232, 233, 234], "dags_fold": [221, 230, 231, 232, 233, 234], "dags_dir": [221, 224, 230, 231, 232, 233, 234], "volum": [221, 224, 230, 231, 232, 233, 234], "project_dir": [221, 230, 231, 232, 233, 234], "logs_dir": [221, 230, 231, 232, 233, 234], "cwl_tmp_folder": [221, 230, 231, 232, 233, 234], "cwl_inputs_fold": [221, 230, 231, 232, 233, 234], "cwl_outputs_fold": [221, 230, 231, 232, 233, 234], "cwl_pickle_fold": [221, 230, 231, 232, 233, 234], "stand": 222, "portabl": [222, 267], "scalabl": 222, "varieti": 222, "hardwar": 222, "workstat": 222, "meet": [222, 257], "bioinformat": [222, 225], "medic": 222, "astronomi": 222, "learn": 222, "programmat": 222, "graph": [222, 226], "nice": 222, "graphic": 222, "gui": 222, "translat": 222, "rdbmss": 222, "orchestr": [222, 263, 267], "rational": 223, "howto": [223, 228], "short": 223, "quickli": 224, "crete": 224, "foromeplatform": 224, "cd": [224, 228, 235, 236], "submodul": [224, 228, 267], "docker_buildkit": [224, 228], "buildkit_progress": [224, 228], "mkdir": [224, 228], "rf": [224, 228], "authent": 224, "daemon": 224, "upgrad": 224, "buildkit": 224, "cach": [224, 228], "cat": [224, 228, 236], "tee": [224, 228], "fle": 224, "trivial": 225, "regardless": 225, "tcp": 225, "mess": 225, "third": [226, 228], "termin": 226, "exec": [226, 227, 235], "bash": [226, 235, 236], "ic": 226, "1st": 226, "success": 226, "pi": 226, "tmp": 226, "l416_dsl": 226, "140592653839794": 226, "noconda": 226, "rpi": 226, "s7tumyy5": 226, "rscript": [226, 235], "tmpmkit67pd": 226, "stg19d1507c": 226, "992d": 226, "4722": 226, "82a7": 226, "fb24a87ff427": 226, "059059": 226, "enter": 226, "browser": 226, "passowrd": 226, "tab": 226, "click": 226, "plai": 226, "button": 226, "container_nam": [227, 230], "startup": 227, "entrypoint": 227, "prune": 227, "l": [227, 235], "grep": [227, 235], "rm": 227, "docker_postgr": 227, "complain": 227, "No": 227, "yet": 227, "collabor": [228, 263], "forom": [228, 263], "fork": [228, 263], "infrastructur": [228, 239, 263, 267], "iac": [228, 263, 267], "approach": [228, 263, 267], "29": 228, "carefulli": 228, "sequenc": 228, "vm": 228, "stabl": 228, "speed": 228, "channel": 229, "foundat": [230, 235, 236], "asf": [230, 235, 236], "contributor": [230, 235, 236], "regard": [230, 235, 236], "ownership": [230, 235, 236], "common_paramet": 230, "airflow_build_param": 230, "dockerfil": 230, "airflow_env": 230, "airflow_hom": 230, "airflow__core__executor": 230, "localexecutor": 230, "airflow__core__sql_alchemy_conn": 230, "airflow__core__fernet_kei": 230, "airflow_conn_metadata_db": 230, "airflow_var__metadata_db_schema": 230, "airflow__scheduler__scheduler_heartbeat_sec": 230, "airflow__core__dags_are_paused_at_cr": 230, "airflow__core__dags_fold": 230, "_airflow_db_upgrad": 230, "_airflow_www_user_cr": 230, "airflow__webserver__enable_proxy_fix": 230, "airflow__webserver__base_url": 230, "base_url": [230, 231, 232, 233, 234], "airflow__logging__base_log_fold": 230, "airflow_volum": 230, "scratch": 230, "rundir": 230, "cwl_rundir": 230, "bind": 230, "sock": 230, "airflow_image_nam": 230, "myairflow": 230, "service_healthi": 230, "healthcheck": 230, "curl": 230, "retri": 230, "postgres_us": 230, "postgres_password": 230, "postgres_db": 230, "postgres_host_auth_method": 230, "trust": 230, "pg_isreadi": 230, "driver": 230, "ipam": 230, "pointer": [231, 232, 233, 234], "https_proxi": 235, "anaconda3": 235, "x86_64": 235, "chmod": 235, "condabin": 235, "eval": 235, "hook": 235, "auto_activate_bas": 235, "bashrc": 235, "uninstal": 235, "pushd": [235, 236], "pathlib": 235, "popd": [235, 236], "deactiv": 235, "cenv_fil": 235, "cenv": 235, "optpars": 235, "numpi": 235, "scipi": 235, "dataclass": 235, "rpy2": [235, 252], "r_script_install1": 235, "install_github": 235, "fi": [235, 236], "install_cwl_airflow": 235, "usr": 235, "captur": 235, "conda_env": 235, "project_list": 236, "Not": 236, "dir": 236, "dist": 236, "whl": 236, "marko": 238, "paramiko": 238, "sshtunnel": 238, "cwltool": 238, "20210816212154": 238, "cwlref": 238, "pytz": 238, "wtform": 238, "sqlalchemi": 238, "23": 238, "independ": [239, 263], "pyfst": 239, "simplifi": [239, 263], "26": 239, "sabath": 239, "interpolat": 239, "logic": [239, 249], "metholdologi": 239, "spot": 239, "modulecollector": 242, "orphan": 242, "autogener": 242, "nthe": 242, "automodul": 242, "undoc": 242, "get_narg": 244, "get_help": 244, "is_requir": 244, "add_to": 244, "set_empty_arg": 244, "get_header_level": 245, "read_sect": 245, "insert_sect": 245, "cwlparser": 246, "input_file_path": 246, "output_file_path": 246, "image_file_path": [246, 251], "mu": 247, "suppli": 247, "feasibl": 247, "fwfmeta": 247, "record_len": 247, "number_of_row": 247, "rlen": 247, "ncol": 247, "nrow": 247, "ret_dict": 247, "ist": 247, "good_lin": 247, "bad_lin": 247, "on_parse_except": 247, "ftsparseexcept": 247, "interpolate_var": 248, "tvar": 248, "by_var": 248, "ma_num": 248, "Will": 248, "missing": [248, 249], "vale": 248, "interpolate_ma": 248, "dimens": 248, "intiti": 248, "num_vec": 249, "steffenmoritz": 249, "imputet": 249, "na_ma": 249, "side": [249, 267], "hte": 249, "np": 249, "roll": 249, "imput": 249, "get_indic": 249, "vec": 249, "doesn": 249, "calc_weight": 249, "decreas": 249, "exponenti": 249, "distanc": 249, "get_indici": 249, "nearbi": 249, "sizeof_fmt": 250, "suffix": 250, "add_url": 250, "is_up_to_d": 250, "is_transform": 250, "as_dict": 250, "json_or_yaml_fil": 250, "dataframe2csv": 250, "fst2csv": 250, "specialvalu": 250, "nan": 250, "is_miss": 250, "is_untyp": 250, "is_yaml_or_json": 250, "mdcreator": 251, "add_head": 251, "add_text": 251, "add_tabl": 251, "align": 251, "liter": 251, "first_row_is_head": 251, "add_imag": 251, "choose_cran_mirror": 252, "ensure_packag": 252, "read_fst": 252, "robject": 252, "vector2list": 252, "fstreader": 252, "read_next": 252, "current_row": 252, "current_map": 252, "rewind": 252, "madeupcontext": 254, "mytestcas": 254, "methodnam": [254, 255, 256], "runtest": [254, 255, 256], "valueerror": [254, 255, 256], "test_default_context": 254, "test_custom_valid": 254, "interpolationtest": 255, "test_ma_interpol": 255, "qctest": 256, "test_test": 256, "less_than": 257, "lt": 257, "greater_than": 257, "gt": 257, "data_typ": 257, "no_miss": 257, "no_nan": 257, "count_miss": 257, "count_nan": 257, "40": 257, "critic": 257, "expectationerror": 257, "val": 257, "yaml_fil": 257, "load_yaml": 257, "purchas": 260, "slect": 260, "expans": 261, "air": 261, "agenc": [261, 263], "iogp": 261, "geodet": 261, "wgs84": 261, "hierarch": 261, "algorithm": 261, "popular": 261, "compani": 261, "wg": 261, "84": 261, "cartographi": 261, "geodesi": 261, "satellit": 261, "gp": 261, "etl": [263, 267], "elt": [263, 267], "advantag": [263, 267], "eventu": [263, 267], "throughout": 263, "goe": 263, "docutil": 263, "augment": 263, "readi": [263, 267], "parti": 263, "publicli": [263, 267], "publish": 263, "pieplin": 263, "why": 264, "architectur": 264, "census_workflow": [264, 266], "acronym": 264, "keyston": 267, "modern": 267, "scientif": 267, "challeng": 267, "hand": 267, "proprietari": 267, "continu": 267, "involv": 267, "heavi": 267, "sensit": 267, "propos": 267, "widest": 267, "adopt": 267, "commerci": 267, "academ": 267, "imper": 267, "exacerb": 267, "healthcar": 267, "inher": 267, "confidenti": 267, "handi": 267, "firewal": 267, "littl": 267, "administ": 267, "container": 267, "tcl": 267, "perl": 267, "tclu": 267, "perlu": 267, "pythonu": 267, "Such": 267, "pre": 267, "prebuilt": 267, "cento": 267, "ubuntu": 267, "redhat": 267, "openshift": 267, "ibm": 267, "puppet": 267, "provis": 267, "terraform": 267}, "objects": {"census": [[23, 0, 0, "-", "assemble_data"], [12, 0, 0, "-", "calculate_density"], [23, 0, 0, "-", "census_info"], [23, 0, 0, "-", "cli"], [15, 0, 0, "-", "do_qc"], [23, 0, 0, "-", "exceptions"], [17, 0, 0, "-", "interpolate_data"], [23, 0, 0, "-", "query"], [23, 0, 0, "-", "tigerweb"], [23, 0, 0, "-", "utils"], [22, 0, 0, "-", "write_data"]], "census.assemble_data": [[23, 1, 1, "", "DataPlan"], [23, 1, 1, "", "VariableDef"]], "census.assemble_data.DataPlan": [[23, 2, 1, "", "add_geoid"], [23, 2, 1, "", "adjust_geo_fields"], [23, 2, 1, "", "assemble_data"], [23, 2, 1, "", "calculate_densities"], [23, 2, 1, "", "create_missingness"], [23, 2, 1, "", "get_var_names"], [23, 2, 1, "", "interpolate"], [23, 2, 1, "", "quality_check"], [11, 4, 1, "", "supported_out_formats"], [23, 2, 1, "", "write_data"], [23, 2, 1, "", "write_schema"]], "census.assemble_data.DataPlan.calculate_densities.params": [[23, 3, 1, "", "sq_mi"], [23, 3, 1, "", "variables"]], "census.assemble_data.DataPlan.interpolate.params": [[23, 3, 1, "", "max_year"], [23, 3, 1, "", "method"], [23, 3, 1, "", "min_year"]], "census.assemble_data.DataPlan.params": [[23, 3, 1, "", "county"], [23, 3, 1, "", "geometry"], [23, 3, 1, "", "state"], [23, 3, 1, "", "yaml_path"], [23, 3, 1, "", "years"]], "census.assemble_data.DataPlan.quality_check.params": [[23, 3, 1, "", "test_file"]], "census.assemble_data.DataPlan.write_data.params": [[23, 3, 1, "", "file_type"], [23, 3, 1, "", "path"]], "census.assemble_data.DataPlan.write_schema.params": [[23, 3, 1, "", "filename"], [23, 3, 1, "", "table_name"]], "census.assemble_data.VariableDef": [[23, 2, 1, "", "calculate_var"], [23, 2, 1, "", "do_query"], [23, 2, 1, "", "get_vars"]], "census.assemble_data.VariableDef.calculate_var.params": [[23, 3, 1, "", "county"], [23, 3, 1, "", "geometry"], [23, 3, 1, "", "state"], [23, 3, 1, "", "year"]], "census.assemble_data.VariableDef.do_query.params": [[23, 3, 1, "", "county"], [23, 3, 1, "", "geometry"], [23, 3, 1, "", "state"], [23, 3, 1, "", "year"]], "census.calculate_density": [[12, 1, 1, "", "CensusDensityContext"], [12, 5, 1, "", "initialize_logging"]], "census.calculate_density.CensusDensityContext.params": [[12, 3, 1, "", "description"], [12, 3, 1, "", "subclass"]], "census.census_info": [[23, 5, 1, "", "census_years"], [23, 5, 1, "", "get_endpoint"], [23, 5, 1, "", "get_varlist"], [23, 5, 1, "", "set_api_key"]], "census.census_info.census_years.params": [[23, 3, 1, "", "max_year"], [23, 3, 1, "", "min_year"]], "census.census_info.get_endpoint.params": [[23, 3, 1, "", "dataset"], [23, 3, 1, "", "sum_file"], [23, 3, 1, "", "year"]], "census.census_info.get_varlist.params": [[23, 3, 1, "", "dataset"], [23, 3, 1, "", "sum_file"], [23, 3, 1, "", "year"]], "census.census_info.set_api_key.params": [[23, 3, 1, "", "key"]], "census.cli": [[23, 1, 1, "", "CensusContext"], [14, 5, 1, "", "census_cli"]], "census.cli.CensusContext.params": [[23, 3, 1, "", "description"], [23, 3, 1, "", "subclass"]], "census.cli.CensusContext": [[23, 2, 1, "", "validate"]], "census.cli.CensusContext.validate.params": [[23, 3, 1, "", "attr"], [23, 3, 1, "", "value"]], "census.data": [[23, 0, 0, "-", "load_data"]], "census.data.load_data": [[23, 5, 1, "", "load_county_codes"], [23, 5, 1, "", "load_state_codes"]], "census.do_qc": [[15, 1, 1, "", "CensusQCContext"], [15, 5, 1, "", "initialize_logging"]], "census.do_qc.CensusQCContext.params": [[15, 3, 1, "", "description"], [15, 3, 1, "", "subclass"]], "census.exceptions": [[23, 6, 1, "", "CensusException"]], "census.interpolate_data": [[17, 1, 1, "", "CensusInterpolateContext"], [17, 5, 1, "", "initialize_logging"]], "census.interpolate_data.CensusInterpolateContext.params": [[17, 3, 1, "", "description"], [17, 3, 1, "", "subclass"]], "census.interpolate_data.CensusInterpolateContext": [[17, 2, 1, "", "validate"]], "census.interpolate_data.CensusInterpolateContext.validate.params": [[17, 3, 1, "", "attr"], [17, 3, 1, "", "value"]], "census.query": [[23, 5, 1, "", "api_geography"], [23, 5, 1, "", "get_census_data"]], "census.query.api_geography.params": [[23, 3, 1, "", "geo"]], "census.query.get_census_data.params": [[23, 3, 1, "", "county"], [23, 3, 1, "", "dataset"], [23, 3, 1, "", "geography"], [23, 3, 1, "", "key"], [23, 3, 1, "", "state"], [23, 3, 1, "", "sum_file"], [23, 3, 1, "", "variables"], [23, 3, 1, "", "year"]], "census.tigerweb": [[23, 5, 1, "", "download_geometry"], [23, 5, 1, "", "get_area"]], "census.tigerweb.download_geometry.params": [[23, 3, 1, "", "geometry"], [23, 3, 1, "", "out_dir"], [23, 3, 1, "", "year"]], "census.tigerweb.get_area.params": [[23, 3, 1, "", "geometry"], [23, 3, 1, "", "sq_mi"]], "census.utils": [[23, 5, 1, "", "show_api_keys"]], "census.write_data": [[22, 1, 1, "", "CensusWriteContext"], [22, 5, 1, "", "initialize_logging"]], "census.write_data.CensusWriteContext.params": [[22, 3, 1, "", "description"], [22, 3, 1, "", "subclass"]], "cms": [[45, 0, 0, "-", "aggregates"], [46, 0, 0, "-", "create_schema_config"], [47, 0, 0, "-", "duplicates"], [50, 0, 0, "-", "init_cms_db"], [53, 0, 0, "-", "mcr_data_loader"], [65, 0, 0, "-", "random_selector"], [66, 0, 0, "-", "registry"], [67, 0, 0, "-", "table_population"]], "cms.aggregates": [[45, 1, 1, "", "Aggregator"], [45, 1, 1, "", "ExpectedData"]], "cms.aggregates.Aggregator": [[45, 4, 1, "", "QUERY"], [45, 2, 1, "", "count"], [45, 2, 1, "", "verify"]], "cms.create_schema_config": [[46, 1, 1, "", "CMSSchema"]], "cms.create_schema_config.CMSSchema": [[46, 4, 1, "", "input"], [46, 4, 1, "", "output"], [46, 4, 1, "", "reset"], [46, 4, 1, "", "type"]], "cms.create_schema_config.CMSSchema.params": [[46, 3, 1, "", "description"], [46, 3, 1, "", "subclass"]], "cms.duplicates": [[47, 1, 1, "", "DuplicatesExplorer"], [47, 5, 1, "", "args"], [47, 5, 1, "", "run"]], "cms.duplicates.DuplicatesExplorer": [[47, 2, 1, "", "analyze_inconsistent_age"], [47, 2, 1, "", "explore_all"], [47, 2, 1, "", "explore_one"], [47, 2, 1, "", "find_duplicate_dates"], [47, 2, 1, "", "init"], [47, 2, 1, "", "is_loaded"], [47, 2, 1, "", "load"], [47, 2, 1, "", "report"], [47, 2, 1, "", "save"]], "cms.fts2yaml": [[48, 1, 1, "", "AliasColumn"], [48, 1, 1, "", "ColumnAttribute"], [48, 1, 1, "", "ColumnReader"], [48, 1, 1, "", "FTSColumn"], [48, 1, 1, "", "MedicaidFTS"], [48, 1, 1, "", "MedicaidFTSColumn"], [48, 1, 1, "", "MedicareFTS"], [48, 1, 1, "", "MedicareFTSColumn"], [48, 5, 1, "", "mcr_type"], [48, 5, 1, "", "width"]], "cms.fts2yaml.AliasColumn": [[48, 2, 1, "", "to_dict"]], "cms.fts2yaml.ColumnAttribute": [[48, 2, 1, "", "arg"]], "cms.fts2yaml.ColumnReader": [[48, 2, 1, "", "read"]], "cms.fts2yaml.FTSColumn": [[48, 2, 1, "", "analyze_format"], [48, 2, 1, "", "conv"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_fwf_column"], [48, 2, 1, "", "to_sql_type"]], "cms.fts2yaml.FTSColumn.conv.params": [[48, 3, 1, "", "i"]], "cms.fts2yaml.FTSColumn.to_fwf_column.params": [[48, 3, 1, "", "pos"]], "cms.fts2yaml.MedicaidFTS": [[48, 2, 1, "", "init"], [48, 4, 1, "", "medicaid_indices"], [48, 2, 1, "", "on_after_read_file"]], "cms.fts2yaml.MedicaidFTS.on_after_read_file.params": [[48, 3, 1, "", "columns"]], "cms.fts2yaml.MedicaidFTS.params": [[48, 3, 1, "", "type_of_data"]], "cms.fts2yaml.MedicaidFTSColumn": [[48, 4, 1, "", "nattrs"]], "cms.fts2yaml.MedicareFTS": [[48, 2, 1, "", "add_indices"], [48, 2, 1, "", "check_key_columns"], [48, 2, 1, "", "init"], [48, 2, 1, "", "on_after_read_file"]], "cms.fts2yaml.MedicareFTS.on_after_read_file.params": [[48, 3, 1, "", "columns"]], "cms.fts2yaml.MedicareFTS.params": [[48, 3, 1, "", "type_of_data"]], "cms.fts2yaml.MedicareFTSColumn": [[48, 2, 1, "", "conv"], [48, 4, 1, "", "nattrs"]], "cms.fts2yaml.MedicareFTSColumn.conv.params": [[48, 3, 1, "", "i"]], "cms.fts2yaml.mcr_type.params": [[48, 3, 1, "", "file_name"]], "cms.fts2yaml.width.params": [[48, 3, 1, "", "s"]], "cms.init_cms_db": [[50, 5, 1, "", "init_cms"]], "cms.mcr_data_loader": [[53, 1, 1, "", "MedicareDataLoader"]], "cms.mcr_data_loader.MedicareDataLoader": [[53, 2, 1, "", "dat4fts"], [53, 2, 1, "", "get_files"], [53, 2, 1, "", "open"]], "cms.random_selector": [[65, 5, 1, "", "args"], [65, 5, 1, "", "select"]], "cms.registry": [[66, 1, 1, "", "Registry"]], "cms.registry.Registry": [[66, 2, 1, "", "built_in_registry_path"], [66, 2, 1, "", "init"], [66, 2, 1, "", "update"], [66, 2, 1, "", "update_medicaid"], [66, 2, 1, "", "update_medicare"]], "cms.table_population": [[67, 1, 1, "", "PopulateConfig"], [67, 1, 1, "", "TablePopulator"], [67, 5, 1, "", "init_cms"]], "cms.table_population.PopulateConfig.params": [[67, 3, 1, "", "description"], [67, 3, 1, "", "subclass"]], "cms.tools": [[51, 0, 0, "-", "mcr_combine_tables"], [52, 0, 0, "-", "mcr_create_test_data"], [54, 0, 0, "-", "mcr_file"], [55, 0, 0, "-", "mcr_fts2csv"], [56, 0, 0, "-", "mcr_fts2db"], [57, 0, 0, "-", "mcr_registry"], [58, 0, 0, "-", "mcr_sas"], [59, 0, 0, "-", "mcr_sas2db"], [60, 0, 0, "-", "mcr_sas2yaml"], [63, 0, 0, "-", "medpar_converter"]], "cms.tools.mcr_combine_tables": [[51, 1, 1, "", "MedicareCombinedView"]], "cms.tools.mcr_combine_tables.MedicareCombinedView": [[51, 2, 1, "", "execute"], [51, 2, 1, "", "generate_sql"], [51, 2, 1, "", "get_column"], [51, 2, 1, "", "get_columns"], [51, 2, 1, "", "get_tables"], [51, 4, 1, "", "ip"], [51, 2, 1, "", "print_sql"], [51, 4, 1, "", "ps"], [51, 4, 1, "", "supported_tables"], [51, 2, 1, "", "table_sql"]], "cms.tools.mcr_create_test_data": [[52, 1, 1, "", "FTSTuple"], [52, 5, 1, "", "args"], [52, 5, 1, "", "find_fts_tuples"], [52, 5, 1, "", "select"]], "cms.tools.mcr_create_test_data.FTSTuple": [[52, 2, 1, "", "dat_path"], [52, 2, 1, "", "fts_path"]], "cms.tools.mcr_file": [[54, 1, 1, "", "Column"], [54, 1, 1, "", "ColumnAttribute"], [54, 1, 1, "", "ColumnDef"], [54, 1, 1, "", "MedicareFile"], [54, 6, 1, "", "MedparParseException"], [54, 5, 1, "", "log"], [54, 5, 1, "", "width"]], "cms.tools.mcr_file.ColumnAttribute": [[54, 2, 1, "", "arg"]], "cms.tools.mcr_file.ColumnDef": [[54, 2, 1, "", "read"]], "cms.tools.mcr_file.MedicareFile": [[54, 2, 1, "", "count_lines_in_dest"], [54, 2, 1, "", "count_lines_in_source"], [54, 2, 1, "", "export"], [54, 2, 1, "", "info"], [54, 2, 1, "", "init"], [54, 2, 1, "", "read_record"], [54, 2, 1, "", "status"], [54, 2, 1, "", "status_message"], [54, 2, 1, "", "validate"]], "cms.tools.mcr_file.MedicareFile.read_record.params": [[54, 3, 1, "", "data"], [54, 3, 1, "", "ln"]], "cms.tools.mcr_file.MedicareFile.validate.params": [[54, 3, 1, "", "record"]], "cms.tools.mcr_fts2csv": [[55, 5, 1, "", "convert"]], "cms.tools.mcr_fts2db": [[56, 1, 1, "", "MedicareLoader"]], "cms.tools.mcr_fts2db.MedicareLoader": [[56, 2, 1, "", "handle"], [56, 2, 1, "", "handle_empty"], [56, 2, 1, "", "loader_for_csv"], [56, 2, 1, "", "loader_for_fwf"], [56, 2, 1, "", "process"], [56, 2, 1, "", "traverse"]], "cms.tools.mcr_registry": [[57, 1, 1, "", "MedicareRegistry"]], "cms.tools.mcr_registry.MedicareRegistry": [[57, 2, 1, "", "init_registry"], [57, 2, 1, "", "read_registry"], [57, 2, 1, "", "save"]], "cms.tools.mcr_sas": [[58, 1, 1, "", "MedicareSAS"]], "cms.tools.mcr_sas.MedicareSAS": [[58, 2, 1, "", "handle"], [58, 2, 1, "", "handle_sas_file"], [58, 2, 1, "", "traverse"]], "cms.tools.mcr_sas2db": [[59, 1, 1, "", "SASLoader"]], "cms.tools.mcr_sas2db.SASLoader": [[59, 2, 1, "", "handle"], [59, 2, 1, "", "process"]], "cms.tools.mcr_sas2yaml": [[60, 1, 1, "", "SASIntrospector"]], "cms.tools.mcr_sas2yaml.SASIntrospector": [[60, 2, 1, "", "add_sas_table"], [60, 2, 1, "", "handle"], [60, 2, 1, "", "matches"], [60, 2, 1, "", "process"]], "cms.tools.medpar_converter": [[63, 1, 1, "", "MedParFileSet"], [63, 1, 1, "", "MedparConverter"], [63, 5, 1, "", "args"]], "cms.tools.medpar_converter.MedparConverter": [[63, 2, 1, "", "convert"], [63, 2, 1, "", "convert_dataset"], [63, 2, 1, "", "dataset"], [63, 2, 1, "", "find"], [63, 2, 1, "", "list"], [63, 2, 1, "", "status"]], "epa": [[138, 0, 0, "-", "airnow"], [139, 0, 0, "-", "airnow_downloader"], [140, 0, 0, "-", "airnow_ds_def"], [141, 0, 0, "-", "airnow_setup"], [142, 0, 0, "-", "airnow_shapes"], [143, 0, 0, "-", "aqs"], [144, 0, 0, "-", "aqs_ds_def"], [145, 0, 0, "-", "aqs_expand"], [146, 0, 0, "-", "aqs_tools"], [147, 0, 0, "-", "registry"]], "epa.airnow": [[138, 1, 1, "", "AirNow"]], "epa.airnow_downloader": [[139, 1, 1, "", "AirNowDownloader"]], "epa.airnow_downloader.AirNowDownloader": [[139, 2, 1, "", "download"], [139, 2, 1, "", "download_range"], [139, 2, 1, "", "dump_csv"], [139, 2, 1, "", "process"], [139, 2, 1, "", "write_csv_header"]], "epa.airnow_downloader.AirNowDownloader.download.params": [[139, 3, 1, "", "requested_date"]], "epa.airnow_downloader.AirNowDownloader.download_range.params": [[139, 3, 1, "", "end_date"], [139, 3, 1, "", "start_date"]], "epa.airnow_downloader.AirNowDownloader.params": [[139, 3, 1, "", "api_key"], [139, 3, 1, "", "parameter"], [139, 3, 1, "", "target"]], "epa.airnow_downloader.AirNowDownloader.process.params": [[139, 3, 1, "", "content"]], "epa.airnow_ds_def": [[140, 1, 1, "", "AirNowContext"], [140, 1, 1, "", "Parameter"]], "epa.airnow_ds_def.AirNowContext": [[140, 4, 1, "", "api_key"], [140, 4, 1, "", "cfg"], [140, 4, 1, "", "compress"], [140, 4, 1, "", "destination"], [140, 4, 1, "", "end_date"], [140, 2, 1, "", "enum"], [140, 4, 1, "", "parameters"], [140, 4, 1, "", "proxy"], [140, 4, 1, "", "qc"], [140, 4, 1, "", "reset"], [140, 4, 1, "", "shapes"], [140, 4, 1, "", "start_date"], [140, 2, 1, "", "validate"], [140, 4, 1, "", "years"]], "epa.airnow_ds_def.AirNowContext.enum.params": [[140, 3, 1, "", "cls"], [140, 3, 1, "", "s"]], "epa.airnow_ds_def.AirNowContext.params": [[140, 3, 1, "", "doc"]], "epa.airnow_ds_def.AirNowContext.validate.params": [[140, 3, 1, "", "attr"], [140, 3, 1, "", "value"]], "epa.airnow_ds_def.Parameter": [[140, 4, 1, "", "CO"], [140, 4, 1, "", "NO2"], [140, 4, 1, "", "OZONE"], [140, 4, 1, "", "PM10"], [140, 4, 1, "", "PM25"], [140, 4, 1, "", "SO2"]], "epa.airnow_setup": [[141, 5, 1, "", "setup"]], "epa.airnow_shapes": [[142, 5, 1, "", "download_shapes"]], "epa.aqs": [[143, 1, 1, "", "AQS"]], "epa.aqs.AQS": [[143, 2, 1, "", "clear"], [143, 2, 1, "", "collect_downloads"], [143, 2, 1, "", "download"], [143, 2, 1, "", "is_downloaded"]], "epa.aqs.AQS.params": [[143, 3, 1, "", "context"]], "epa.aqs_ds_def": [[144, 1, 1, "", "AQSContext"], [144, 1, 1, "", "Aggregation"], [144, 1, 1, "", "Parameter"]], "epa.aqs_ds_def.AQSContext": [[144, 4, 1, "", "aggregation"], [144, 4, 1, "", "compress"], [144, 4, 1, "", "destination"], [144, 2, 1, "", "enum"], [144, 4, 1, "", "merge_years"], [144, 4, 1, "", "parameters"], [144, 2, 1, "", "validate"], [144, 4, 1, "", "years"]], "epa.aqs_ds_def.AQSContext.enum.params": [[144, 3, 1, "", "cls"], [144, 3, 1, "", "s"]], "epa.aqs_ds_def.AQSContext.params": [[144, 3, 1, "", "doc"]], "epa.aqs_ds_def.AQSContext.validate.params": [[144, 3, 1, "", "attr"], [144, 3, 1, "", "value"]], "epa.aqs_ds_def.Aggregation": [[144, 4, 1, "", "ANNUAL"], [144, 4, 1, "", "DAILY"]], "epa.aqs_ds_def.Parameter": [[144, 4, 1, "", "MAX_TEMP"], [144, 4, 1, "", "MIN_TEMP"], [144, 4, 1, "", "NO2"], [144, 4, 1, "", "OZONE"], [144, 4, 1, "", "PM25"]], "epa.aqs_expand": [[145, 5, 1, "", "expand_data"]], "epa.aqs_tools": [[146, 5, 1, "", "add_monitor_key"], [146, 5, 1, "", "collect_annual_downloads"], [146, 5, 1, "", "collect_aqs_download_tasks"], [146, 5, 1, "", "collect_daily_downloads"], [146, 5, 1, "", "destination_path"], [146, 5, 1, "", "download_data"], [146, 5, 1, "", "transfer"]], "epa.aqs_tools.add_monitor_key.params": [[146, 3, 1, "", "row"]], "epa.aqs_tools.collect_annual_downloads.params": [[146, 3, 1, "", "contiguous_year_segment"], [146, 3, 1, "", "destination"], [146, 3, 1, "", "downloads"], [146, 3, 1, "", "parameters"], [146, 3, 1, "", "path"]], "epa.aqs_tools.collect_aqs_download_tasks.params": [[146, 3, 1, "", "aggregation"], [146, 3, 1, "", "destination"], [146, 3, 1, "", "merge_years"], [146, 3, 1, "", "parameters"], [146, 3, 1, "", "years"]], "epa.aqs_tools.collect_daily_downloads.params": [[146, 3, 1, "", "contiguous_year_segment"], [146, 3, 1, "", "destination"], [146, 3, 1, "", "downloads"], [146, 3, 1, "", "parameters"], [146, 3, 1, "", "ylabel"]], "epa.aqs_tools.destination_path.params": [[146, 3, 1, "", "destination"], [146, 3, 1, "", "path"]], "epa.aqs_tools.download_data.params": [[146, 3, 1, "", "append"], [146, 3, 1, "", "parameters"], [146, 3, 1, "", "target"], [146, 3, 1, "", "url"]], "epa.aqs_tools.transfer.params": [[146, 3, 1, "", "flt"], [146, 3, 1, "", "header"], [146, 3, 1, "", "reader"], [146, 3, 1, "", "writer"]], "epa.registry": [[147, 1, 1, "", "EPAConfig"], [147, 1, 1, "", "Registry"]], "epa.registry.EPAConfig": [[147, 4, 1, "", "data"], [147, 4, 1, "", "output"], [147, 4, 1, "", "table"]], "epa.registry.EPAConfig.params": [[147, 3, 1, "", "description"], [147, 3, 1, "", "subclass"]], "epa.registry.Registry": [[147, 2, 1, "", "create_domain_yaml"], [147, 2, 1, "", "create_table_yaml"], [147, 2, 1, "", "update"]], "gridmet": [[181, 0, 0, "-", "config"], [185, 0, 0, "-", "gridmet_tools"], [186, 0, 0, "-", "launcher"], [187, 0, 0, "-", "registry"], [188, 0, 0, "-", "shapes"], [189, 0, 0, "-", "task"]], "gridmet.config": [[181, 1, 1, "", "DateFilter"], [181, 1, 1, "", "GridmetContext"], [181, 1, 1, "", "GridmetVariable"], [219, 1, 1, "", "Shape"]], "gridmet.config.DateFilter": [[181, 2, 1, "", "accept"]], "gridmet.config.GridmetContext": [[176, 4, 1, "", "compress"], [181, 4, 1, "", "coordinates"], [181, 4, 1, "", "dates"], [181, 4, 1, "", "destination"], [176, 2, 1, "", "enum"], [181, 4, 1, "", "geography"], [181, 4, 1, "", "metadata"], [181, 4, 1, "", "points"], [181, 4, 1, "", "raw_downloads"], [181, 4, 1, "", "shapes"], [181, 4, 1, "", "shapes_dir"], [181, 4, 1, "", "strategy"], [181, 2, 1, "", "validate"], [181, 4, 1, "", "variables"], [176, 4, 1, "", "years"]], "gridmet.config.GridmetContext.enum.params": [[176, 3, 1, "", "cls"], [176, 3, 1, "", "s"]], "gridmet.config.GridmetContext.params": [[181, 3, 1, "", "doc"]], "gridmet.config.GridmetContext.validate.params": [[181, 3, 1, "", "attr"], [181, 3, 1, "", "value"]], "gridmet.config.GridmetVariable": [[181, 4, 1, "", "bi"], [181, 4, 1, "", "erc"], [181, 4, 1, "", "etr"], [181, 4, 1, "", "fm100"], [181, 4, 1, "", "fm1000"], [181, 4, 1, "", "pet"], [181, 4, 1, "", "pr"], [181, 4, 1, "", "rmax"], [181, 4, 1, "", "rmin"], [181, 4, 1, "", "sph"], [181, 4, 1, "", "srad"], [181, 4, 1, "", "th"], [181, 4, 1, "", "tmmn"], [181, 4, 1, "", "tmmx"], [181, 4, 1, "", "vpd"], [181, 4, 1, "", "vs"]], "gridmet.config.Shape": [[219, 4, 1, "", "point"], [219, 4, 1, "", "polygon"]], "gridmet.gridmet_tools": [[185, 5, 1, "", "check_shape_file"], [185, 5, 1, "", "disaggregate"], [185, 5, 1, "", "find_shape_file"], [185, 5, 1, "", "get_address"], [185, 5, 1, "", "get_affine_transform"], [185, 5, 1, "", "get_atmos_url"], [185, 5, 1, "", "get_days"], [185, 5, 1, "", "get_nkn_url"], [185, 5, 1, "", "get_variable"]], "gridmet.gridmet_tools.disaggregate.params": [[185, 3, 1, "", "factor"], [185, 3, 1, "", "layer"]], "gridmet.gridmet_tools.find_shape_file.params": [[185, 3, 1, "", "geography_type"], [185, 3, 1, "", "shape_type"], [185, 3, 1, "", "shapes_dir"], [185, 3, 1, "", "year"]], "gridmet.gridmet_tools.get_affine_transform.params": [[185, 3, 1, "", "factor"], [185, 3, 1, "", "nc_file"]], "gridmet.gridmet_tools.get_atmos_url.params": [[185, 3, 1, "", "variable"], [185, 3, 1, "", "year"]], "gridmet.gridmet_tools.get_days.params": [[185, 3, 1, "", "dataset"]], "gridmet.gridmet_tools.get_nkn_url.params": [[185, 3, 1, "", "variable"], [185, 3, 1, "", "year"]], "gridmet.gridmet_tools.get_variable.params": [[185, 3, 1, "", "dataset"], [185, 3, 1, "", "variable"]], "gridmet.launcher": [[186, 1, 1, "", "Gridmet"]], "gridmet.launcher.Gridmet": [[186, 2, 1, "", "collect_tasks"], [186, 2, 1, "", "execute_sequentially"]], "gridmet.launcher.Gridmet.params": [[186, 3, 1, "", "context"]], "gridmet.registry": [[187, 1, 1, "", "Registry"]], "gridmet.registry.Registry": [[187, 2, 1, "", "built_in_registry_path"], [187, 2, 1, "", "create_yaml"], [187, 2, 1, "", "update"]], "gridmet.shapes": [[188, 5, 1, "", "download_shapes"]], "gridmet.task": [[189, 1, 1, "", "CSVWriter"], [189, 1, 1, "", "Collector"], [189, 1, 1, "", "ComputeGridmetTask"], [189, 1, 1, "", "ComputePointsTask"], [189, 1, 1, "", "ComputeShapesTask"], [189, 1, 1, "", "DownloadGridmetTask"], [189, 1, 1, "", "GridmetTask"], [189, 1, 1, "", "ListCollector"], [189, 1, 1, "", "Parallel"], [189, 5, 1, "", "count_lines"], [189, 5, 1, "", "quote"]], "gridmet.task.CSVWriter": [[189, 2, 1, "", "flush"], [189, 2, 1, "", "writerow"]], "gridmet.task.Collector": [[189, 2, 1, "", "flush"], [189, 2, 1, "", "writerow"]], "gridmet.task.ComputeGridmetTask": [[189, 2, 1, "", "collect_data"], [189, 2, 1, "", "compute_one_day"], [189, 2, 1, "", "execute"], [189, 2, 1, "", "get_days"], [189, 2, 1, "", "get_key"], [189, 2, 1, "", "get_variable"], [189, 4, 1, "", "origin"], [189, 2, 1, "", "prepare"], [189, 2, 1, "", "to_date"]], "gridmet.task.ComputeGridmetTask.compute_one_day.params": [[189, 3, 1, "", "day"], [189, 3, 1, "", "layer"], [189, 3, 1, "", "writer"]], "gridmet.task.ComputeGridmetTask.execute.params": [[189, 3, 1, "", "mode"]], "gridmet.task.ComputeGridmetTask.params": [[189, 3, 1, "", "date_filter"], [189, 3, 1, "", "infile"], [189, 3, 1, "", "outfile"], [189, 3, 1, "", "variable"], [189, 3, 1, "", "year"]], "gridmet.task.ComputePointsTask": [[189, 2, 1, "", "compute_one_day"], [189, 2, 1, "", "execute"], [189, 4, 1, "", "force_standard_api"], [189, 2, 1, "", "get_key"], [189, 2, 1, "", "make_point"], [189, 2, 1, "", "prepare"]], "gridmet.task.ComputePointsTask.compute_one_day.params": [[189, 3, 1, "", "day"], [189, 3, 1, "", "layer"], [189, 3, 1, "", "writer"]], "gridmet.task.ComputePointsTask.execute.params": [[189, 3, 1, "", "mode"]], "gridmet.task.ComputePointsTask.params": [[189, 3, 1, "", "coordinates"], [189, 3, 1, "", "infile"], [189, 3, 1, "", "metadata"], [189, 3, 1, "", "outfile"], [189, 3, 1, "", "points_file"], [189, 3, 1, "", "variable"], [189, 3, 1, "", "year"]], "gridmet.task.ComputeShapesTask": [[189, 2, 1, "", "compute_one_day"], [189, 2, 1, "", "get_key"]], "gridmet.task.ComputeShapesTask.compute_one_day.params": [[189, 3, 1, "", "day"], [189, 3, 1, "", "layer"], [189, 3, 1, "", "writer"]], "gridmet.task.ComputeShapesTask.params": [[189, 3, 1, "", "date_filter"], [189, 3, 1, "", "geography"], [189, 3, 1, "", "infile"], [189, 3, 1, "", "outfile"], [189, 3, 1, "", "shapefile"], [189, 3, 1, "", "strategy"], [189, 3, 1, "", "variable"], [189, 3, 1, "", "year"]], "gridmet.task.DownloadGridmetTask": [[189, 4, 1, "", "BLOCK_SIZE"], [189, 2, 1, "", "execute"], [189, 2, 1, "", "get_url"], [189, 2, 1, "", "target"]], "gridmet.task.DownloadGridmetTask.get_url.params": [[189, 3, 1, "", "variable"], [189, 3, 1, "", "year"]], "gridmet.task.DownloadGridmetTask.params": [[189, 3, 1, "", "destination"], [189, 3, 1, "", "variable"], [189, 3, 1, "", "year"]], "gridmet.task.GridmetTask": [[189, 2, 1, "", "destination_file_name"], [189, 2, 1, "", "execute"], [189, 2, 1, "", "find_shape_file"]], "gridmet.task.GridmetTask.destination_file_name.params": [[189, 3, 1, "", "context"], [189, 3, 1, "", "variable"], [189, 3, 1, "", "year"]], "gridmet.task.GridmetTask.find_shape_file.params": [[189, 3, 1, "", "context"], [189, 3, 1, "", "shape"], [189, 3, 1, "", "year"]], "gridmet.task.GridmetTask.params": [[189, 3, 1, "", "context"], [189, 3, 1, "", "variable"], [189, 3, 1, "", "year"]], "gridmet.task.ListCollector": [[189, 2, 1, "", "get_result"], [189, 2, 1, "", "writerow"]], "gridmet.task.Parallel": [[189, 4, 1, "", "bands"], [189, 4, 1, "", "days"], [189, 4, 1, "", "points"]], "": [[120, 0, 0, "-", "nsaph"]], "nsaph": [[97, 0, 0, "-", "adi"], [120, 5, 1, "", "app_name"], [99, 0, 0, "-", "create"], [102, 0, 0, "-", "db"], [106, 0, 0, "-", "fips"], [120, 5, 1, "", "init_logging"], [113, 0, 0, "-", "link_gis"], [114, 0, 0, "-", "loader"], [122, 0, 0, "-", "pg_keywords"]], "nsaph.adi": [[97, 5, 1, "", "add_gis_columns"]], "nsaph.create": [[99, 5, 1, "", "create_table"]], "nsaph.data_model": [[103, 0, 0, "-", "domain"], [111, 0, 0, "-", "inserter"], [117, 0, 0, "-", "model"], [131, 0, 0, "-", "utils"]], "nsaph.data_model.domain": [[103, 1, 1, "", "Domain"]], "nsaph.data_model.domain.Domain": [[103, 4, 1, "", "CREATE"], [103, 2, 1, "", "add_fk_validation"], [103, 2, 1, "", "add_index"], [103, 2, 1, "", "add_index_by_ddl"], [103, 2, 1, "", "append_ddl"], [103, 2, 1, "", "column_spec"], [103, 2, 1, "", "create"], [103, 2, 1, "", "create_object_from"], [103, 2, 1, "", "create_table"], [103, 2, 1, "", "create_true_table"], [103, 2, 1, "", "ddl_for_node"], [103, 2, 1, "", "drop"], [103, 2, 1, "", "extract_generation_code"], [103, 2, 1, "", "find"], [103, 2, 1, "", "find_dependent"], [103, 2, 1, "", "find_mapped_column_name"], [103, 2, 1, "", "fqn"], [103, 2, 1, "", "generate_insert_from_select"], [103, 2, 1, "", "get"], [103, 2, 1, "", "get_column_type"], [103, 2, 1, "", "get_columns"], [103, 2, 1, "", "get_columns_as_dict"], [103, 2, 1, "", "get_index_ddl"], [103, 2, 1, "", "get_multi_column_index_ddl"], [103, 2, 1, "", "get_select_from"], [103, 2, 1, "", "has"], [103, 2, 1, "", "has_column_spec"], [103, 2, 1, "", "has_hard_linked_children"], [103, 2, 1, "", "init"], [103, 2, 1, "", "is_array"], [103, 2, 1, "", "is_column_wildcard"], [103, 2, 1, "", "is_generated"], [103, 2, 1, "", "list_columns"], [103, 2, 1, "", "list_identifiers"], [103, 2, 1, "", "list_source_columns"], [103, 2, 1, "", "map_selected_columns"], [103, 2, 1, "", "matches"], [103, 2, 1, "", "need_index"], [103, 2, 1, "", "parse_wildcard_column_spec"], [103, 2, 1, "", "set_sloppy"], [103, 2, 1, "", "skip"], [103, 2, 1, "", "spillover_table"], [103, 2, 1, "", "view_column_joined"], [103, 2, 1, "", "view_column_spec"]], "nsaph.data_model.inserter": [[111, 1, 1, "", "Inserter"], [111, 5, 1, "", "compute"]], "nsaph.data_model.inserter.Inserter": [[111, 2, 1, "", "Batch"], [111, 2, 1, "", "Table"], [111, 2, 1, "", "drilldown"], [111, 2, 1, "", "get_autocommit"], [111, 2, 1, "", "get_cumulative_timing"], [111, 2, 1, "", "get_thread_timing"], [111, 2, 1, "", "get_timestamp"], [111, 2, 1, "", "get_timings"], [111, 2, 1, "", "import_file"], [111, 2, 1, "", "log_progress"], [111, 2, 1, "", "prepare"], [111, 2, 1, "", "push"], [111, 2, 1, "", "read_batch"], [111, 2, 1, "", "reset_timer"], [111, 2, 1, "", "stamp_time"], [111, 2, 1, "", "timer"]], "nsaph.data_model.model": [[117, 1, 1, "", "CustomColumn"], [117, 1, 1, "", "Table"], [117, 5, 1, "", "csv_reader"], [117, 5, 1, "", "index_method"], [117, 5, 1, "", "load_range"], [117, 5, 1, "", "unquote"]], "nsaph.data_model.model.CustomColumn": [[117, 2, 1, "", "extract_value"]], "nsaph.data_model.model.Table": [[117, 2, 1, "", "add_column"], [117, 2, 1, "", "add_data"], [117, 2, 1, "", "analyze"], [117, 2, 1, "", "build_indices"], [117, 2, 1, "", "copy_data"], [117, 2, 1, "", "create"], [117, 2, 1, "", "drop"], [117, 2, 1, "", "fopen"], [117, 2, 1, "", "get_index_ddl"], [117, 2, 1, "", "guess_types"], [117, 2, 1, "", "log_progress"], [117, 2, 1, "", "make_column"], [117, 2, 1, "", "make_fips_column"], [117, 2, 1, "", "make_int_column"], [117, 2, 1, "", "make_iso_column"], [117, 2, 1, "", "parse_fips12"], [117, 2, 1, "", "save"], [117, 2, 1, "", "type_from_metadata"]], "nsaph.data_model.model.Table.make_iso_column.params": [[117, 3, 1, "", "anchor"], [117, 3, 1, "", "cursor"], [117, 3, 1, "", "include"]], "nsaph.data_model.utils": [[131, 1, 1, "", "CSVLikeJsonReader"], [131, 1, 1, "", "DataReader"], [131, 5, 1, "", "basename"], [131, 5, 1, "", "entry_to_path"], [131, 5, 1, "", "regex"], [131, 5, 1, "", "split"]], "nsaph.data_model.utils.CSVLikeJsonReader": [[131, 2, 1, "", "close"], [131, 2, 1, "", "open"]], "nsaph.data_model.utils.DataReader": [[131, 2, 1, "", "get_path"], [131, 2, 1, "", "open_csv"], [131, 2, 1, "", "open_fst"], [131, 2, 1, "", "open_fwf"], [131, 2, 1, "", "open_json"], [131, 2, 1, "", "open_sas7bdat"], [131, 2, 1, "", "rows"]], "nsaph.data_model.utils.basename.params": [[131, 3, 1, "", "table"]], "nsaph.data_model.utils.entry_to_path.params": [[131, 3, 1, "", "entry"]], "nsaph.data_model.utils.split.params": [[131, 3, 1, "", "node"]], "nsaph.db": [[102, 1, 1, "", "Connection"], [102, 1, 1, "", "ResultSetDeprecated"], [102, 5, 1, "", "test_connection"]], "nsaph.db.Connection": [[102, 2, 1, "", "close"], [102, 2, 1, "", "connect"], [102, 2, 1, "", "connect_to_database"], [102, 2, 1, "", "connect_via_tunnel"], [102, 4, 1, "", "default_filename"], [102, 2, 1, "", "default_port"], [102, 4, 1, "", "default_section"], [102, 2, 1, "", "get_database_types"], [102, 2, 1, "", "host_name"], [102, 2, 1, "", "read_config"], [102, 2, 1, "", "resolve_host"]], "nsaph.db.ResultSetDeprecated": [[102, 4, 1, "", "SIZE"]], "nsaph.init_logging.params": [[120, 3, 1, "", "level"], [120, 3, 1, "", "name"], [120, 3, 1, "", "with_thread_id"]], "nsaph.link_gis": [[113, 5, 1, "", "add_gis_columns"]], "nsaph.loader": [[114, 1, 1, "", "LoaderBase"], [101, 0, 0, "-", "common"], [101, 0, 0, "-", "data_loader"], [114, 5, 1, "", "diff"], [109, 0, 0, "-", "index_builder"], [112, 0, 0, "-", "introspector"], [115, 0, 0, "-", "loader_config"], [118, 0, 0, "-", "monitor"], [123, 0, 0, "-", "project_loader"], [133, 0, 0, "-", "vacuum"]], "nsaph.loader.LoaderBase": [[114, 2, 1, "", "execute_with_monitor"], [114, 2, 1, "", "find_file_in_path"], [114, 2, 1, "", "get_domain"], [114, 2, 1, "", "get_pid"], [114, 2, 1, "", "log_activity"]], "nsaph.loader.common": [[101, 1, 1, "", "CommonConfig"], [101, 1, 1, "", "DBConnectionConfig"], [101, 1, 1, "", "DBTableConfig"]], "nsaph.loader.common.CommonConfig": [[101, 4, 1, "", "domain"], [101, 4, 1, "", "registry"]], "nsaph.loader.common.CommonConfig.params": [[101, 3, 1, "", "description"], [101, 3, 1, "", "subclass"]], "nsaph.loader.common.DBConnectionConfig": [[101, 4, 1, "", "autocommit"], [101, 4, 1, "", "connection"], [101, 4, 1, "", "db"], [101, 4, 1, "", "dryrun"], [101, 4, 1, "", "verbose"]], "nsaph.loader.common.DBConnectionConfig.params": [[101, 3, 1, "", "description"], [101, 3, 1, "", "subclass"]], "nsaph.loader.common.DBTableConfig.params": [[101, 3, 1, "", "description"], [101, 3, 1, "", "subclass"]], "nsaph.loader.common.DBTableConfig": [[101, 4, 1, "", "table"]], "nsaph.loader.data_loader": [[101, 1, 1, "", "DataLoader"]], "nsaph.loader.data_loader.DataLoader": [[101, 2, 1, "", "close"], [101, 2, 1, "", "commit"], [101, 2, 1, "", "drop"], [101, 2, 1, "", "get_connection"], [101, 2, 1, "", "get_connections"], [101, 2, 1, "", "get_files"], [101, 2, 1, "", "has_been_ingested"], [101, 2, 1, "", "import_data_from_file"], [101, 2, 1, "", "insert_from_select"], [101, 2, 1, "", "is_parallel"], [101, 2, 1, "", "load"], [101, 2, 1, "", "print_ddl"], [101, 2, 1, "", "print_table_ddl"], [101, 2, 1, "", "reset"], [101, 2, 1, "", "rollback"], [101, 2, 1, "", "run"], [101, 2, 1, "", "set_table"]], "nsaph.loader.diff.params": [[114, 3, 1, "", "files"]], "nsaph.loader.index_builder": [[109, 1, 1, "", "IndexBuilder"], [109, 1, 1, "", "IndexerConfig"], [109, 5, 1, "", "find_name"]], "nsaph.loader.index_builder.IndexBuilder": [[109, 2, 1, "", "build"], [109, 2, 1, "", "drop"], [109, 2, 1, "", "drop_all"], [109, 2, 1, "", "execute"], [109, 2, 1, "", "print_stat"], [109, 2, 1, "", "run"]], "nsaph.loader.index_builder.IndexerConfig.params": [[109, 3, 1, "", "description"], [109, 3, 1, "", "subclass"]], "nsaph.loader.introspector": [[112, 6, 1, "", "InconsistentTypes"], [112, 1, 1, "", "Introspector"], [112, 5, 1, "", "test"]], "nsaph.loader.introspector.Introspector": [[112, 2, 1, "", "append_file_column"], [112, 2, 1, "", "append_record_column"], [112, 2, 1, "", "append_sql_column"], [112, 2, 1, "", "classify"], [112, 2, 1, "", "csv_reader"], [112, 2, 1, "", "db_type"], [112, 2, 1, "", "fopen"], [112, 2, 1, "", "get_columns"], [112, 2, 1, "", "guess_str"], [112, 2, 1, "", "guess_types"], [112, 2, 1, "", "handle_csv"], [112, 2, 1, "", "handle_json"], [112, 2, 1, "", "handle_sas"], [112, 2, 1, "", "introspect"], [112, 2, 1, "", "load_csv"], [112, 2, 1, "", "load_fst"], [112, 2, 1, "", "load_json"], [112, 2, 1, "", "load_range"], [112, 2, 1, "", "load_sas"], [112, 2, 1, "", "name"], [112, 2, 1, "", "reconcile"], [112, 2, 1, "", "sas2db_type"], [112, 2, 1, "", "unquote"]], "nsaph.loader.loader_config": [[115, 1, 1, "", "DataLoaderAction"], [115, 1, 1, "", "LoaderConfig"], [115, 1, 1, "", "Parallelization"]], "nsaph.loader.loader_config.DataLoaderAction": [[115, 4, 1, "", "drop"], [115, 4, 1, "", "insert"], [115, 4, 1, "", "load"], [115, 2, 1, "", "new"], [115, 4, 1, "", "print"]], "nsaph.loader.loader_config.LoaderConfig": [[115, 4, 1, "", "action"], [115, 4, 1, "", "buffer"], [115, 4, 1, "", "data"], [115, 4, 1, "", "incremental"], [115, 4, 1, "", "limit"], [115, 4, 1, "", "log"], [115, 4, 1, "", "page"], [115, 4, 1, "", "parallelization"], [115, 4, 1, "", "pattern"], [115, 4, 1, "", "reset"], [115, 4, 1, "", "sloppy"], [115, 4, 1, "", "threads"], [115, 2, 1, "", "validate"]], "nsaph.loader.loader_config.LoaderConfig.params": [[115, 3, 1, "", "description"], [115, 3, 1, "", "subclass"]], "nsaph.loader.loader_config.LoaderConfig.validate.params": [[115, 3, 1, "", "attr"], [115, 3, 1, "", "value"]], "nsaph.loader.loader_config.Parallelization": [[115, 4, 1, "", "files"], [115, 4, 1, "", "lines"], [115, 4, 1, "", "none"]], "nsaph.loader.monitor": [[118, 1, 1, "", "Activity"], [118, 1, 1, "", "DBActivityMonitor"]], "nsaph.loader.monitor.DBActivityMonitor": [[118, 2, 1, "", "get_activity"], [118, 2, 1, "", "get_indexing_progress"], [118, 2, 1, "", "run"]], "nsaph.loader.project_loader": [[123, 1, 1, "", "ProjectLoader"], [123, 5, 1, "", "is_relative_to"], [123, 5, 1, "", "remove_ext"]], "nsaph.loader.project_loader.ProjectLoader": [[123, 2, 1, "", "introspect"], [123, 2, 1, "", "new_domain"], [123, 2, 1, "", "run"], [123, 2, 1, "", "save_registry"]], "nsaph.loader.project_loader.ProjectLoader.params": [[123, 3, 1, "", "context"]], "nsaph.loader.vacuum": [[133, 1, 1, "", "Vacuum"], [133, 5, 1, "", "find_name"]], "nsaph.loader.vacuum.Vacuum": [[133, 2, 1, "", "log_activity"], [133, 2, 1, "", "run"]], "nsaph.requests": [[107, 0, 0, "-", "hdf5_export"], [124, 0, 0, "-", "query"]], "nsaph.requests.hdf5_export": [[107, 1, 1, "", "Dataset"], [107, 5, 1, "", "append"], [107, 5, 1, "", "dtype"], [107, 5, 1, "", "export"], [107, 5, 1, "", "map2ds"], [107, 5, 1, "", "store"]], "nsaph.requests.hdf5_export.Dataset": [[107, 2, 1, "", "add_index"], [107, 2, 1, "", "append"], [107, 2, 1, "", "clear"], [107, 2, 1, "", "to_hdf5"], [107, 2, 1, "", "type_name"]], "nsaph.requests.hdf5_export.export.params": [[107, 3, 1, "", "connection_name"], [107, 3, 1, "", "db_ini"], [107, 3, 1, "", "path_to_user_request"]], "nsaph.requests.query": [[124, 1, 1, "", "Query"], [124, 5, 1, "", "all_tables"], [124, 5, 1, "", "collect_tables"], [124, 5, 1, "", "find_tables"], [124, 5, 1, "", "fqn"], [124, 5, 1, "", "generate"], [124, 5, 1, "", "generate_from"], [124, 5, 1, "", "generate_order_by"], [124, 5, 1, "", "generate_select"], [124, 5, 1, "", "generate_where"], [124, 5, 1, "", "reduce_tables"]], "nsaph.requests.query.Query": [[124, 2, 1, "", "execute"], [124, 2, 1, "", "prepare"], [124, 4, 1, "", "sql"]], "nsaph.util": [[100, 0, 0, "-", "cwl_collect_outputs"], [105, 0, 0, "-", "executors"], [110, 0, 0, "-", "init_core_db"], [119, 0, 0, "-", "net"], [121, 0, 0, "-", "pg_json_dump"], [126, 0, 0, "-", "resources"], [128, 0, 0, "-", "sas_explorer"], [129, 0, 0, "-", "shapes"], [130, 0, 0, "-", "ssa2fips"], [134, 0, 0, "-", "zip2fips"]], "nsaph.util.cwl_collect_outputs": [[100, 5, 1, "", "collect"]], "nsaph.util.executors": [[105, 1, 1, "", "BlockingThreadPoolExecutor"], [105, 5, 1, "", "thread_initializer"]], "nsaph.util.executors.BlockingThreadPoolExecutor": [[105, 2, 1, "", "submit"], [105, 2, 1, "", "wait"], [105, 2, 1, "", "wait_for_completion"]], "nsaph.util.init_core_db": [[110, 5, 1, "", "execute"], [110, 5, 1, "", "get_sql_dir"], [110, 5, 1, "", "init_core"], [110, 5, 1, "", "load_data"], [110, 5, 1, "", "parse_args"]], "nsaph.util.net": [[119, 5, 1, "", "get_hostname_as_localhost"]], "nsaph.util.pg_json_dump": [[121, 5, 1, "", "add_state_fips"], [121, 5, 1, "", "dump"], [121, 5, 1, "", "ensure"], [121, 5, 1, "", "export"], [121, 5, 1, "", "flush"], [121, 5, 1, "", "fqn"], [121, 5, 1, "", "import_table"], [121, 5, 1, "", "quote"], [121, 5, 1, "", "result_set"], [121, 5, 1, "", "show"]], "nsaph.util.resources": [[126, 5, 1, "", "get_resource_dir"], [126, 5, 1, "", "get_resources"], [126, 5, 1, "", "name2path"]], "nsaph.util.sas_explorer": [[128, 5, 1, "", "info"], [128, 5, 1, "", "simulate"]], "nsaph.util.shapes": [[129, 5, 1, "", "install"]], "nsaph.util.ssa2fips": [[130, 1, 1, "", "SSA2FIPS"], [130, 1, 1, "", "SSAFile"]], "nsaph.util.ssa2fips.SSA2FIPS": [[130, 4, 1, "", "meta"], [130, 2, 1, "", "print"], [130, 2, 1, "", "read"], [130, 2, 1, "", "store"], [130, 4, 1, "", "y"], [130, 4, 1, "", "years"]], "nsaph.util.ssa2fips.SSAFile": [[130, 2, 1, "", "read"], [130, 2, 1, "", "set_year"], [130, 2, 1, "", "values"]], "nsaph.util.zip2fips": [[134, 1, 1, "", "Zip2FipsCrossWalk"]], "nsaph.util.zip2fips.Zip2FipsCrossWalk": [[134, 2, 1, "", "download"], [134, 4, 1, "", "m2q"], [134, 2, 1, "", "save"], [134, 4, 1, "", "table"], [134, 4, 1, "", "url_pattern"]], "nsaph_gis": [[166, 0, 0, "-", "annotator"], [167, 0, 0, "-", "compute_shape"], [168, 0, 0, "-", "constants"], [169, 0, 0, "-", "downloader"], [170, 0, 0, "-", "geometry"]], "nsaph_gis.annotator": [[166, 1, 1, "", "GISAnnotator"]], "nsaph_gis.annotator.GISAnnotator": [[166, 2, 1, "", "join"], [166, 2, 1, "", "matches"]], "nsaph_gis.annotator.GISAnnotator.join.params": [[166, 3, 1, "", "df"], [166, 3, 1, "", "x"], [166, 3, 1, "", "y"]], "nsaph_gis.annotator.GISAnnotator.params": [[166, 3, 1, "", "columns"], [166, 3, 1, "", "crs"], [166, 3, 1, "", "shape_files"]], "nsaph_gis.compute_shape": [[167, 1, 1, "", "Record"], [167, 1, 1, "", "StatsCounter"]], "nsaph_gis.compute_shape.Record": [[167, 4, 1, "", "mean"], [167, 4, 1, "", "prop"]], "nsaph_gis.compute_shape.StatsCounter": [[167, 2, 1, "", "process"]], "nsaph_gis.compute_shape.StatsCounter.process.params": [[167, 3, 1, "", "affine"], [167, 3, 1, "", "geography"], [167, 3, 1, "", "layer"], [167, 3, 1, "", "shapefile"], [167, 3, 1, "", "strategy"]], "nsaph_gis.constants": [[175, 1, 1, "", "Geography"], [220, 1, 1, "", "RasterizationStrategy"]], "nsaph_gis.constants.Geography": [[168, 4, 1, "", "county"], [168, 4, 1, "", "custom"], [168, 4, 1, "", "zip"]], "nsaph_gis.constants.RasterizationStrategy": [[220, 4, 1, "", "all_touched"], [220, 4, 1, "", "combined"], [220, 4, 1, "", "default"], [220, 4, 1, "", "downscale"]], "nsaph_gis.downloader": [[169, 1, 1, "", "GISDownloader"]], "nsaph_gis.downloader.GISDownloader": [[169, 4, 1, "", "COUNTY_TEMPLATE"], [169, 4, 1, "", "ZIP_TEMPLATE"], [169, 2, 1, "", "download_county"], [169, 2, 1, "", "download_shapes"], [169, 2, 1, "", "download_zip"]], "nsaph_gis.geometry": [[170, 1, 1, "", "PointInRaster"]], "nsaph_gis.geometry.PointInRaster": [[170, 4, 1, "", "COMPLETELY_MASKED"], [170, 4, 1, "", "PARTIALLY_MASKED"], [170, 2, 1, "", "array"], [170, 2, 1, "", "bilinear"], [170, 2, 1, "", "is_masked"], [170, 4, 1, "", "window"], [170, 4, 1, "", "x"], [170, 4, 1, "", "y"]], "nsaph_gis.geometry.PointInRaster.bilinear.params": [[170, 3, 1, "", "raster"]], "nsaph_utils": [[240, 0, 0, "-", "DataSet"]], "nsaph_utils.docutils": [[242, 0, 0, "-", "collector"], [245, 0, 0, "-", "copy_section"], [246, 0, 0, "-", "cwl2md"], [251, 0, 0, "-", "md_creator"]], "nsaph_utils.docutils.collector": [[242, 1, 1, "", "ModuleCollector"], [242, 5, 1, "", "main"]], "nsaph_utils.docutils.collector.ModuleCollector": [[242, 2, 1, "", "collect"]], "nsaph_utils.docutils.copy_section": [[245, 5, 1, "", "get_header_level"], [245, 5, 1, "", "insert_section"], [245, 5, 1, "", "main"], [245, 5, 1, "", "read_section"]], "nsaph_utils.docutils.cwl2md": [[246, 1, 1, "", "CWLParser"], [246, 5, 1, "", "main"]], "nsaph_utils.docutils.cwl2md.CWLParser": [[246, 2, 1, "", "parse"]], "nsaph_utils.docutils.md_creator": [[251, 1, 1, "", "MDCreator"]], "nsaph_utils.docutils.md_creator.MDCreator": [[251, 2, 1, "", "add_header"], [251, 2, 1, "", "add_image"], [251, 2, 1, "", "add_table"], [251, 2, 1, "", "add_text"], [251, 2, 1, "", "save"]], "nsaph_utils.interpolation": [[248, 0, 0, "-", "interface"], [249, 0, 0, "-", "interpolate_ma"]], "nsaph_utils.interpolation.interface": [[248, 5, 1, "", "interpolate"]], "nsaph_utils.interpolation.interface.interpolate.params": [[248, 3, 1, "", "by_var"], [248, 3, 1, "", "data"], [248, 3, 1, "", "interpolate_vars"], [248, 3, 1, "", "ma_num"], [248, 3, 1, "", "method"], [248, 3, 1, "", "tvar"]], "nsaph_utils.interpolation.interpolate_ma": [[249, 5, 1, "", "calc_weights"], [249, 5, 1, "", "get_indices"], [249, 5, 1, "", "interpolate_ma"]], "nsaph_utils.interpolation.interpolate_ma.calc_weights.params": [[249, 3, 1, "", "i"], [249, 3, 1, "", "indices"], [249, 3, 1, "", "vec"]], "nsaph_utils.interpolation.interpolate_ma.get_indices.params": [[249, 3, 1, "", "index"], [249, 3, 1, "", "k"], [249, 3, 1, "", "vec"]], "nsaph_utils.interpolation.interpolate_ma.interpolate_ma.params": [[249, 3, 1, "", "k"], [249, 3, 1, "", "num_vec"]], "nsaph_utils.qc": [[257, 0, 0, "-", "tester"]], "nsaph_utils.qc.tester": [[257, 1, 1, "", "Condition"], [257, 6, 1, "", "ExpectationError"], [257, 1, 1, "", "Severity"], [257, 1, 1, "", "Test"], [257, 1, 1, "", "Tester"]], "nsaph_utils.qc.tester.Condition": [[257, 4, 1, "", "count_missing"], [257, 4, 1, "", "data_type"], [257, 4, 1, "", "greater_than"], [257, 4, 1, "", "less_than"], [257, 4, 1, "", "no_missing"]], "nsaph_utils.qc.tester.Severity": [[257, 4, 1, "", "critical"], [257, 4, 1, "", "debug"], [257, 4, 1, "", "error"], [257, 4, 1, "", "info"], [257, 4, 1, "", "warning"]], "nsaph_utils.qc.tester.Test": [[257, 2, 1, "", "check"], [257, 4, 1, "", "val"]], "nsaph_utils.qc.tester.Test.check.params": [[257, 3, 1, "", "df"]], "nsaph_utils.qc.tester.Tester": [[257, 2, 1, "", "add"], [257, 2, 1, "", "check"], [257, 2, 1, "", "load_yaml"]], "nsaph_utils.utils": [[241, 0, 0, "-", "cli"], [244, 0, 0, "-", "context"], [247, 0, 0, "-", "fwf"], [250, 0, 0, "-", "io_utils"], [252, 0, 0, "-", "pyfst"]], "nsaph_utils.utils.context": [[244, 1, 1, "", "Argument"], [244, 1, 1, "", "Cardinality"], [244, 1, 1, "", "Context"]], "nsaph_utils.utils.context.Argument": [[244, 2, 1, "", "add_to"], [244, 2, 1, "", "get_action"], [244, 2, 1, "", "get_help"], [244, 2, 1, "", "get_nargs"], [244, 2, 1, "", "is_required"]], "nsaph_utils.utils.context.Argument.params": [[244, 3, 1, "", "aliases"], [244, 3, 1, "", "cardinality"], [244, 3, 1, "", "default"], [244, 3, 1, "", "help"], [244, 3, 1, "", "name"], [244, 3, 1, "", "type"], [244, 3, 1, "", "valid_values"]], "nsaph_utils.utils.context.Cardinality": [[244, 4, 1, "", "multiple"], [244, 4, 1, "", "single"]], "nsaph_utils.utils.context.Context": [[244, 4, 1, "", "compress"], [244, 2, 1, "", "default"], [244, 2, 1, "", "enum"], [244, 2, 1, "", "instantiate"], [244, 2, 1, "", "set_empty_args"], [244, 2, 1, "", "validate"], [244, 4, 1, "", "years"]], "nsaph_utils.utils.context.Context.enum.params": [[244, 3, 1, "", "cls"], [244, 3, 1, "", "s"]], "nsaph_utils.utils.context.Context.params": [[244, 3, 1, "", "description"], [244, 3, 1, "", "subclass"]], "nsaph_utils.utils.context.Context.validate.params": [[244, 3, 1, "", "attr"], [244, 3, 1, "", "value"]], "nsaph_utils.utils.fwf": [[247, 6, 1, "", "FTSParseException"], [247, 1, 1, "", "FWFColumn"], [247, 1, 1, "", "FWFMeta"], [247, 1, 1, "", "FWFReader"]], "nsaph_utils.utils.fwf.FWFColumn": [[247, 4, 1, "", "d"], [247, 4, 1, "", "end"], [247, 4, 1, "", "length"], [247, 4, 1, "", "name"], [247, 4, 1, "", "ord"], [247, 4, 1, "", "start"], [247, 4, 1, "", "type"]], "nsaph_utils.utils.fwf.FWFMeta": [[247, 4, 1, "", "columns"], [247, 4, 1, "", "ncol"], [247, 4, 1, "", "nrows"], [247, 4, 1, "", "path"], [247, 4, 1, "", "rlen"], [247, 4, 1, "", "size"]], "nsaph_utils.utils.fwf.FWFReader": [[247, 4, 1, "", "bad_lines"], [247, 2, 1, "", "close"], [247, 2, 1, "", "column_names"], [247, 4, 1, "", "good_lines"], [247, 2, 1, "", "next"], [247, 2, 1, "", "on_parse_exception"], [247, 2, 1, "", "open"], [247, 2, 1, "", "read_record"], [247, 2, 1, "", "validate"]], "nsaph_utils.utils.fwf.FWFReader.params": [[247, 3, 1, "", "meta"], [247, 3, 1, "", "ret_dict"]], "nsaph_utils.utils.io_utils": [[250, 1, 1, "", "CSVFileWrapper"], [250, 1, 1, "", "CSVWriter"], [250, 1, 1, "", "Collector"], [250, 1, 1, "", "DownloadTask"], [250, 1, 1, "", "ListCollector"], [250, 1, 1, "", "SpecialValues"], [250, 5, 1, "", "as_content"], [250, 5, 1, "", "as_csv_reader"], [250, 5, 1, "", "as_dict"], [250, 5, 1, "", "as_stream"], [250, 5, 1, "", "basename"], [250, 5, 1, "", "check_http_response"], [250, 5, 1, "", "count_lines"], [250, 5, 1, "", "dataframe2csv"], [250, 5, 1, "", "download"], [250, 5, 1, "", "file_as_csv_reader"], [250, 5, 1, "", "file_as_stream"], [250, 5, 1, "", "fopen"], [250, 5, 1, "", "fst2csv"], [250, 5, 1, "", "get_entries"], [250, 5, 1, "", "get_readme"], [250, 5, 1, "", "is_dir"], [250, 5, 1, "", "is_downloaded"], [250, 5, 1, "", "is_readme"], [250, 5, 1, "", "is_yaml_or_json"], [250, 5, 1, "", "sizeof_fmt"], [250, 5, 1, "", "write_csv"]], "nsaph_utils.utils.io_utils.CSVWriter": [[250, 2, 1, "", "flush"], [250, 2, 1, "", "writerow"]], "nsaph_utils.utils.io_utils.Collector": [[250, 2, 1, "", "flush"], [250, 2, 1, "", "writerow"]], "nsaph_utils.utils.io_utils.DownloadTask": [[250, 2, 1, "", "add_url"], [250, 2, 1, "", "is_up_to_date"], [250, 2, 1, "", "reset"]], "nsaph_utils.utils.io_utils.ListCollector": [[250, 2, 1, "", "get_result"], [250, 2, 1, "", "writerow"]], "nsaph_utils.utils.io_utils.SpecialValues": [[250, 4, 1, "", "NA"], [250, 4, 1, "", "NaN"], [250, 2, 1, "", "is_missing"], [250, 2, 1, "", "is_untyped"]], "nsaph_utils.utils.io_utils.as_content.params": [[250, 3, 1, "", "mode"], [250, 3, 1, "", "params"], [250, 3, 1, "", "url"]], "nsaph_utils.utils.io_utils.as_csv_reader.params": [[250, 3, 1, "", "url"]], "nsaph_utils.utils.io_utils.as_stream.params": [[250, 3, 1, "", "extension"], [250, 3, 1, "", "mode"], [250, 3, 1, "", "params"], [250, 3, 1, "", "url"]], "nsaph_utils.utils.io_utils.basename.params": [[250, 3, 1, "", "path"]], "nsaph_utils.utils.io_utils.check_http_response.params": [[250, 3, 1, "", "r"]], "nsaph_utils.utils.io_utils.file_as_csv_reader.params": [[250, 3, 1, "", "filename"]], "nsaph_utils.utils.io_utils.file_as_stream.params": [[250, 3, 1, "", "extension"], [250, 3, 1, "", "filename"], [250, 3, 1, "", "mode"]], "nsaph_utils.utils.io_utils.fopen.params": [[250, 3, 1, "", "mode"], [250, 3, 1, "", "path"]], "nsaph_utils.utils.io_utils.get_entries.params": [[250, 3, 1, "", "path"]], "nsaph_utils.utils.io_utils.get_readme.params": [[250, 3, 1, "", "path"]], "nsaph_utils.utils.io_utils.is_dir.params": [[250, 3, 1, "", "path"]], "nsaph_utils.utils.io_utils.is_downloaded.params": [[250, 3, 1, "", "check_size"], [250, 3, 1, "", "target"], [250, 3, 1, "", "url"]], "nsaph_utils.utils.io_utils.is_readme.params": [[250, 3, 1, "", "name"]], "nsaph_utils.utils.io_utils.write_csv.params": [[250, 3, 1, "", "filter"], [250, 3, 1, "", "reader"], [250, 3, 1, "", "transformer"], [250, 3, 1, "", "write_header"], [250, 3, 1, "", "writer"]], "nsaph_utils.utils.pyfst": [[252, 1, 1, "", "FSTReader"], [252, 5, 1, "", "choose_cran_mirror"], [252, 5, 1, "", "ensure_packages"], [252, 5, 1, "", "read_fst"], [252, 5, 1, "", "vector2list"]], "nsaph_utils.utils.pyfst.FSTReader": [[252, 2, 1, "", "close"], [252, 2, 1, "", "current"], [252, 2, 1, "", "current_mapping"], [252, 2, 1, "", "current_row"], [252, 2, 1, "", "open"], [252, 2, 1, "", "read_next"], [252, 2, 1, "", "rewind"]], "pollution": [[180, 0, 0, "-", "aggregator"], [191, 0, 0, "-", "wustl_file_processor"]], "pollution.aggregator": [[180, 1, 1, "", "Aggregator"]], "pollution.aggregator.Aggregator": [[180, 2, 1, "", "collect_data"], [180, 2, 1, "", "compute"], [180, 2, 1, "", "execute"], [180, 2, 1, "", "prepare"], [180, 2, 1, "", "write_header"]], "pollution.aggregator.Aggregator.execute.params": [[180, 3, 1, "", "mode"]], "pollution.wustl_file_processor": [[191, 1, 1, "", "WUSTLFile"]], "pollution.wustl_file_processor.WUSTLFile": [[191, 2, 1, "", "execute"], [191, 2, 1, "", "parse_file_name"], [191, 2, 1, "", "prepare"]], "pollution.wustl_file_processor.WUSTLFile.params": [[191, 3, 1, "", "context"]], "tests": [[254, 0, 0, "-", "test_cli_context"], [255, 0, 0, "-", "test_interpolation"], [256, 0, 0, "-", "test_qc"]], "tests.test_cli_context": [[254, 1, 1, "", "MadeUpContext"], [254, 1, 1, "", "MyTestCase"]], "tests.test_cli_context.MadeUpContext.params": [[254, 3, 1, "", "description"], [254, 3, 1, "", "subclass"]], "tests.test_cli_context.MadeUpContext": [[254, 2, 1, "", "validate"]], "tests.test_cli_context.MadeUpContext.validate.params": [[254, 3, 1, "", "attr"], [254, 3, 1, "", "value"]], "tests.test_cli_context.MyTestCase": [[254, 2, 1, "", "test_custom_validate"], [254, 2, 1, "", "test_default_context"]], "tests.test_interpolation": [[255, 1, 1, "", "InterpolationTest"]], "tests.test_interpolation.InterpolationTest": [[255, 2, 1, "", "test_ma_interpolation"]], "tests.test_qc": [[256, 1, 1, "", "QCTests"]], "tests.test_qc.QCTests": [[256, 2, 1, "", "test_tests"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:parameter", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"how": [0, 93, 221], "add": 0, "data": [0, 3, 33, 37, 39, 40, 41, 42, 44, 48, 71, 74, 78, 79, 80, 81, 89, 90, 96, 114, 137, 151, 152, 154, 157, 158, 160, 192, 193, 194, 208, 209, 215, 225, 228, 259, 262, 263, 264, 266, 267], "databas": [0, 33, 41, 48, 72, 79, 80, 90, 93, 96, 102, 116, 157, 192, 208, 221, 227, 263], "what": [0, 179, 221, 222, 223, 263, 267], "ar": 0, "you": [0, 221], "ad": [0, 1], "model": [0, 39, 40, 44, 90, 96, 101, 117, 211], "v": 0, "introspect": [0, 91], "new": [0, 7, 233, 234], "domain": [0, 90, 103, 259], "exist": [0, 7, 231, 232], "tabl": [0, 10, 34, 41, 48, 68, 83, 86, 90, 94, 116, 135, 162, 212, 213], "creat": [0, 38, 41, 90, 93, 99, 135, 221, 227], "singl": [0, 41], "automat": 0, "ingest": [0, 39, 41, 78, 90, 214, 216, 217, 263], "multipl": [0, 38, 221], "file": [0, 3, 4, 39, 40, 41, 48, 71, 90, 93, 96, 149, 158, 210, 215, 216, 217, 221, 230, 260], "from": [0, 27, 48, 71, 91, 116, 155, 196, 197, 199, 201, 202, 204, 206, 214], "system": [0, 94, 149], "changelog": 1, "unreleas": 1, "chang": [1, 221], "fix": 1, "remov": 1, "about": 2, "store": [3, 27, 41], "censu": [4, 7, 10, 36, 155], "variabl": [4, 172, 221], "structur": [4, 44, 95, 96], "field": 4, "definit": [4, 41, 93], "exampl": [4, 39, 96, 104, 179, 221, 226, 231, 232, 233, 234], "skip": 4, "year": [4, 38, 41, 217], "document": [4, 39, 44, 92, 96, 239, 261, 263, 264], "contant": 5, "contribut": 6, "checklist": 6, "set": [7, 116, 221], "up": 7, "environ": [7, 93, 161, 221, 231, 232, 233, 234], "updat": 7, "an": 7, "instal": [7, 93, 165, 221, 226, 228, 235, 236], "nsaph_util": 7, "api": [7, 91, 101, 102, 114], "kei": [7, 41], "regist": 7, "conda": [7, 221, 222, 229, 231, 232, 233, 234, 235], "kernal": 7, "recip": 7, "frequent": 8, "ask": 8, "question": 8, "glossari": [9, 222], "nsaph": [10, 39, 88, 89, 90, 93, 96, 120, 137, 165, 225, 228, 239, 263, 264], "pipelin": [10, 39, 40, 41, 77, 78, 80, 84, 85, 148, 149, 150, 159, 160, 179, 195, 198, 200, 203, 205, 214, 263, 266], "introduct": [10, 40, 90, 95, 225, 263], "research": 10, "develop": [10, 224, 239, 267], "commun": 10, "old": 10, "doc": 10, "indic": [10, 44, 90, 96, 125, 239, 258, 264], "The": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 134, 141, 142, 145, 147, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "assemble_data": [11, 23], "modul": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 96, 97, 98, 99, 100, 101, 105, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 134, 141, 142, 145, 147, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 218, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "py": [11, 13, 14, 16, 19, 20, 21, 23], "calculate_dens": 12, "census_info": [13, 23], "cli": [14, 23, 241], "do_qc": 15, "except": [16, 23], "interpolate_data": 17, "load_data": 18, "queri": [19, 23, 42, 93, 124, 127, 137], "tigerweb": [20, 23], "util": [21, 23, 88, 91, 96, 120, 131, 132, 178, 179, 239, 263], "write_data": 22, "census_assembl": 24, "cwl": [24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 136, 179, 196, 197, 199, 201, 202, 204, 206, 222, 223, 226], "input": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "output": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "census_dens": 25, "census_ingest": [26, 27], "step": [26, 27, 30, 41, 71, 75, 76, 77, 78, 79, 80, 84, 85, 148, 149, 150, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 216, 217, 224], "sub": [27, 196, 197, 199, 201, 202, 204, 206], "workflow": [27, 36, 41, 71, 136, 196, 197, 199, 201, 202, 204, 206, 216, 217, 221], "census_interpol": 28, "census_qc": 29, "census_workflow": 30, "census_writ": 31, "index": [32, 70, 87, 90, 156, 207], "builder": [32, 70, 87, 156, 207], "descript": [32, 33, 34, 39, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 137, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 192, 193, 194, 195, 198, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "upload": [33, 157, 192, 208], "gridmet": [33, 172, 179, 192, 193, 195, 196, 197, 198, 200, 203, 205, 208, 209, 218], "tuner": [34, 86, 162, 213], "tool": [34, 37, 81, 86, 96, 136, 155, 162, 178, 179, 213, 267], "run": [34, 36, 86, 91, 162, 213, 221, 227], "vacuum": [34, 86, 133, 162, 213], "quick": [35, 228], "start": [35, 227, 228], "work": 36, "packag": [36, 37, 88, 93, 96, 120, 137, 138, 140, 143, 144, 165, 237, 239, 263, 265], "command": [36, 91, 179, 224, 226, 227], "line": [36, 91, 179, 226], "interfac": [36, 226, 248], "main": [36, 39, 138, 143, 173], "python": [36, 37, 44, 88, 93, 94, 96, 163, 165, 171, 179, 218, 221, 226, 238, 239, 265], "shapefil": [36, 148, 149, 155, 169], "download": [36, 139, 146, 148, 151, 152, 154, 158, 169, 177, 193, 194, 209, 214], "manipul": 37, "health": [37, 44], "cm": [37, 48, 74], "addit": 37, "detail": 37, "pars": [37, 40], "ft": [37, 40, 48, 82], "extens": 38, "us": [38, 43, 93, 140, 144, 146, 176, 179, 221, 226, 227, 261, 263], "feder": [38, 41, 81], "view": [38, 41, 68, 75, 76, 83, 212, 227], "differ": [38, 94], "gener": [38, 40, 48, 83, 90, 212, 263], "combin": [38, 41], "sourc": [38, 44, 90, 94, 96], "option": [38, 91, 140, 144], "column": [38, 39, 40, 41, 48, 90, 137], "exclud": 38, "cast": 38, "import": [39, 40], "medicaid": [39, 40, 42, 44, 48, 61, 71, 77, 84, 85], "process": [39, 40, 41, 77, 78, 79, 80, 84, 85, 148, 150, 197, 199, 202, 204, 206, 263, 266], "legaci": [39, 40], "statu": 39, "thi": [39, 261], "link": [39, 90], "describ": [39, 48, 96], "demograph": 39, "path": 39, "name": 39, "vm": 39, "rce": 39, "enrol": [39, 40, 41], "admiss": [39, 40, 41, 79], "yearli": 39, "elig": [39, 40], "monthli": [39, 137], "handl": [40, 41, 95], "raw": [40, 41, 74, 81], "schema": [40, 41, 90], "beneficiari": [40, 41, 80], "bene_id": 40, "dedupl": 40, "cleans": [40, 41], "inpati": [40, 41, 79], "sampl": [40, 91, 127, 137, 159, 160], "user": [40, 95, 96, 221, 226, 227], "request": [40, 88, 95, 96, 104], "medicar": [41, 44, 48, 62, 74, 78, 79, 80, 81], "overview": [41, 44, 91, 165, 239, 263], "1999": 41, "2010": 41, "2011": 41, "later": 41, "eventu": 41, "patient": [41, 42, 73], "summari": [41, 73, 260], "first": 41, "initi": [41, 68, 72, 83, 212], "condit": 41, "second": 41, "map": [41, 94, 108, 116], "counti": [41, 155], "fip": [41, 106, 108, 135], "code": [41, 94], "primari": 41, "uniqu": 41, "identifi": 41, "diagnos": 42, "list": [42, 221, 238], "problem": 42, "wildcard": 42, "calcul": 42, "number": 42, "hyperloglog": 43, "hll": 43, "hash": 43, "count": 43, "approxim": 43, "project": [44, 91, 96, 221, 226, 236], "softwar": [44, 96], "sql": [44, 92, 94, 96, 116, 135], "aggreg": [45, 137, 167, 180, 215, 216, 217], "create_schema_config": 46, "duplic": 47, "parser": [48, 82], "accompani": 48, "resdac": 48, "content": [48, 137, 173, 174, 264, 265], "abstract": [48, 114, 140, 144, 176], "class": [48, 103, 138, 140, 143, 144, 170, 173, 176], "concret": 48, "subclass": 48, "present": 48, "origin": 48, "should": 48, "helper": [48, 135], "function": [48, 49, 94, 132, 135], "init_cms_db": 50, "mcr_combine_t": 51, "mcr_create_test_data": 52, "mcr_data_load": 53, "mcr_file": 54, "mcr_fts2csv": 55, "mcr_fts2db": 56, "mcr_registri": 57, "mcr_sa": 58, "mcr_sas2db": 59, "mcr_sas2yaml": 60, "yaml": [61, 62, 96, 211], "medpar_convert": 63, "procedur": [64, 125], "random_selector": 65, "registri": [66, 147, 187], "table_popul": 67, "resourc": [69, 96, 126, 153], "loader": [69, 73, 74, 88, 89, 96, 114, 153], "load": [71, 91], "materi": [75, 76, 83, 212], "creator": [75, 76], "full": [77, 84, 85, 148, 149, 150, 221], "insid": 79, "core": [88, 96, 120, 263], "platform": [88, 90, 96, 225, 228, 262, 263, 264, 265, 267], "compon": [88, 163, 218], "data_model": 88, "usag": [89, 91, 101, 164], "statement": [90, 116], "invalid": 90, "record": 90, "comput": [90, 177, 179], "transpos": 90, "multi": 90, "ddl": [90, 108], "polici": 90, "nomenclatur": 90, "u": 90, "state": [90, 137], "directori": 91, "configur": [91, 101, 140, 144, 176, 221], "dry": 91, "onli": 91, "setup": [93, 253], "virtual": 93, "connect": [93, 96, 102], "execut": [93, 221], "explain": 93, "optim": 93, "between": 94, "territori": 94, "preliminari": 95, "consider": 95, "subpackag": 96, "wrapper": 96, "implement": 96, "incomplet": 96, "miscellan": 96, "adi": 97, "common": [98, 136], "cwl_collect_output": 100, "data_load": 101, "specif": 101, "executor": 105, "hdf5_export": 107, "hud": 108, "zip": [108, 135, 155], "index_build": 109, "init_core_db": 110, "insert": 111, "introspector": [112, 158], "link_gi": 113, "base": [114, 221], "loader_config": 115, "anoth": 116, "monitor": 118, "net": 119, "wide": 120, "pg_json_dump": 121, "pg_keyword": 122, "project_load": 123, "A": [125, 170], "renam": 125, "sas_explor": 128, "shape": [129, 167, 188, 219], "ssa2fip": 130, "zip2fip": 134, "direct": 135, "lookup": 135, "epa": [137, 138, 140, 143, 144, 148, 150, 157, 164], "airnow": [137, 138, 139, 140, 148, 151, 159, 161, 164, 194], "date": 137, "aq": [137, 143, 144, 150, 152, 154, 160, 164], "annual": [137, 160], "daili": [137, 160], "intern": [140, 144, 146, 176, 262], "context": [140, 144, 176, 244], "argument": [140, 144, 159, 160, 176], "airnow_setup": 141, "airnow_shap": 142, "cardin": [144, 176], "enum": [144, 168, 174, 176], "aqs_expand": 145, "script": [146, 226, 235, 236], "task": [146, 177, 189], "includ": [148, 226, 265], "airnowprocess": 149, "local": [149, 224], "retriev": 155, "websit": 155, "For": 160, "no2": 160, "nitrogen": 160, "pm25": 160, "small": 160, "particl": 160, "prepar": [161, 226], "toolkit": 164, "gi": [165, 166, 168, 171, 263], "librari": [165, 221], "annot": 166, "observ": 167, "valu": 167, "over": [167, 215], "relat": [168, 221], "point": 170, "raster": [170, 220], "band": 172, "paramet": [174, 221], "type": [175, 219], "geographi": [175, 215], "object": [176, 177], "subtask": 177, "i": [179, 222, 223, 263], "config": [181, 229], "csv2hdf5": 182, "exclude_csv": 183, "geop": 184, "gridmet_tool": 185, "launcher": 186, "test": [190, 226, 228], "wustl_file_processor": 191, "init_t": [196, 201], "gridmet_dwnl_onli": 199, "gridmet_humid": [201, 202], "gridmet_increment": 204, "gridmet_local_shap": 206, "rearrang": 210, "writer": 211, "pollut": 214, "washu": 214, "box": 214, "netcdf": [215, 216, 217], "given": 215, "one": [216, 217], "format": 216, "all": [218, 227], "strategi": 220, "guid": [221, 223], "can": [221, 267], "select": 221, "control": 221, "dure": 221, "manag": 221, "third": 221, "parti": 221, "requir": [221, 238], "r": [221, 226, 237], "enforc": 221, "order": 221, "git": 221, "submodul": 221, "overrid": 221, "base_url": 221, "airflow": [221, 222, 223, 224, 226, 227], "admin": 221, "usernam": 221, "password": 221, "postgresql": [221, 222, 227, 231, 232, 233, 234], "when": [221, 224, 227], "need": [221, 267], "default": [221, 229], "server": 221, "authent": 221, "tell": 221, "network": 221, "note": 221, "mac": 221, "avail": 221, "env": 221, "readi": 221, "contain": [221, 224, 227, 233, 234], "faq": 222, "docker": [222, 224, 230], "compos": [222, 230], "deploy": [223, 224, 225, 228, 263], "howto": 224, "build": [224, 263], "rebuild": 224, "goe": 224, "wrong": 224, "copi": 224, "dag": 224, "folder": 224, "mode": [226, 267], "1": 226, "basic": 226, "hello": 226, "world": 226, "2": 226, "3": 226, "altern": 226, "wai": 226, "ui": 226, "some": 227, "To": 227, "log": 227, "attach": 227, "bash": 227, "doe": [227, 267], "stop": 227, "your": 227, "delet": 227, "imag": 227, "volum": 227, "upgrad": 227, "prerequisit": 228, "without": [232, 234], "current": 239, "todo": 239, "dataset": 240, "collector": 242, "conf": 243, "copy_sect": 245, "cwl2md": 246, "fwf": 247, "interpolate_ma": 249, "io_util": 250, "md_creator": 251, "pyfst": 252, "test_cli_context": 254, "test_interpol": 255, "test_qc": 256, "tester": 257, "subject": 259, "area": 259, "transfer": 260, "term": [261, 263], "acronym": [261, 263], "home": 263, "deploi": [263, 267], "repositori": 263, "why": 267, "do": 267, "we": 267, "architectur": 267, "support": 267, "program": 267, "languag": 267, "where": 267}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"How to add data to the database": [[0, "how-to-add-data-to-the-database"]], "What data are you adding?": [[0, "what-data-are-you-adding"]], "Data modelling vs data introspection": [[0, "data-modelling-vs-data-introspection"]], "Adding new data domain": [[0, "adding-new-data-domain"]], "Adding data to existing table": [[0, "adding-data-to-existing-table"]], "Creating new single table": [[0, "creating-new-single-table"]], "Automatically ingesting multiple files from a file system": [[0, "automatically-ingesting-multiple-files-from-a-file-system"]], "Changelog": [[1, "changelog"]], "[Unreleased]": [[1, "unreleased"]], "Added": [[1, "added"]], "Changed": [[1, "changed"]], "Fixed": [[1, "fixed"]], "Removed": [[1, "removed"]], "About": [[2, "about"]], "Stored Data Files": [[3, "stored-data-files"]], "Census Variable File Structure": [[4, "census-variable-file-structure"]], "Field Definitions": [[4, "field-definitions"]], "Examples": [[4, "examples"]], "Skipping years for a Variable": [[4, "skipping-years-for-a-variable"]], "Census Variable Documentation": [[4, "census-variable-documentation"]], "Contant": [[5, "contant"]], "Contributing Checklist": [[6, "contributing-checklist"]], "Setting Up Environment": [[7, "setting-up-environment"]], "Setting up a new environment": [[7, "setting-up-a-new-environment"]], "Updating an existing environment": [[7, "updating-an-existing-environment"]], "Installing census": [[7, "installing-census"]], "Installing nsaph_utils": [[7, "installing-nsaph-utils"]], "Setting up Census API Key": [[7, "setting-up-census-api-key"]], "Registering the Conda Kernal": [[7, "registering-the-conda-kernal"]], "Updating the Environment Recipe": [[7, "updating-the-environment-recipe"]], "Frequently Asked Questions": [[8, "frequently-asked-questions"]], "Glossary": [[9, "glossary"]], "NSAPH Census Pipelines": [[10, "nsaph-census-pipelines"]], "Introduction": [[10, null], [40, "introduction"], [95, "introduction"]], "Researchers": [[10, null]], "Developers": [[10, null]], "Community": [[10, null]], "Old Doc": [[10, null]], "Indices and tables": [[10, "indices-and-tables"]], "The assemble_data Module": [[11, "module-census.assemble_data"]], "assemble_data.py": [[11, "assemble-data-py"], [23, "assemble-data-py"]], "The calculate_density Module": [[12, "module-census.calculate_density"]], "The census_info Module": [[13, "module-census.census_info"]], "census_info.py": [[13, "census-info-py"], [23, "census-info-py"]], "The cli Module": [[14, "module-census.cli"], [241, "module-nsaph_utils.utils.cli"]], "cli.py": [[14, "cli-py"], [23, "cli-py"]], "The do_qc Module": [[15, "module-census.do_qc"]], "The exceptions Module": [[16, "module-census.exceptions"]], "exceptions.py": [[16, "exceptions-py"], [23, "exceptions-py"]], "The interpolate_data Module": [[17, "module-census.interpolate_data"]], "The load_data Module": [[18, "module-census.data.load_data"]], "The query Module": [[19, "module-census.query"], [124, "module-nsaph.requests.query"]], "query.py": [[19, "query-py"], [23, "query-py"]], "The tigerweb Module": [[20, "module-census.tigerweb"]], "tigerweb.py": [[20, "tigerweb-py"], [23, "tigerweb-py"]], "The utils Module": [[21, "module-census.utils"], [131, "module-nsaph.data_model.utils"]], "utils.py": [[21, "utils-py"], [23, "utils-py"]], "The write_data Module": [[22, "module-census.write_data"]], "Modules": [[23, "modules"]], "census_assemble.cwl": [[24, "census-assemble-cwl"]], "Inputs": [[24, "inputs"], [25, "inputs"], [26, "inputs"], [27, "inputs"], [28, "inputs"], [29, "inputs"], [30, "inputs"], [31, "inputs"], [32, "inputs"], [33, "inputs"], [34, "inputs"], [68, "inputs"], [69, "inputs"], [70, "inputs"], [71, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [84, "inputs"], [85, "inputs"], [86, "inputs"], [87, "inputs"], [148, "inputs"], [149, "inputs"], [150, "inputs"], [151, "inputs"], [152, "inputs"], [153, "inputs"], [154, "inputs"], [155, "inputs"], [156, "inputs"], [157, "inputs"], [158, "inputs"], [161, "inputs"], [162, "inputs"], [192, "inputs"], [193, "inputs"], [194, "inputs"], [195, "inputs"], [196, "inputs"], [197, "inputs"], [198, "inputs"], [199, "inputs"], [200, "inputs"], [201, "inputs"], [202, "inputs"], [203, "inputs"], [204, "inputs"], [205, "inputs"], [206, "inputs"], [207, "inputs"], [208, "inputs"], [209, "inputs"], [210, "inputs"], [211, "inputs"], [212, "inputs"], [213, "inputs"], [214, "inputs"], [215, "inputs"], [216, "inputs"], [217, "inputs"]], "Outputs": [[24, "outputs"], [25, "outputs"], [26, "outputs"], [27, "outputs"], [28, "outputs"], [29, "outputs"], [30, "outputs"], [31, "outputs"], [32, "outputs"], [33, "outputs"], [34, "outputs"], [68, "outputs"], [69, "outputs"], [70, "outputs"], [71, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [84, "outputs"], [85, "outputs"], [86, "outputs"], [87, "outputs"], [148, "outputs"], [149, "outputs"], [150, "outputs"], [151, "outputs"], [152, "outputs"], [153, "outputs"], [154, "outputs"], [155, "outputs"], [156, "outputs"], [157, "outputs"], [158, "outputs"], [161, "outputs"], [162, "outputs"], [192, "outputs"], [193, "outputs"], [194, "outputs"], [195, "outputs"], [196, "outputs"], [197, "outputs"], [198, "outputs"], [199, "outputs"], [200, "outputs"], [201, "outputs"], [202, "outputs"], [203, "outputs"], [204, "outputs"], [205, "outputs"], [206, "outputs"], [207, "outputs"], [208, "outputs"], [209, "outputs"], [210, "outputs"], [211, "outputs"], [212, "outputs"], [213, "outputs"], [214, "outputs"], [215, "outputs"], [216, "outputs"], [217, "outputs"]], "census_density.cwl": [[25, "census-density-cwl"]], "census_ingest.cwl": [[26, "census-ingest-cwl"]], "Steps": [[26, "steps"], [27, "steps"], [30, "steps"], [71, "steps"], [75, "steps"], [76, "steps"], [77, "steps"], [78, "steps"], [79, "steps"], [80, "steps"], [84, "steps"], [85, "steps"], [148, "steps"], [149, "steps"], [150, "steps"], [195, "steps"], [196, "steps"], [197, "steps"], [198, "steps"], [199, "steps"], [200, "steps"], [201, "steps"], [202, "steps"], [203, "steps"], [204, "steps"], [205, "steps"], [206, "steps"], [214, "steps"], [216, "steps"], [217, "steps"]], "Sub-workflow store from census_ingest.cwl": [[27, "sub-workflow-store-from-census-ingest-cwl"]], "census_interpolate.cwl": [[28, "census-interpolate-cwl"]], "census_qc.cwl": [[29, "census-qc-cwl"]], "census_workflow.cwl": [[30, "census-workflow-cwl"]], "census_write.cwl": [[31, "census-write-cwl"]], "Index Builder": [[32, "index-builder"], [70, "index-builder"], [87, "index-builder"], [156, "index-builder"], [207, "index-builder"]], "Description": [[32, "description"], [33, "description"], [34, "description"], [68, "description"], [69, "description"], [70, "description"], [71, "description"], [72, "description"], [73, "description"], [74, "description"], [75, "description"], [76, "description"], [77, "description"], [78, "description"], [79, "description"], [80, "description"], [81, "description"], [82, "description"], [83, "description"], [84, "description"], [85, "description"], [86, "description"], [87, "description"], [148, "description"], [149, "description"], [150, "description"], [151, "description"], [152, "description"], [153, "description"], [154, "description"], [155, "description"], [156, "description"], [157, "description"], [158, "description"], [161, "description"], [162, "description"], [192, "description"], [193, "description"], [194, "description"], [195, "description"], [198, "description"], [200, "description"], [203, "description"], [205, "description"], [207, "description"], [208, "description"], [209, "description"], [210, "description"], [211, "description"], [212, "description"], [213, "description"], [214, "description"], [215, "description"], [216, "description"], [217, "description"]], "Uploader of the gridMET Data to the database": [[33, "uploader-of-the-gridmet-data-to-the-database"], [192, "uploader-of-the-gridmet-data-to-the-database"], [208, "uploader-of-the-gridmet-data-to-the-database"]], "Table tuner tool (running VACUUM)": [[34, "table-tuner-tool-running-vacuum"], [86, "table-tuner-tool-running-vacuum"], [162, "table-tuner-tool-running-vacuum"], [213, "table-tuner-tool-running-vacuum"]], "Quick Start": [[35, "quick-start"]], "Working with the census Package": [[36, "working-with-the-census-package"]], "Running the Command Line Interface": [[36, "running-the-command-line-interface"]], "Main Python Workflow": [[36, "main-python-workflow"]], "Shapefile Downloads": [[36, "shapefile-downloads"]], "Python package to manipulate health (CMS) data": [[37, "python-package-to-manipulate-health-cms-data"]], "Package cms": [[37, "package-cms"]], "Package cms.tools": [[37, "package-cms-tools"]], "Additional details": [[37, "additional-details"]], "Parsing FTS": [[37, "parsing-fts"]], "Extensions used for creating federated view of different years": [[38, "extensions-used-for-creating-federated-view-of-different-years"]], "General": [[38, "general"]], "Combining multiple sources and optional columns": [[38, "combining-multiple-sources-and-optional-columns"]], "Exclude": [[38, "exclude"]], "Cast": [[38, "cast"]], "Importing Medicaid Data Processed by the Legacy Pipeline": [[39, "importing-medicaid-data-processed-by-the-legacy-pipeline"]], "Status of this Document": [[39, "status-of-this-document"]], "Links to Legacy Documentation": [[39, "links-to-legacy-documentation"]], "main document, describing the data model": [[39, "main-document-describing-the-data-model"]], "Demographics": [[39, "demographics"]], "Demographics Data Path": [[39, "demographics-data-path"]], "Demographics File name": [[39, "demographics-file-name"]], "Demographics data on NSAPH VM": [[39, "demographics-data-on-nsaph-vm"]], "Demographics data on RCE": [[39, "demographics-data-on-rce"]], "Demographics: Description of columns": [[39, "demographics-description-of-columns"]], "Medicaid Enrollments": [[39, "medicaid-enrollments"]], "Documentation": [[39, "documentation"]], "Medicaid Enrollments Data Path": [[39, "medicaid-enrollments-data-path"]], "Enrollments Files": [[39, "enrollments-files"]], "Enrollments data on NSAPH VM": [[39, "enrollments-data-on-nsaph-vm"]], "Enrollments data on RCE": [[39, "enrollments-data-on-rce"]], "Enrollments: Description of columns": [[39, "enrollments-description-of-columns"]], "Admissions": [[39, "admissions"]], "Admissions Data Path": [[39, "admissions-data-path"]], "Admissions Files": [[39, "admissions-files"]], "Admissions data on NSAPH VM": [[39, "admissions-data-on-nsaph-vm"]], "Admissions data on RCE": [[39, "admissions-data-on-rce"]], "Admissions: Description of columns": [[39, "admissions-description-of-columns"]], "Examples of ingestion of processed data:": [[39, "examples-of-ingestion-of-processed-data"]], "Ingest demographics:": [[39, "ingest-demographics"]], "Ingest enrollments (yearly) and eligibility (monthly)": [[39, "ingest-enrollments-yearly-and-eligibility-monthly"]], "Ingest admissions": [[39, "ingest-admissions"]], "Handling Medicaid data": [[40, "handling-medicaid-data"]], "Legacy Pipeline": [[40, "legacy-pipeline"]], "Importing raw data": [[40, "importing-raw-data"]], "Parsing FTS files to generate schema": [[40, "parsing-fts-files-to-generate-schema"]], "Processing data": [[40, "processing-data"]], "Data Model": [[40, "data-model"]], "Beneficiaries": [[40, "beneficiaries"]], "BENE_ID column": [[40, "bene-id-column"]], "Deduplication and data cleansing": [[40, "deduplication-and-data-cleansing"]], "Enrollments": [[40, "enrollments"]], "Eligibility": [[40, "eligibility"]], "Inpatient Admissions": [[40, "inpatient-admissions"]], "Pipeline": [[40, "pipeline"]], "Sample user request:": [[40, "sample-user-request"]], "Medicare Files Handling": [[41, "medicare-files-handling"]], "Processing pipeline": [[41, "processing-pipeline"]], "Ingesting Raw Files": [[41, "ingesting-raw-files"]], "Overview": [[41, "overview"], [91, "overview"]], "Storing raw data in the Database": [[41, "storing-raw-data-in-the-database"]], "Files for 1999 to 2010": [[41, "files-for-1999-to-2010"]], "Files for Years 2011 and later": [[41, "files-for-years-2011-and-later"]], "Combining raw files into a single view": [[41, "combining-raw-files-into-a-single-view"]], "Eventual database schema": [[41, "eventual-database-schema"]], "CWL workflows": [[41, "cwl-workflows"]], "Creating Federated Patient Summary": [[41, "creating-federated-patient-summary"]], "First step: Initial in-database data conditioning": [[41, "first-step-initial-in-database-data-conditioning"]], "Second step: Mapping to county FIPS codes": [[41, "second-step-mapping-to-county-fips-codes"]], "Creating Beneficiaries table": [[41, "creating-beneficiaries-table"]], "Creating Enrollments table": [[41, "creating-enrollments-table"]], "Enrollments overview": [[41, "enrollments-overview"]], "Enrollments Primary key (unique identifier)": [[41, "enrollments-primary-key-unique-identifier"]], "Enrollments data cleansing": [[41, "enrollments-data-cleansing"]], "Enrollments columns definitions": [[41, "enrollments-columns-definitions"]], "Creating Federated Admissions view": [[41, "creating-federated-admissions-view"]], "Creating Inpatient Admissions table": [[41, "creating-inpatient-admissions-table"]], "Querying Medicaid Data": [[42, "querying-medicaid-data"]], "Querying diagnoses": [[42, "querying-diagnoses"]], "Listing patients": [[42, "listing-patients"]], "Problem: no wildcarding": [[42, "problem-no-wildcarding"]], "Calculating numbers": [[42, "calculating-numbers"]], "Using HyperLogLog (HLL) hashes for count approximations": [[43, "using-hyperloglog-hll-hashes-for-count-approximations"]], "Health Data": [[44, "health-data"]], "Overview of health data (Medicare and Medicaid)": [[44, "overview-of-health-data-medicare-and-medicaid"]], "Project Structure": [[44, "project-structure"], [96, "project-structure"]], "Software Sources": [[44, "software-sources"], [96, "software-sources"]], "CWL": [[44, "cwl"]], "Python": [[44, "python"]], "Data Model for health data": [[44, "data-model-for-health-data"]], "SQL": [[44, "sql"]], "Documentation Indices": [[44, "documentation-indices"], [96, "documentation-indices"], [239, "documentation-indices"], [264, "documentation-indices"]], "The aggregates Module": [[45, "module-cms.aggregates"]], "The create_schema_config Module": [[46, "module-cms.create_schema_config"]], "The duplicates Module": [[47, "module-cms.duplicates"]], "Parser for FTS files that accompany CMS data from ResDac": [[48, "parser-for-fts-files-that-accompany-cms-data-from-resdac"]], "Table of Contents": [[48, "table-of-contents"]], "Abstract class for CMS FTS file": [[48, "abstract-class-for-cms-fts-file"]], "Concrete subclass describing Medicare FTS file": [[48, "concrete-subclass-describing-medicare-fts-file"]], "Concrete subclass describing Medicaid FTS file": [[48, "concrete-subclass-describing-medicaid-fts-file"]], "Abstract class describing a column in a CMS data file": [[48, "abstract-class-describing-a-column-in-a-cms-data-file"]], "Concrete subclass describing a column in a Medicare data file": [[48, "concrete-subclass-describing-a-column-in-a-medicare-data-file"]], "Concrete subclass describing a column in a Medicaid data file": [[48, "concrete-subclass-describing-a-column-in-a-medicaid-data-file"]], "Concrete subclass describing a column not present in the original data but that should be generated in the database": [[48, "concrete-subclass-describing-a-column-not-present-in-the-original-data-but-that-should-be-generated-in-the-database"]], "Helper Classes": [[48, "helper-classes"]], "Helper Functions": [[48, "helper-functions"]], "Functions": [[49, "functions"], [94, "functions"]], "The init_cms_db Module": [[50, "module-cms.init_cms_db"]], "The mcr_combine_tables Module": [[51, "module-cms.tools.mcr_combine_tables"]], "The mcr_create_test_data Module": [[52, "module-cms.tools.mcr_create_test_data"]], "The mcr_data_loader Module": [[53, "module-cms.mcr_data_loader"]], "The mcr_file Module": [[54, "module-cms.tools.mcr_file"]], "The mcr_fts2csv Module": [[55, "module-cms.tools.mcr_fts2csv"]], "The mcr_fts2db Module": [[56, "module-cms.tools.mcr_fts2db"]], "The mcr_registry Module": [[57, "module-cms.tools.mcr_registry"]], "The mcr_sas Module": [[58, "module-cms.tools.mcr_sas"]], "The mcr_sas2db Module": [[59, "module-cms.tools.mcr_sas2db"]], "The mcr_sas2yaml Module": [[60, "module-cms.tools.mcr_sas2yaml"]], "Medicaid.yaml": [[61, "medicaid-yaml"]], "Medicare.yaml": [[62, "medicare-yaml"]], "The medpar_converter Module": [[63, "module-cms.tools.medpar_converter"]], "Procedures": [[64, "procedures"]], "The random_selector Module": [[65, "module-cms.random_selector"]], "The registry Module": [[66, "module-cms.registry"], [147, "module-epa.registry"], [187, "module-gridmet.registry"]], "The table_population Module": [[67, "module-cms.table_population"]], "Table/View Initializer": [[68, "table-view-initializer"]], "Resource Loader": [[69, "resource-loader"], [153, "resource-loader"]], "Workflow to load Medicaid data from files": [[71, "workflow-to-load-medicaid-data-from-files"]], "Database initializer": [[72, "database-initializer"]], "Patient Summary Loader": [[73, "patient-summary-loader"]], "Loader for raw CMS Medicare data": [[74, "loader-for-raw-cms-medicare-data"]], "Materialized View Creator": [[75, "materialized-view-creator"], [76, "materialized-view-creator"]], "Full Medicaid Processing Pipeline": [[77, "full-medicaid-processing-pipeline"], [84, "full-medicaid-processing-pipeline"], [85, "full-medicaid-processing-pipeline"]], "Medicare data ingestion and processing pipeline": [[78, "medicare-data-ingestion-and-processing-pipeline"]], "Process Medicare inpatient admissions data inside the database": [[79, "process-medicare-inpatient-admissions-data-inside-the-database"]], "Medicare Beneficiaries data in-database processing pipeline": [[80, "medicare-beneficiaries-data-in-database-processing-pipeline"]], "Medicare raw data federation tool": [[81, "medicare-raw-data-federation-tool"]], "FTS Parser": [[82, "fts-parser"]], "Generic Table (View/Materialized View) Initializer": [[83, "generic-table-view-materialized-view-initializer"], [212, "generic-table-view-materialized-view-initializer"]], "Python Core Platform Components": [[88, "python-core-platform-components"]], "Package nsaph": [[88, "package-nsaph"]], "Package nsaph.data_model": [[88, "package-nsaph-data-model"]], "Package nsaph.loader": [[88, "package-nsaph-loader"]], "Package nsaph.requests": [[88, "package-nsaph-requests"]], "Package nsaph.utils": [[88, "package-nsaph-utils"]], "NSAPH Data Loader": [[89, "nsaph-data-loader"]], "Usage": [[89, "usage"], [101, null]], "Data Modelling for NSAPH Data Platform": [[90, "data-modelling-for-nsaph-data-platform"]], "Introduction to data modelling for NSAPH Data Platform": [[90, "introduction-to-data-modelling-for-nsaph-data-platform"]], "Domain": [[90, "domain"]], "Table": [[90, "table"]], "Create statement": [[90, "create-statement"]], "Invalid Record": [[90, "invalid-record"]], "Column": [[90, "column"]], "Source": [[90, "source"]], "Generated columns": [[90, "generated-columns"]], "Computed columns": [[90, "computed-columns"]], "File columns": [[90, "file-columns"]], "Record columns": [[90, "record-columns"]], "Transposing columns": [[90, "transposing-columns"]], "Multi-column indices": [[90, "multi-column-indices"]], "Generation of the database schema (DDL)": [[90, "generation-of-the-database-schema-ddl"]], "Indexing policies": [[90, "indexing-policies"]], "Linking with nomenclature": [[90, "linking-with-nomenclature"]], "US States": [[90, "us-states"]], "Ingesting data": [[90, "ingesting-data"]], "Project (Directory) Loading Utility": [[91, "project-directory-loading-utility"]], "Configuration options": [[91, "configuration-options"]], "Usage from command line": [[91, "usage-from-command-line"]], "Sample command": [[91, "sample-command"]], "Dry runs (introspect only)": [[91, "dry-runs-introspect-only"]], "API Usage": [[91, "api-usage"]], "SQL Documentation": [[92, "sql-documentation"]], "How to query the database": [[93, "how-to-query-the-database"]], "Setup": [[93, "setup"]], "Create Python Virtual Environment": [[93, "create-python-virtual-environment"]], "Install NSAPH packages": [[93, "install-nsaph-packages"]], "Create connection definition file": [[93, "create-connection-definition-file"]], "Executing the query": [[93, "executing-the-query"]], "Using EXPLAIN to optimize queries": [[93, "using-explain-to-optimize-queries"]], "Mapping between different territorial codes": [[94, "mapping-between-different-territorial-codes"]], "Code systems": [[94, "code-systems"]], "Mapping sources": [[94, "mapping-sources"]], "Python and SQL Code": [[94, "python-and-sql-code"]], "Tables and Functions": [[94, "tables-and-functions"]], "Tables": [[94, "tables"]], "Preliminary Considerations for Handling User Requests": [[95, "preliminary-considerations-for-handling-user-requests"]], "Structure": [[95, "structure"]], "NSAPH Core Data Platform": [[96, "nsaph-core-data-platform"]], "Tool Examples": [[96, "tool-examples"]], "Python packages": [[96, "python-packages"]], "NSAPH Package": [[96, "nsaph-package"]], "Subpackage for Data Modelling": [[96, "subpackage-for-data-modelling"]], "Module Database Connection Wrapper": [[96, "module-database-connection-wrapper"]], "Loader Subpackage": [[96, "loader-subpackage"]], "Subpackage to describe and implement user requests [Incomplete]": [[96, "subpackage-to-describe-and-implement-user-requests-incomplete"]], "Subpackage with miscellaneous utilities": [[96, "subpackage-with-miscellaneous-utilities"]], "YAML files": [[96, "yaml-files"]], "Resources": [[96, "resources"]], "SQL Utilities": [[96, "sql-utilities"]], "The adi Module": [[97, "module-nsaph.adi"]], "The common Module": [[98, "module-nsaph.loader.common"]], "The create Module": [[99, "module-nsaph.create"]], "The cwl_collect_outputs Module": [[100, "module-nsaph.util.cwl_collect_outputs"]], "The data_loader Module": [[101, "the-data-loader-module"]], "API": [[101, "module-nsaph.loader.data_loader"]], "Configuration": [[101, "module-nsaph.loader.common"]], "Models Specification": [[101, null]], "Database connection API": [[102, "database-connection-api"]], "The Domain Class": [[103, "module-nsaph.data_model.domain"]], "Example request": [[104, "example-request"]], "The executors Module": [[105, "module-nsaph.util.executors"]], "The fips Module": [[106, "module-nsaph.fips"]], "The hdf5_export Module": [[107, "module-nsaph.requests.hdf5_export"]], "DDL for HUD ZIP to FIPS mappings": [[108, "ddl-for-hud-zip-to-fips-mappings"]], "The index_builder Module": [[109, "module-nsaph.loader.index_builder"]], "The init_core_db Module": [[110, "module-nsaph.util.init_core_db"]], "The inserter Module": [[111, "module-nsaph.data_model.inserter"]], "The introspector Module": [[112, "module-nsaph.loader.introspector"]], "The link_gis Module": [[113, "module-nsaph.link_gis"]], "Data loader base abstract API": [[114, "module-nsaph.loader"]], "The loader_config Module": [[115, "module-nsaph.loader.loader_config"]], "Set of SQL statements to map tables from another database": [[116, "set-of-sql-statements-to-map-tables-from-another-database"]], "The model Module": [[117, "module-nsaph.data_model.model"]], "The monitor Module": [[118, "module-nsaph.loader.monitor"]], "The net Module": [[119, "module-nsaph.util.net"]], "NSAPH Core Package-wide utilities": [[120, "module-nsaph"]], "The pg_json_dump Module": [[121, "module-nsaph.util.pg_json_dump"]], "The pg_keywords Module": [[122, "module-nsaph.pg_keywords"]], "The project_loader Module": [[123, "module-nsaph.loader.project_loader"]], "A procedure to rename indices": [[125, "a-procedure-to-rename-indices"]], "The resources Module": [[126, "module-nsaph.util.resources"]], "Sample query": [[127, "sample-query"]], "The sas_explorer Module": [[128, "module-nsaph.util.sas_explorer"]], "The shapes Module": [[129, "module-nsaph.util.shapes"], [188, "module-gridmet.shapes"]], "The ssa2fips Module": [[130, "module-nsaph.util.ssa2fips"]], "Utility functions": [[132, "utility-functions"]], "The vacuum Module": [[133, "module-nsaph.loader.vacuum"]], "The zip2fips Module": [[134, "module-nsaph.util.zip2fips"]], "SQL to create direct ZIP => FIPS lookup table and helper functions": [[135, "sql-to-create-direct-zip-fips-lookup-table-and-helper-functions"]], "CWL Tools and Common Workflows": [[136, "cwl-tools-and-common-workflows"]], "NSAPH EPA Package Description": [[137, "nsaph-epa-package-description"]], "Package Contents": [[137, "package-contents"]], "Querying Data": [[137, "querying-data"]], "AirNow": [[137, "airnow"]], "Columns": [[137, "columns"]], "Sample AirNow query by date": [[137, "sample-airnow-query-by-date"]], "Sample AirNow query, aggregating monthly": [[137, "sample-airnow-query-aggregating-monthly"]], "Sample AirNow query, aggregating by State": [[137, "sample-airnow-query-aggregating-by-state"]], "AQS": [[137, "aqs"]], "Annual Columns": [[137, "annual-columns"]], "Daily columns": [[137, "daily-columns"]], "Main Class for EPA AirNow Package": [[138, "module-epa.airnow"]], "Downloader for AirNow": [[139, "module-epa.airnow_downloader"]], "Configuration Options for EPA AirNow Package": [[140, "module-epa.airnow_ds_def"]], "Classes used Internally": [[140, "classes-used-internally"], [144, "classes-used-internally"], [176, "classes-used-internally"]], "Abstract Context": [[140, "abstract-context"], [144, "abstract-context"], [176, "abstract-context"]], "Argument": [[140, "argument"], [144, "argument"], [176, "argument"]], "The airnow_setup Module": [[141, "module-epa.airnow_setup"]], "The airnow_shapes Module": [[142, "module-epa.airnow_shapes"]], "Main Class for EPA AQS Package": [[143, "module-epa.aqs"]], "Configuration Options for EPA AQS Package": [[144, "module-epa.aqs_ds_def"]], "Argument Cardinality Enum": [[144, "argument-cardinality-enum"], [176, "argument-cardinality-enum"]], "The aqs_expand Module": [[145, "module-epa.aqs_expand"]], "Internal scripts used for download tasks": [[146, "module-epa.aqs_tools"]], "Full EPA AirNow Processing Pipeline (including downloading shapefiles)": [[148, "full-epa-airnow-processing-pipeline-including-downloading-shapefiles"]], "Full AirNowProcessing Pipeline (with shapefiles on local file system)": [[149, "full-airnowprocessing-pipeline-with-shapefiles-on-local-file-system"]], "Full EPA AQS Processing Pipeline": [[150, "full-epa-aqs-processing-pipeline"]], "Downloader of AirNow Data": [[151, "downloader-of-airnow-data"], [194, "downloader-of-airnow-data"]], "Downloader of AQS Data": [[152, "downloader-of-aqs-data"], [154, "downloader-of-aqs-data"]], "Tool retrieving county or zip shapefiles from Census website": [[155, "tool-retrieving-county-or-zip-shapefiles-from-census-website"]], "Uploader of the EPA Data to the database": [[157, "uploader-of-the-epa-data-to-the-database"]], "Introspector for downloaded data file": [[158, "introspector-for-downloaded-data-file"]], "Sample arguments to AirNow pipeline": [[159, "sample-arguments-to-airnow-pipeline"]], "Sample arguments to AQS pipeline": [[160, "sample-arguments-to-aqs-pipeline"]], "For annual NO2 (nitrogen) data": [[160, "for-annual-no2-nitrogen-data"]], "For daily PM25 (small particles) data": [[160, "for-daily-pm25-small-particles-data"]], "Prepare environment for AirNow": [[161, "prepare-environment-for-airnow"]], "Python Components": [[163, "python-components"]], "EPA Toolkit Usage": [[164, "epa-toolkit-usage"]], "AQS Usage": [[164, "aqs-usage"]], "AirNow Usage": [[164, "airnow-usage"]], "NSAPH GIS python package": [[165, "nsaph-gis-python-package"]], "GIS Library Overview": [[165, "gis-library-overview"]], "Installation": [[165, "installation"], [228, "installation"]], "GIS Annotator": [[166, "module-nsaph_gis.annotator"]], "Observation values aggregation over shapes": [[167, "module-nsaph_gis.compute_shape"]], "GIS Related Enums": [[168, "module-nsaph_gis.constants"]], "Shapefiles downloader": [[169, "module-nsaph_gis.downloader"]], "A point in a raster class": [[170, "module-nsaph_gis.geometry"]], "GIS Python Modules": [[171, "gis-python-modules"]], "Bands (Gridmet Variables)": [[172, "bands-gridmet-variables"]], "Main Classes": [[173, "main-classes"]], "Contents:": [[173, null], [174, null]], "Parameters (Enums)": [[174, "parameters-enums"]], "Types of Geography": [[175, "types-of-geography"]], "Configuration Object": [[176, "configuration-object"]], "Task Object": [[177, "task-object"]], "Subtasks": [[177, "subtasks"]], "Downloading": [[177, "downloading"]], "Compute": [[177, "compute"]], "Tools and Utilities": [[178, "tools-and-utilities"]], "Gridmet Computational Utilities": [[179, "gridmet-computational-utilities"]], "What is gridMET?": [[179, "what-is-gridmet"]], "Using command line gridMET utility": [[179, "using-command-line-gridmet-utility"]], "Example": [[179, "example"]], "Python modules": [[179, "python-modules"]], "CWL pipelines and tools": [[179, "cwl-pipelines-and-tools"]], "The aggregator Module": [[180, "module-pollution.aggregator"]], "The config Module": [[181, "module-gridmet.config"]], "The csv2hdf5 Module": [[182, "the-csv2hdf5-module"]], "The exclude_csv Module": [[183, "the-exclude-csv-module"]], "The geop Module": [[184, "the-geop-module"]], "The gridmet_tools Module": [[185, "module-gridmet.gridmet_tools"]], "The launcher Module": [[186, "module-gridmet.launcher"]], "The task Module": [[189, "module-gridmet.task"]], "The test Module": [[190, "the-test-module"]], "The wustl_file_processor Module": [[191, "module-pollution.wustl_file_processor"]], "Downloader of gridMET Data": [[193, "downloader-of-gridmet-data"], [209, "downloader-of-gridmet-data"]], "gridMET Pipeline": [[195, "gridmet-pipeline"], [198, "gridmet-pipeline"], [200, "gridmet-pipeline"], [203, "gridmet-pipeline"], [205, "gridmet-pipeline"]], "Sub-workflow init_tables from gridmet.cwl": [[196, "sub-workflow-init-tables-from-gridmet-cwl"]], "Sub-workflow process from gridmet.cwl": [[197, "sub-workflow-process-from-gridmet-cwl"]], "Sub-workflow process from gridmet_dwnl_only.cwl": [[199, "sub-workflow-process-from-gridmet-dwnl-only-cwl"]], "Sub-workflow init_tables from gridmet_humidity.cwl": [[201, "sub-workflow-init-tables-from-gridmet-humidity-cwl"]], "Sub-workflow process from gridmet_humidity.cwl": [[202, "sub-workflow-process-from-gridmet-humidity-cwl"]], "Sub-workflow process from gridmet_incremental.cwl": [[204, "sub-workflow-process-from-gridmet-incremental-cwl"]], "Sub-workflow process from gridmet_local_shapes.cwl": [[206, "sub-workflow-process-from-gridmet-local-shapes-cwl"]], "File rearranger": [[210, "file-rearranger"]], "Model YAML Writer": [[211, "model-yaml-writer"]], "Pipeline to ingest Pollution downloaded from WashU Box": [[214, "pipeline-to-ingest-pollution-downloaded-from-washu-box"]], "Aggregates data in NetCDF file over given geographies": [[215, "aggregates-data-in-netcdf-file-over-given-geographies"]], "Workflow to aggregate and ingest one file in NetCDF format": [[216, "workflow-to-aggregate-and-ingest-one-file-in-netcdf-format"]], "Workflow to aggregate and ingest NetCDF files for one year": [[217, "workflow-to-aggregate-and-ingest-netcdf-files-for-one-year"]], "gridMET Python Modules": [[218, "gridmet-python-modules"]], "gridMET Python components": [[218, null]], "All gridMET Python modules": [[218, null]], "Types of Shape": [[219, "types-of-shape"]], "Rasterization Strategy": [[220, "rasterization-strategy"]], "Configuration Guide": [[221, "configuration-guide"]], "What can be configured": [[221, "what-can-be-configured"]], "Selecting base configuration.": [[221, "selecting-base-configuration"]], "Controlling Conda environments": [[221, "controlling-conda-environments"]], "Setting Conda environment used during workflow executions": [[221, "setting-conda-environment-used-during-workflow-executions"]], "Managing multiple Conda environments": [[221, "managing-multiple-conda-environments"]], "Configuring installation of third-party requirements": [[221, "configuring-installation-of-third-party-requirements"]], "Python requirements": [[221, "python-requirements"]], "R libraries": [[221, "r-libraries"]], "Configuring user projects": [[221, "configuring-user-projects"]], "Python Projects": [[221, "python-projects"]], "Enforcing order for installation of user Python Projects": [[221, "enforcing-order-for-installation-of-user-python-projects"]], "R Projects": [[221, "r-projects"]], "Configure Git submodules": [[221, "configure-git-submodules"]], "Overriding BASE_URL": [[221, "overriding-base-url"]], "Airflow admin username and password": [[221, "airflow-admin-username-and-password"]], "Configurations related to PostgreSQL": [[221, "configurations-related-to-postgresql"]], "When you need to change defaults": [[221, "when-you-need-to-change-defaults"]], "Configuring PostgreSQL Server": [[221, "configuring-postgresql-server"]], "Create database and user for Airflow": [[221, "create-database-and-user-for-airflow"]], "Configure PostgreSQL to authenticate Airflow user": [[221, "configure-postgresql-to-authenticate-airflow-user"]], "Tell Airflow how to authenticate with PostgreSQL": [[221, "tell-airflow-how-to-authenticate-with-postgresql"]], "Authentication": [[221, "authentication"]], "Networking": [[221, "networking"]], "Note for Mac": [[221, "note-for-mac"]], "Overriding default parameters": [[221, "overriding-default-parameters"]], "Full list of available environment variables": [[221, "full-list-of-available-environment-variables"]], "Example of .env file. Ready to run containers": [[221, "example-of-env-file-ready-to-run-containers"]], "Airflow/CWL Glossary and FAQ": [[222, "airflow-cwl-glossary-and-faq"]], "What is CWL?": [[222, "what-is-cwl"]], "What is Airflow": [[222, "what-is-airflow"]], "What is CWL-Airflow": [[222, "what-is-cwl-airflow"]], "What is Docker": [[222, "what-is-docker"]], "What is Docker-compose": [[222, "what-is-docker-compose"]], "What is Conda": [[222, "what-is-conda"]], "What is PostgreSQL": [[222, "what-is-postgresql"]], "CWL-Airflow Deployment Guide": [[223, "cwl-airflow-deployment-guide"]], "What is in": [[223, "what-is-in"]], "Howto": [[224, "howto"]], "Deployment Steps": [[224, "deployment-steps"]], "Building Containers": [[224, "building-containers"]], "Docker build command": [[224, "docker-build-command"]], "Rebuilding the Containers": [[224, "rebuilding-the-containers"]], "When building goes wrong": [[224, "when-building-goes-wrong"]], "Copying DAGs to Airflow folder": [[224, "copying-dags-to-airflow-folder"]], "Local development": [[224, "local-development"]], "Introduction to Deployment of NSAPH Data Platform": [[225, "introduction-to-deployment-of-nsaph-data-platform"]], "Testing the installation": [[226, "testing-the-installation"]], "Included examples": [[226, "included-examples"]], "Testing command line mode": [[226, "testing-command-line-mode"]], "Test 1: basic CWL (Hello World)": [[226, "test-1-basic-cwl-hello-world"]], "Test 2: CWL, using python project": [[226, "test-2-cwl-using-python-project"]], "Test 3: CWL, using R script": [[226, "test-3-cwl-using-r-script"]], "Alternative way to test command line": [[226, "alternative-way-to-test-command-line"]], "Testing Airflow User Interface": [[226, "testing-airflow-user-interface"]], "Preparation": [[226, "preparation"]], "UI Test 1: basic CWL (Hello World)": [[226, "ui-test-1-basic-cwl-hello-world"]], "UI Test 2: CWL, using python project": [[226, "ui-test-2-cwl-using-python-project"]], "UI Test 3: CWL, using R script": [[226, "ui-test-3-cwl-using-r-script"]], "Some useful commands": [[227, "some-useful-commands"]], "To view logs of the running containers": [[227, "to-view-logs-of-the-running-containers"]], "To attach to the started container (bash)": [[227, "to-attach-to-the-started-container-bash"]], "Attach to a container when it does not start": [[227, "attach-to-a-container-when-it-does-not-start"]], "To stop all your containers": [[227, "to-stop-all-your-containers"]], "To delete all images and containers": [[227, "to-delete-all-images-and-containers"]], "To delete PostgreSQL volumes": [[227, "to-delete-postgresql-volumes"]], "Upgrade Airflow Database": [[227, "upgrade-airflow-database"]], "Create Airflow user": [[227, "create-airflow-user"]], "NSAPH Data Platform Deployment": [[228, "nsaph-data-platform-deployment"]], "Prerequisites": [[228, "prerequisites"]], "Quick Start Deployment": [[228, "quick-start-deployment"]], "Testing": [[228, "testing"]], "Default Conda config": [[229, "default-conda-config"]], "Docker-compose file": [[230, "docker-compose-file"]], "Environment example with conda and existing PostgreSQL": [[231, "environment-example-with-conda-and-existing-postgresql"]], "Environment example without conda and with existing PostgreSQL": [[232, "environment-example-without-conda-and-with-existing-postgresql"]], "Environment example with conda and with new container with PostgreSQL": [[233, "environment-example-with-conda-and-with-new-container-with-postgresql"]], "Environment example without conda and with new container with PostgreSQL": [[234, "environment-example-without-conda-and-with-new-container-with-postgresql"]], "Install Conda script": [[235, "install-conda-script"]], "Install projects script": [[236, "install-projects-script"]], "R packages": [[237, "r-packages"]], "List of Python requirements": [[238, "list-of-python-requirements"]], "NSAPH Utils python package": [[239, "nsaph-utils-python-package"]], "Overview of Utilities": [[239, "overview-of-utilities"]], "Current Development": [[239, "current-development"]], "TODO": [[239, "todo"]], "The DataSet Module": [[240, "module-nsaph_utils.DataSet"]], "The collector Module": [[242, "module-nsaph_utils.docutils.collector"]], "The conf Module": [[243, "the-conf-module"]], "The context Module": [[244, "module-nsaph_utils.utils.context"]], "The copy_section Module": [[245, "module-nsaph_utils.docutils.copy_section"]], "The cwl2md Module": [[246, "module-nsaph_utils.docutils.cwl2md"]], "The fwf Module": [[247, "module-nsaph_utils.utils.fwf"]], "The interface Module": [[248, "module-nsaph_utils.interpolation.interface"]], "The interpolate_ma Module": [[249, "module-nsaph_utils.interpolation.interpolate_ma"]], "The io_utils Module": [[250, "module-nsaph_utils.utils.io_utils"]], "The md_creator Module": [[251, "module-nsaph_utils.docutils.md_creator"]], "The pyfst Module": [[252, "module-nsaph_utils.utils.pyfst"]], "The setup Module": [[253, "the-setup-module"]], "The test_cli_context Module": [[254, "module-tests.test_cli_context"]], "The test_interpolation Module": [[255, "module-tests.test_interpolation"]], "The test_qc Module": [[256, "module-tests.test_qc"]], "The tester Module": [[257, "module-nsaph_utils.qc.tester"]], "Indices": [[258, "indices"]], "Data Domains": [[259, "data-domains"]], "Data Domains (Subject areas)": [[259, null]], "File Transfer Summary": [[260, "file-transfer-summary"]], "Terms and acronyms used in this documentation": [[261, "terms-and-acronyms-used-in-this-documentation"]], "Data Platform Internals": [[262, "data-platform-internals"], [262, null]], "NSAPH Data Platform: Documentation Home": [[263, "nsaph-data-platform-documentation-home"]], "Introduction to Data Platform": [[263, "introduction-to-data-platform"]], "What is Data Platform?": [[263, "what-is-data-platform"]], "Using the Database": [[263, "using-the-database"]], "Terms and Acronyms": [[263, "terms-and-acronyms"]], "Deploying the Platform": [[263, "deploying-the-platform"]], "Building Platform documentation": [[263, "building-platform-documentation"]], "Repositories Overview": [[263, "repositories-overview"]], "Deployment": [[263, "deployment"]], "General Packages": [[263, "general-packages"]], "NSAPH Utilities": [[263, "nsaph-utilities"]], "Core Platform": [[263, "core-platform"]], "GIS Utilities": [[263, "gis-utilities"]], "Data Ingestion and Processing Packages and Pipelines": [[263, "data-ingestion-and-processing-packages-and-pipelines"]], "NSAPH Data Platform": [[264, "nsaph-data-platform"]], "Contents": [[264, null], [265, null]], "Python Packages Included in the Platform": [[265, "python-packages-included-in-the-platform"]], "Data Processing Pipelines": [[266, "data-processing-pipelines"], [266, null]], "Why Data Platform and what does it do?": [[267, "why-data-platform-and-what-does-it-do"]], "Why we need a Data Platform": [[267, "why-we-need-a-data-platform"]], "Architecture": [[267, "architecture"]], "Supported Programming Languages and Tools": [[267, "supported-programming-languages-and-tools"]], "Development Mode": [[267, "development-mode"]], "Where it can be deployed": [[267, "where-it-can-be-deployed"]]}, "indexentries": {"acs": [[9, "term-acs"]], "acs1": [[9, "term-acs1"]], "acs5": [[9, "term-acs5"]], "dec": [[9, "term-dec"]], "pums": [[9, "term-pums"]], "sf1": [[9, "term-sf1"]], "sf3": [[9, "term-sf3"]], "zcta": [[9, "term-zcta"]], "dataplan (class in census.assemble_data)": [[11, "census.assemble_data.DataPlan"], [23, "census.assemble_data.DataPlan"]], "variabledef (class in census.assemble_data)": [[11, "census.assemble_data.VariableDef"], [23, "census.assemble_data.VariableDef"]], "add_geoid() (dataplan method)": [[11, "census.assemble_data.DataPlan.add_geoid"], [23, "census.assemble_data.DataPlan.add_geoid"]], "adjust_geo_fields() (dataplan method)": [[11, "census.assemble_data.DataPlan.adjust_geo_fields"], [23, "census.assemble_data.DataPlan.adjust_geo_fields"]], "assemble_data() (dataplan method)": [[11, "census.assemble_data.DataPlan.assemble_data"], [23, "census.assemble_data.DataPlan.assemble_data"]], "calculate_densities() (dataplan method)": [[11, "census.assemble_data.DataPlan.calculate_densities"], [23, "census.assemble_data.DataPlan.calculate_densities"]], "calculate_var() (variabledef method)": [[11, "census.assemble_data.VariableDef.calculate_var"], [23, "census.assemble_data.VariableDef.calculate_var"]], "census.assemble_data": [[11, "module-census.assemble_data"], [23, "module-census.assemble_data"]], "create_missingness() (dataplan method)": [[11, "census.assemble_data.DataPlan.create_missingness"], [23, "census.assemble_data.DataPlan.create_missingness"]], "do_query() (variabledef method)": [[11, "census.assemble_data.VariableDef.do_query"], [23, "census.assemble_data.VariableDef.do_query"]], "get_var_names() (dataplan method)": [[11, "census.assemble_data.DataPlan.get_var_names"], [23, "census.assemble_data.DataPlan.get_var_names"]], "get_vars() (variabledef method)": [[11, "census.assemble_data.VariableDef.get_vars"], [23, "census.assemble_data.VariableDef.get_vars"]], "interpolate() (dataplan method)": [[11, "census.assemble_data.DataPlan.interpolate"], [23, "census.assemble_data.DataPlan.interpolate"]], "module": [[11, "module-census.assemble_data"], [12, "module-census.calculate_density"], [13, "module-census.census_info"], [14, "module-census.cli"], [15, "module-census.do_qc"], [16, "module-census.exceptions"], [17, "module-census.interpolate_data"], [18, "module-census.data.load_data"], [19, "module-census.query"], [20, "module-census.tigerweb"], [21, "module-census.utils"], [22, "module-census.write_data"], [23, "module-census.assemble_data"], [23, "module-census.census_info"], [23, "module-census.cli"], [23, "module-census.data.load_data"], [23, "module-census.exceptions"], [23, "module-census.query"], [23, "module-census.tigerweb"], [23, "module-census.utils"], [45, "module-cms.aggregates"], [46, "module-cms.create_schema_config"], [47, "module-cms.duplicates"], [50, "module-cms.init_cms_db"], [51, "module-cms.tools.mcr_combine_tables"], [52, "module-cms.tools.mcr_create_test_data"], [53, "module-cms.mcr_data_loader"], [54, "module-cms.tools.mcr_file"], [55, "module-cms.tools.mcr_fts2csv"], [56, "module-cms.tools.mcr_fts2db"], [57, "module-cms.tools.mcr_registry"], [58, "module-cms.tools.mcr_sas"], [59, "module-cms.tools.mcr_sas2db"], [60, "module-cms.tools.mcr_sas2yaml"], [63, "module-cms.tools.medpar_converter"], [65, "module-cms.random_selector"], [66, "module-cms.registry"], [67, "module-cms.table_population"], [97, "module-nsaph.adi"], [98, "module-nsaph.loader.common"], [99, "module-nsaph.create"], [100, "module-nsaph.util.cwl_collect_outputs"], [101, "module-nsaph.loader.common"], [101, "module-nsaph.loader.data_loader"], [101, "module-nsaph.loader.loader_config"], [102, "module-nsaph.db"], [103, "module-nsaph.data_model.domain"], [105, "module-nsaph.util.executors"], [106, "module-nsaph.fips"], [107, "module-nsaph.requests.hdf5_export"], [109, "module-nsaph.loader.index_builder"], [110, "module-nsaph.util.init_core_db"], [111, "module-nsaph.data_model.inserter"], [112, "module-nsaph.loader.introspector"], [113, "module-nsaph.link_gis"], [114, "module-nsaph.loader"], [115, "module-nsaph.loader.loader_config"], [117, "module-nsaph.data_model.model"], [118, "module-nsaph.loader.monitor"], [119, "module-nsaph.util.net"], [120, "module-nsaph"], [121, "module-nsaph.util.pg_json_dump"], [122, "module-nsaph.pg_keywords"], [123, "module-nsaph.loader.project_loader"], [124, "module-nsaph.requests.query"], [126, "module-nsaph.util.resources"], [128, "module-nsaph.util.sas_explorer"], [129, "module-nsaph.util.shapes"], [130, "module-nsaph.util.ssa2fips"], [131, "module-nsaph.data_model.utils"], [133, "module-nsaph.loader.vacuum"], [134, "module-nsaph.util.zip2fips"], [138, "module-epa.airnow"], [139, "module-epa.airnow_downloader"], [140, "module-epa.airnow_ds_def"], [141, "module-epa.airnow_setup"], [142, "module-epa.airnow_shapes"], [143, "module-epa.aqs"], [144, "module-epa.aqs_ds_def"], [145, "module-epa.aqs_expand"], [146, "module-epa.aqs_tools"], [146, "module-nsaph_utils.utils.io_utils"], [147, "module-epa.registry"], [166, "module-nsaph_gis.annotator"], [167, "module-nsaph_gis.compute_shape"], [168, "module-nsaph_gis.constants"], [169, "module-nsaph_gis.downloader"], [170, "module-nsaph_gis.geometry"], [178, "module-gridmet.gridmet_tools"], [180, "module-pollution.aggregator"], [181, "module-gridmet.config"], [185, "module-gridmet.gridmet_tools"], [186, "module-gridmet.launcher"], [187, "module-gridmet.registry"], [188, "module-gridmet.shapes"], [189, "module-gridmet.task"], [191, "module-pollution.wustl_file_processor"], [240, "module-nsaph_utils.DataSet"], [241, "module-nsaph_utils.utils.cli"], [242, "module-nsaph_utils.docutils.collector"], [244, "module-nsaph_utils.utils.context"], [245, "module-nsaph_utils.docutils.copy_section"], [246, "module-nsaph_utils.docutils.cwl2md"], [247, "module-nsaph_utils.utils.fwf"], [248, "module-nsaph_utils.interpolation.interface"], [249, "module-nsaph_utils.interpolation.interpolate_ma"], [250, "module-nsaph_utils.utils.io_utils"], [251, "module-nsaph_utils.docutils.md_creator"], [252, "module-nsaph_utils.utils.pyfst"], [254, "module-tests.test_cli_context"], [255, "module-tests.test_interpolation"], [256, "module-tests.test_qc"], [257, "module-nsaph_utils.qc.tester"]], "quality_check() (dataplan method)": [[11, "census.assemble_data.DataPlan.quality_check"], [23, "census.assemble_data.DataPlan.quality_check"]], "supported_out_formats (dataplan attribute)": [[11, "census.assemble_data.DataPlan.supported_out_formats"]], "write_data() (dataplan method)": [[11, "census.assemble_data.DataPlan.write_data"], [23, "census.assemble_data.DataPlan.write_data"]], "write_schema() (dataplan method)": [[11, "census.assemble_data.DataPlan.write_schema"], [23, "census.assemble_data.DataPlan.write_schema"]], "censusdensitycontext (class in census.calculate_density)": [[12, "census.calculate_density.CensusDensityContext"]], "census.calculate_density": [[12, "module-census.calculate_density"]], "initialize_logging() (in module census.calculate_density)": [[12, "census.calculate_density.initialize_logging"]], "census.census_info": [[13, "module-census.census_info"], [23, "module-census.census_info"]], "census_years() (in module census.census_info)": [[13, "census.census_info.census_years"], [23, "census.census_info.census_years"]], "get_endpoint() (in module census.census_info)": [[13, "census.census_info.get_endpoint"], [23, "census.census_info.get_endpoint"]], "get_varlist() (in module census.census_info)": [[13, "census.census_info.get_varlist"], [23, "census.census_info.get_varlist"]], "set_api_key() (in module census.census_info)": [[13, "census.census_info.set_api_key"], [23, "census.census_info.set_api_key"]], "censuscontext (class in census.cli)": [[14, "census.cli.CensusContext"], [23, "census.cli.CensusContext"]], "census.cli": [[14, "module-census.cli"], [23, "module-census.cli"]], "census_cli() (in module census.cli)": [[14, "census.cli.census_cli"]], "validate() (censuscontext method)": [[14, "census.cli.CensusContext.validate"], [23, "census.cli.CensusContext.validate"]], "censusqccontext (class in census.do_qc)": [[15, "census.do_qc.CensusQCContext"]], "census.do_qc": [[15, "module-census.do_qc"]], "initialize_logging() (in module census.do_qc)": [[15, "census.do_qc.initialize_logging"]], "censusexception": [[16, "census.exceptions.CensusException"], [23, "census.exceptions.CensusException"]], "census.exceptions": [[16, "module-census.exceptions"], [23, "module-census.exceptions"]], "censusinterpolatecontext (class in census.interpolate_data)": [[17, "census.interpolate_data.CensusInterpolateContext"]], "census.interpolate_data": [[17, "module-census.interpolate_data"]], "initialize_logging() (in module census.interpolate_data)": [[17, "census.interpolate_data.initialize_logging"]], "validate() (censusinterpolatecontext method)": [[17, "census.interpolate_data.CensusInterpolateContext.validate"]], "census.data.load_data": [[18, "module-census.data.load_data"], [23, "module-census.data.load_data"]], "load_county_codes() (in module census.data.load_data)": [[18, "census.data.load_data.load_county_codes"], [23, "census.data.load_data.load_county_codes"]], "load_state_codes() (in module census.data.load_data)": [[18, "census.data.load_data.load_state_codes"], [23, "census.data.load_data.load_state_codes"]], "api_geography() (in module census.query)": [[19, "census.query.api_geography"], [23, "census.query.api_geography"]], "census.query": [[19, "module-census.query"], [23, "module-census.query"]], "get_census_data() (in module census.query)": [[19, "census.query.get_census_data"], [23, "census.query.get_census_data"]], "census.tigerweb": [[20, "module-census.tigerweb"], [23, "module-census.tigerweb"]], "download_geometry() (in module census.tigerweb)": [[20, "census.tigerweb.download_geometry"], [23, "census.tigerweb.download_geometry"]], "get_area() (in module census.tigerweb)": [[20, "census.tigerweb.get_area"], [23, "census.tigerweb.get_area"]], "census.utils": [[21, "module-census.utils"], [23, "module-census.utils"]], "show_api_keys() (in module census.utils)": [[21, "census.utils.show_api_keys"], [23, "census.utils.show_api_keys"]], "censuswritecontext (class in census.write_data)": [[22, "census.write_data.CensusWriteContext"]], "census.write_data": [[22, "module-census.write_data"]], "initialize_logging() (in module census.write_data)": [[22, "census.write_data.initialize_logging"]], "aggregator (class in cms.aggregates)": [[45, "cms.aggregates.Aggregator"]], "expecteddata (class in cms.aggregates)": [[45, "cms.aggregates.ExpectedData"]], "query (aggregator attribute)": [[45, "cms.aggregates.Aggregator.QUERY"]], "cms.aggregates": [[45, "module-cms.aggregates"]], "count() (aggregator method)": [[45, "cms.aggregates.Aggregator.count"]], "verify() (aggregator method)": [[45, "cms.aggregates.Aggregator.verify"]], "cmsschema (class in cms.create_schema_config)": [[46, "cms.create_schema_config.CMSSchema"]], "cms.create_schema_config": [[46, "module-cms.create_schema_config"]], "input (cmsschema attribute)": [[46, "cms.create_schema_config.CMSSchema.input"]], "output (cmsschema attribute)": [[46, "cms.create_schema_config.CMSSchema.output"]], "reset (cmsschema attribute)": [[46, "cms.create_schema_config.CMSSchema.reset"]], "type (cmsschema attribute)": [[46, "cms.create_schema_config.CMSSchema.type"]], "duplicatesexplorer (class in cms.duplicates)": [[47, "cms.duplicates.DuplicatesExplorer"]], "analyze_inconsistent_age() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.analyze_inconsistent_age"]], "args() (in module cms.duplicates)": [[47, "cms.duplicates.args"]], "cms.duplicates": [[47, "module-cms.duplicates"]], "explore_all() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.explore_all"]], "explore_one() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.explore_one"]], "find_duplicate_dates() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.find_duplicate_dates"]], "init() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.init"]], "is_loaded() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.is_loaded"]], "load() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.load"]], "report() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.report"]], "run() (in module cms.duplicates)": [[47, "cms.duplicates.run"]], "save() (duplicatesexplorer method)": [[47, "cms.duplicates.DuplicatesExplorer.save"]], "aliascolumn (class in cms.fts2yaml)": [[48, "cms.fts2yaml.AliasColumn"]], "columnattribute (class in cms.fts2yaml)": [[48, "cms.fts2yaml.ColumnAttribute"]], "columnreader (class in cms.fts2yaml)": [[48, "cms.fts2yaml.ColumnReader"]], "ftscolumn (class in cms.fts2yaml)": [[48, "cms.fts2yaml.FTSColumn"]], "medicaidfts (class in cms.fts2yaml)": [[48, "cms.fts2yaml.MedicaidFTS"]], "medicaidftscolumn (class in cms.fts2yaml)": [[48, "cms.fts2yaml.MedicaidFTSColumn"]], "medicarefts (class in cms.fts2yaml)": [[48, "cms.fts2yaml.MedicareFTS"]], "medicareftscolumn (class in cms.fts2yaml)": [[48, "cms.fts2yaml.MedicareFTSColumn"]], "add_indices() (medicarefts method)": [[48, "cms.fts2yaml.MedicareFTS.add_indices"]], "analyze_format() (ftscolumn method)": [[48, "cms.fts2yaml.FTSColumn.analyze_format"]], "arg() (columnattribute method)": [[48, "cms.fts2yaml.ColumnAttribute.arg"], [54, "cms.tools.mcr_file.ColumnAttribute.arg"]], "check_key_columns() (medicarefts method)": [[48, "cms.fts2yaml.MedicareFTS.check_key_columns"]], "conv() (ftscolumn class method)": [[48, "cms.fts2yaml.FTSColumn.conv"]], "conv() (medicareftscolumn class method)": [[48, "cms.fts2yaml.MedicareFTSColumn.conv"]], "init() (medicaidfts method)": [[48, "cms.fts2yaml.MedicaidFTS.init"]], "init() (medicarefts method)": [[48, "cms.fts2yaml.MedicareFTS.init"]], "mcr_type() (in module cms.fts2yaml)": [[48, "cms.fts2yaml.mcr_type"]], "medicaid_indices (medicaidfts attribute)": [[48, "cms.fts2yaml.MedicaidFTS.medicaid_indices"]], "nattrs (medicaidftscolumn attribute)": [[48, "cms.fts2yaml.MedicaidFTSColumn.nattrs"]], "nattrs (medicareftscolumn attribute)": [[48, "cms.fts2yaml.MedicareFTSColumn.nattrs"]], "on_after_read_file() (medicaidfts method)": [[48, "cms.fts2yaml.MedicaidFTS.on_after_read_file"]], "on_after_read_file() (medicarefts method)": [[48, "cms.fts2yaml.MedicareFTS.on_after_read_file"]], "read() (columnreader method)": [[48, "cms.fts2yaml.ColumnReader.read"]], "to_dict() (aliascolumn method)": [[48, "cms.fts2yaml.AliasColumn.to_dict"]], "to_dict() (ftscolumn method)": [[48, "cms.fts2yaml.FTSColumn.to_dict"]], "to_fwf_column() (ftscolumn method)": [[48, "cms.fts2yaml.FTSColumn.to_fwf_column"]], "to_sql_type() (ftscolumn method)": [[48, "cms.fts2yaml.FTSColumn.to_sql_type"]], "width() (in module cms.fts2yaml)": [[48, "cms.fts2yaml.width"]], "cms.init_cms_db": [[50, "module-cms.init_cms_db"]], "init_cms() (in module cms.init_cms_db)": [[50, "cms.init_cms_db.init_cms"]], "medicarecombinedview (class in cms.tools.mcr_combine_tables)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView"]], "cms.tools.mcr_combine_tables": [[51, "module-cms.tools.mcr_combine_tables"]], "execute() (medicarecombinedview method)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.execute"]], "generate_sql() (medicarecombinedview method)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.generate_sql"]], "get_column() (medicarecombinedview static method)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.get_column"]], "get_columns() (medicarecombinedview method)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.get_columns"]], "get_tables() (medicarecombinedview method)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.get_tables"]], "ip (medicarecombinedview attribute)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.ip"]], "print_sql() (medicarecombinedview method)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.print_sql"]], "ps (medicarecombinedview attribute)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.ps"]], "supported_tables (medicarecombinedview attribute)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.supported_tables"]], "table_sql() (medicarecombinedview method)": [[51, "cms.tools.mcr_combine_tables.MedicareCombinedView.table_sql"]], "ftstuple (class in cms.tools.mcr_create_test_data)": [[52, "cms.tools.mcr_create_test_data.FTSTuple"]], "args() (in module cms.tools.mcr_create_test_data)": [[52, "cms.tools.mcr_create_test_data.args"]], "cms.tools.mcr_create_test_data": [[52, "module-cms.tools.mcr_create_test_data"]], "dat_path() (ftstuple method)": [[52, "cms.tools.mcr_create_test_data.FTSTuple.dat_path"]], "find_fts_tuples() (in module cms.tools.mcr_create_test_data)": [[52, "cms.tools.mcr_create_test_data.find_fts_tuples"]], "fts_path() (ftstuple method)": [[52, "cms.tools.mcr_create_test_data.FTSTuple.fts_path"]], "select() (in module cms.tools.mcr_create_test_data)": [[52, "cms.tools.mcr_create_test_data.select"]], "medicaredataloader (class in cms.mcr_data_loader)": [[53, "cms.mcr_data_loader.MedicareDataLoader"]], "cms.mcr_data_loader": [[53, "module-cms.mcr_data_loader"]], "dat4fts() (medicaredataloader class method)": [[53, "cms.mcr_data_loader.MedicareDataLoader.dat4fts"]], "get_files() (medicaredataloader method)": [[53, "cms.mcr_data_loader.MedicareDataLoader.get_files"]], "open() (medicaredataloader class method)": [[53, "cms.mcr_data_loader.MedicareDataLoader.open"]], "column (class in cms.tools.mcr_file)": [[54, "cms.tools.mcr_file.Column"]], "columnattribute (class in cms.tools.mcr_file)": [[54, "cms.tools.mcr_file.ColumnAttribute"]], "columndef (class in cms.tools.mcr_file)": [[54, "cms.tools.mcr_file.ColumnDef"]], "medicarefile (class in cms.tools.mcr_file)": [[54, "cms.tools.mcr_file.MedicareFile"]], "medparparseexception": [[54, "cms.tools.mcr_file.MedparParseException"]], "cms.tools.mcr_file": [[54, "module-cms.tools.mcr_file"]], "count_lines_in_dest() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.count_lines_in_dest"]], "count_lines_in_source() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.count_lines_in_source"]], "export() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.export"]], "info() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.info"]], "init() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.init"]], "log() (in module cms.tools.mcr_file)": [[54, "cms.tools.mcr_file.log"]], "read() (columndef method)": [[54, "cms.tools.mcr_file.ColumnDef.read"]], "read_record() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.read_record"]], "status() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.status"]], "status_message() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.status_message"]], "validate() (medicarefile method)": [[54, "cms.tools.mcr_file.MedicareFile.validate"]], "width() (in module cms.tools.mcr_file)": [[54, "cms.tools.mcr_file.width"]], "cms.tools.mcr_fts2csv": [[55, "module-cms.tools.mcr_fts2csv"]], "convert() (in module cms.tools.mcr_fts2csv)": [[55, "cms.tools.mcr_fts2csv.convert"]], "medicareloader (class in cms.tools.mcr_fts2db)": [[56, "cms.tools.mcr_fts2db.MedicareLoader"]], "cms.tools.mcr_fts2db": [[56, "module-cms.tools.mcr_fts2db"]], "handle() (medicareloader method)": [[56, "cms.tools.mcr_fts2db.MedicareLoader.handle"]], "handle_empty() (medicareloader method)": [[56, "cms.tools.mcr_fts2db.MedicareLoader.handle_empty"]], "loader_for_csv() (medicareloader static method)": [[56, "cms.tools.mcr_fts2db.MedicareLoader.loader_for_csv"]], "loader_for_fwf() (medicareloader static method)": [[56, "cms.tools.mcr_fts2db.MedicareLoader.loader_for_fwf"]], "process() (medicareloader class method)": [[56, "cms.tools.mcr_fts2db.MedicareLoader.process"]], "traverse() (medicareloader method)": [[56, "cms.tools.mcr_fts2db.MedicareLoader.traverse"]], "medicareregistry (class in cms.tools.mcr_registry)": [[57, "cms.tools.mcr_registry.MedicareRegistry"]], "cms.tools.mcr_registry": [[57, "module-cms.tools.mcr_registry"]], "init_registry() (medicareregistry method)": [[57, "cms.tools.mcr_registry.MedicareRegistry.init_registry"]], "read_registry() (medicareregistry method)": [[57, "cms.tools.mcr_registry.MedicareRegistry.read_registry"]], "save() (medicareregistry method)": [[57, "cms.tools.mcr_registry.MedicareRegistry.save"]], "medicaresas (class in cms.tools.mcr_sas)": [[58, "cms.tools.mcr_sas.MedicareSAS"]], "cms.tools.mcr_sas": [[58, "module-cms.tools.mcr_sas"]], "handle() (medicaresas method)": [[58, "cms.tools.mcr_sas.MedicareSAS.handle"]], "handle_sas_file() (medicaresas method)": [[58, "cms.tools.mcr_sas.MedicareSAS.handle_sas_file"]], "traverse() (medicaresas method)": [[58, "cms.tools.mcr_sas.MedicareSAS.traverse"]], "sasloader (class in cms.tools.mcr_sas2db)": [[59, "cms.tools.mcr_sas2db.SASLoader"]], "cms.tools.mcr_sas2db": [[59, "module-cms.tools.mcr_sas2db"]], "handle() (sasloader method)": [[59, "cms.tools.mcr_sas2db.SASLoader.handle"]], "process() (sasloader class method)": [[59, "cms.tools.mcr_sas2db.SASLoader.process"]], "sasintrospector (class in cms.tools.mcr_sas2yaml)": [[60, "cms.tools.mcr_sas2yaml.SASIntrospector"]], "add_sas_table() (sasintrospector method)": [[60, "cms.tools.mcr_sas2yaml.SASIntrospector.add_sas_table"]], "cms.tools.mcr_sas2yaml": [[60, "module-cms.tools.mcr_sas2yaml"]], "handle() (sasintrospector method)": [[60, "cms.tools.mcr_sas2yaml.SASIntrospector.handle"]], "matches() (sasintrospector class method)": [[60, "cms.tools.mcr_sas2yaml.SASIntrospector.matches"]], "process() (sasintrospector class method)": [[60, "cms.tools.mcr_sas2yaml.SASIntrospector.process"]], "medparfileset (class in cms.tools.medpar_converter)": [[63, "cms.tools.medpar_converter.MedParFileSet"]], "medparconverter (class in cms.tools.medpar_converter)": [[63, "cms.tools.medpar_converter.MedparConverter"]], "args() (in module cms.tools.medpar_converter)": [[63, "cms.tools.medpar_converter.args"]], "cms.tools.medpar_converter": [[63, "module-cms.tools.medpar_converter"]], "convert() (medparconverter method)": [[63, "cms.tools.medpar_converter.MedparConverter.convert"]], "convert_dataset() (medparconverter static method)": [[63, "cms.tools.medpar_converter.MedparConverter.convert_dataset"]], "dataset() (medparconverter class method)": [[63, "cms.tools.medpar_converter.MedparConverter.dataset"]], "find() (medparconverter class method)": [[63, "cms.tools.medpar_converter.MedparConverter.find"]], "list() (medparconverter method)": [[63, "cms.tools.medpar_converter.MedparConverter.list"]], "status() (medparconverter method)": [[63, "cms.tools.medpar_converter.MedparConverter.status"]], "args() (in module cms.random_selector)": [[65, "cms.random_selector.args"]], "cms.random_selector": [[65, "module-cms.random_selector"]], "select() (in module cms.random_selector)": [[65, "cms.random_selector.select"]], "registry (class in cms.registry)": [[66, "cms.registry.Registry"]], "built_in_registry_path() (registry static method)": [[66, "cms.registry.Registry.built_in_registry_path"], [187, "gridmet.registry.Registry.built_in_registry_path"]], "cms.registry": [[66, "module-cms.registry"]], "init() (registry method)": [[66, "cms.registry.Registry.init"]], "update() (registry method)": [[66, "cms.registry.Registry.update"], [147, "epa.registry.Registry.update"], [187, "gridmet.registry.Registry.update"]], "update_medicaid() (registry method)": [[66, "cms.registry.Registry.update_medicaid"]], "update_medicare() (registry method)": [[66, "cms.registry.Registry.update_medicare"]], "populateconfig (class in cms.table_population)": [[67, "cms.table_population.PopulateConfig"]], "tablepopulator (class in cms.table_population)": [[67, "cms.table_population.TablePopulator"]], "cms.table_population": [[67, "module-cms.table_population"]], "init_cms() (in module cms.table_population)": [[67, "cms.table_population.init_cms"]], "add_gis_columns() (in module nsaph.adi)": [[97, "nsaph.adi.add_gis_columns"]], "nsaph.adi": [[97, "module-nsaph.adi"]], "commonconfig (class in nsaph.loader.common)": [[98, "nsaph.loader.common.CommonConfig"], [101, "nsaph.loader.common.CommonConfig"]], "dbconnectionconfig (class in nsaph.loader.common)": [[98, "nsaph.loader.common.DBConnectionConfig"], [101, "nsaph.loader.common.DBConnectionConfig"]], "dbtableconfig (class in nsaph.loader.common)": [[98, "nsaph.loader.common.DBTableConfig"], [101, "nsaph.loader.common.DBTableConfig"]], "autocommit (dbconnectionconfig attribute)": [[98, "nsaph.loader.common.DBConnectionConfig.autocommit"], [101, "nsaph.loader.common.DBConnectionConfig.autocommit"]], "connection (dbconnectionconfig attribute)": [[98, "nsaph.loader.common.DBConnectionConfig.connection"], [101, "nsaph.loader.common.DBConnectionConfig.connection"]], "db (dbconnectionconfig attribute)": [[98, "nsaph.loader.common.DBConnectionConfig.db"], [101, "nsaph.loader.common.DBConnectionConfig.db"]], "domain (commonconfig attribute)": [[98, "nsaph.loader.common.CommonConfig.domain"], [101, "nsaph.loader.common.CommonConfig.domain"]], "dryrun (dbconnectionconfig attribute)": [[98, "nsaph.loader.common.DBConnectionConfig.dryrun"], [101, "nsaph.loader.common.DBConnectionConfig.dryrun"]], "nsaph.loader.common": [[98, "module-nsaph.loader.common"], [101, "module-nsaph.loader.common"]], "registry (commonconfig attribute)": [[98, "nsaph.loader.common.CommonConfig.registry"], [101, "nsaph.loader.common.CommonConfig.registry"]], "table (dbtableconfig attribute)": [[98, "nsaph.loader.common.DBTableConfig.table"], [101, "nsaph.loader.common.DBTableConfig.table"]], "verbose (dbconnectionconfig attribute)": [[98, "nsaph.loader.common.DBConnectionConfig.verbose"], [101, "nsaph.loader.common.DBConnectionConfig.verbose"]], "create_table() (in module nsaph.create)": [[99, "nsaph.create.create_table"]], "nsaph.create": [[99, "module-nsaph.create"]], "collect() (in module nsaph.util.cwl_collect_outputs)": [[100, "nsaph.util.cwl_collect_outputs.collect"]], "nsaph.util.cwl_collect_outputs": [[100, "module-nsaph.util.cwl_collect_outputs"]], "dataloader (class in nsaph.loader.data_loader)": [[101, "nsaph.loader.data_loader.DataLoader"]], "dataloaderaction (class in nsaph.loader.loader_config)": [[101, "nsaph.loader.loader_config.DataLoaderAction"], [115, "nsaph.loader.loader_config.DataLoaderAction"]], "loaderconfig (class in nsaph.loader.loader_config)": [[101, "nsaph.loader.loader_config.LoaderConfig"], [115, "nsaph.loader.loader_config.LoaderConfig"]], "parallelization (class in nsaph.loader.loader_config)": [[101, "nsaph.loader.loader_config.Parallelization"], [115, "nsaph.loader.loader_config.Parallelization"]], "action (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.action"], [115, "nsaph.loader.loader_config.LoaderConfig.action"]], "buffer (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.buffer"], [115, "nsaph.loader.loader_config.LoaderConfig.buffer"]], "close() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.close"]], "commit() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.commit"]], "data (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.data"], [115, "nsaph.loader.loader_config.LoaderConfig.data"]], "drop() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.drop"]], "get_connection() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.get_connection"]], "get_connections() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.get_connections"]], "get_files() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.get_files"]], "has_been_ingested() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.has_been_ingested"]], "import_data_from_file() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.import_data_from_file"]], "incremental (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.incremental"], [115, "nsaph.loader.loader_config.LoaderConfig.incremental"]], "insert_from_select() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.insert_from_select"]], "is_parallel() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.is_parallel"]], "limit (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.limit"], [115, "nsaph.loader.loader_config.LoaderConfig.limit"]], "load() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.load"]], "log (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.log"], [115, "nsaph.loader.loader_config.LoaderConfig.log"]], "nsaph.loader.data_loader": [[101, "module-nsaph.loader.data_loader"]], "nsaph.loader.loader_config": [[101, "module-nsaph.loader.loader_config"], [115, "module-nsaph.loader.loader_config"]], "page (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.page"], [115, "nsaph.loader.loader_config.LoaderConfig.page"]], "parallelization (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.parallelization"], [115, "nsaph.loader.loader_config.LoaderConfig.parallelization"]], "pattern (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.pattern"], [115, "nsaph.loader.loader_config.LoaderConfig.pattern"]], "print_ddl() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.print_ddl"]], "print_table_ddl() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.print_table_ddl"]], "reset (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.reset"], [115, "nsaph.loader.loader_config.LoaderConfig.reset"]], "reset() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.reset"]], "rollback() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.rollback"]], "run() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.run"]], "set_table() (dataloader method)": [[101, "nsaph.loader.data_loader.DataLoader.set_table"]], "sloppy (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.sloppy"], [115, "nsaph.loader.loader_config.LoaderConfig.sloppy"]], "threads (loaderconfig attribute)": [[101, "nsaph.loader.loader_config.LoaderConfig.threads"], [115, "nsaph.loader.loader_config.LoaderConfig.threads"]], "validate() (loaderconfig method)": [[101, "nsaph.loader.loader_config.LoaderConfig.validate"], [115, "nsaph.loader.loader_config.LoaderConfig.validate"]], "connection (class in nsaph.db)": [[102, "nsaph.db.Connection"]], "resultsetdeprecated (class in nsaph.db)": [[102, "nsaph.db.ResultSetDeprecated"]], "size (resultsetdeprecated attribute)": [[102, "nsaph.db.ResultSetDeprecated.SIZE"]], "close() (connection method)": [[102, "nsaph.db.Connection.close"]], "connect() (connection method)": [[102, "nsaph.db.Connection.connect"]], "connect_to_database() (connection method)": [[102, "nsaph.db.Connection.connect_to_database"]], "connect_via_tunnel() (connection method)": [[102, "nsaph.db.Connection.connect_via_tunnel"]], "default_filename (connection attribute)": [[102, "nsaph.db.Connection.default_filename"]], "default_port() (connection static method)": [[102, "nsaph.db.Connection.default_port"]], "default_section (connection attribute)": [[102, "nsaph.db.Connection.default_section"]], "get_database_types() (connection method)": [[102, "nsaph.db.Connection.get_database_types"]], "host_name() (connection static method)": [[102, "nsaph.db.Connection.host_name"]], "nsaph.db": [[102, "module-nsaph.db"]], "read_config() (connection class method)": [[102, "nsaph.db.Connection.read_config"]], "resolve_host() (connection class method)": [[102, "nsaph.db.Connection.resolve_host"]], "test_connection() (in module nsaph.db)": [[102, "nsaph.db.test_connection"]], "create (domain attribute)": [[103, "nsaph.data_model.domain.Domain.CREATE"]], "domain (class in nsaph.data_model.domain)": [[103, "nsaph.data_model.domain.Domain"]], "add_fk_validation() (domain method)": [[103, "nsaph.data_model.domain.Domain.add_fk_validation"]], "add_index() (domain method)": [[103, "nsaph.data_model.domain.Domain.add_index"]], "add_index_by_ddl() (domain method)": [[103, "nsaph.data_model.domain.Domain.add_index_by_ddl"]], "append_ddl() (domain method)": [[103, "nsaph.data_model.domain.Domain.append_ddl"]], "column_spec() (domain method)": [[103, "nsaph.data_model.domain.Domain.column_spec"]], "create() (domain method)": [[103, "nsaph.data_model.domain.Domain.create"]], "create_object_from() (domain method)": [[103, "nsaph.data_model.domain.Domain.create_object_from"]], "create_table() (domain method)": [[103, "nsaph.data_model.domain.Domain.create_table"]], "create_true_table() (domain method)": [[103, "nsaph.data_model.domain.Domain.create_true_table"]], "ddl_for_node() (domain method)": [[103, "nsaph.data_model.domain.Domain.ddl_for_node"]], "drop() (domain method)": [[103, "nsaph.data_model.domain.Domain.drop"]], "extract_generation_code() (domain method)": [[103, "nsaph.data_model.domain.Domain.extract_generation_code"]], "find() (domain method)": [[103, "nsaph.data_model.domain.Domain.find"]], "find_dependent() (domain method)": [[103, "nsaph.data_model.domain.Domain.find_dependent"]], "find_mapped_column_name() (domain method)": [[103, "nsaph.data_model.domain.Domain.find_mapped_column_name"]], "fqn() (domain method)": [[103, "nsaph.data_model.domain.Domain.fqn"]], "generate_insert_from_select() (domain method)": [[103, "nsaph.data_model.domain.Domain.generate_insert_from_select"]], "get() (domain method)": [[103, "nsaph.data_model.domain.Domain.get"]], "get_column_type() (domain static method)": [[103, "nsaph.data_model.domain.Domain.get_column_type"]], "get_columns() (domain class method)": [[103, "nsaph.data_model.domain.Domain.get_columns"]], "get_columns_as_dict() (domain class method)": [[103, "nsaph.data_model.domain.Domain.get_columns_as_dict"]], "get_index_ddl() (domain method)": [[103, "nsaph.data_model.domain.Domain.get_index_ddl"]], "get_multi_column_index_ddl() (domain method)": [[103, "nsaph.data_model.domain.Domain.get_multi_column_index_ddl"]], "get_select_from() (domain static method)": [[103, "nsaph.data_model.domain.Domain.get_select_from"]], "has() (domain method)": [[103, "nsaph.data_model.domain.Domain.has"]], "has_column_spec() (domain static method)": [[103, "nsaph.data_model.domain.Domain.has_column_spec"]], "has_hard_linked_children() (domain method)": [[103, "nsaph.data_model.domain.Domain.has_hard_linked_children"]], "init() (domain method)": [[103, "nsaph.data_model.domain.Domain.init"]], "is_array() (domain static method)": [[103, "nsaph.data_model.domain.Domain.is_array"]], "is_column_wildcard() (domain class method)": [[103, "nsaph.data_model.domain.Domain.is_column_wildcard"]], "is_generated() (domain static method)": [[103, "nsaph.data_model.domain.Domain.is_generated"]], "list_columns() (domain method)": [[103, "nsaph.data_model.domain.Domain.list_columns"]], "list_identifiers() (domain static method)": [[103, "nsaph.data_model.domain.Domain.list_identifiers"]], "list_source_columns() (domain method)": [[103, "nsaph.data_model.domain.Domain.list_source_columns"]], "map_selected_columns() (domain method)": [[103, "nsaph.data_model.domain.Domain.map_selected_columns"]], "matches() (domain method)": [[103, "nsaph.data_model.domain.Domain.matches"]], "need_index() (domain method)": [[103, "nsaph.data_model.domain.Domain.need_index"]], "nsaph.data_model.domain": [[103, "module-nsaph.data_model.domain"]], "parse_wildcard_column_spec() (domain class method)": [[103, "nsaph.data_model.domain.Domain.parse_wildcard_column_spec"]], "set_sloppy() (domain method)": [[103, "nsaph.data_model.domain.Domain.set_sloppy"]], "skip() (domain method)": [[103, "nsaph.data_model.domain.Domain.skip"]], "spillover_table() (domain method)": [[103, "nsaph.data_model.domain.Domain.spillover_table"]], "view_column_joined() (domain method)": [[103, "nsaph.data_model.domain.Domain.view_column_joined"]], "view_column_spec() (domain method)": [[103, "nsaph.data_model.domain.Domain.view_column_spec"]], "blockingthreadpoolexecutor (class in nsaph.util.executors)": [[105, "nsaph.util.executors.BlockingThreadPoolExecutor"]], "nsaph.util.executors": [[105, "module-nsaph.util.executors"]], "submit() (blockingthreadpoolexecutor method)": [[105, "nsaph.util.executors.BlockingThreadPoolExecutor.submit"]], "thread_initializer() (in module nsaph.util.executors)": [[105, "nsaph.util.executors.thread_initializer"]], "wait() (blockingthreadpoolexecutor method)": [[105, "nsaph.util.executors.BlockingThreadPoolExecutor.wait"]], "wait_for_completion() (blockingthreadpoolexecutor method)": [[105, "nsaph.util.executors.BlockingThreadPoolExecutor.wait_for_completion"]], "nsaph.fips": [[106, "module-nsaph.fips"]], "dataset (class in nsaph.requests.hdf5_export)": [[107, "nsaph.requests.hdf5_export.Dataset"]], "add_index() (dataset method)": [[107, "nsaph.requests.hdf5_export.Dataset.add_index"]], "append() (dataset method)": [[107, "nsaph.requests.hdf5_export.Dataset.append"]], "append() (in module nsaph.requests.hdf5_export)": [[107, "nsaph.requests.hdf5_export.append"]], "clear() (dataset method)": [[107, "nsaph.requests.hdf5_export.Dataset.clear"]], "dtype() (in module nsaph.requests.hdf5_export)": [[107, "nsaph.requests.hdf5_export.dtype"]], "export() (in module nsaph.requests.hdf5_export)": [[107, "nsaph.requests.hdf5_export.export"]], "map2ds() (in module nsaph.requests.hdf5_export)": [[107, "nsaph.requests.hdf5_export.map2ds"]], "nsaph.requests.hdf5_export": [[107, "module-nsaph.requests.hdf5_export"]], "store() (in module nsaph.requests.hdf5_export)": [[107, "nsaph.requests.hdf5_export.store"]], "to_hdf5() (dataset method)": [[107, "nsaph.requests.hdf5_export.Dataset.to_hdf5"]], "type_name() (dataset method)": [[107, "nsaph.requests.hdf5_export.Dataset.type_name"]], "indexbuilder (class in nsaph.loader.index_builder)": [[109, "nsaph.loader.index_builder.IndexBuilder"]], "indexerconfig (class in nsaph.loader.index_builder)": [[109, "nsaph.loader.index_builder.IndexerConfig"]], "build() (indexbuilder method)": [[109, "nsaph.loader.index_builder.IndexBuilder.build"]], "drop() (indexbuilder method)": [[109, "nsaph.loader.index_builder.IndexBuilder.drop"]], "drop_all() (indexbuilder class method)": [[109, "nsaph.loader.index_builder.IndexBuilder.drop_all"]], "execute() (indexbuilder method)": [[109, "nsaph.loader.index_builder.IndexBuilder.execute"]], "find_name() (in module nsaph.loader.index_builder)": [[109, "nsaph.loader.index_builder.find_name"]], "nsaph.loader.index_builder": [[109, "module-nsaph.loader.index_builder"]], "print_stat() (indexbuilder method)": [[109, "nsaph.loader.index_builder.IndexBuilder.print_stat"]], "run() (indexbuilder method)": [[109, "nsaph.loader.index_builder.IndexBuilder.run"]], "execute() (in module nsaph.util.init_core_db)": [[110, "nsaph.util.init_core_db.execute"]], "get_sql_dir() (in module nsaph.util.init_core_db)": [[110, "nsaph.util.init_core_db.get_sql_dir"]], "init_core() (in module nsaph.util.init_core_db)": [[110, "nsaph.util.init_core_db.init_core"]], "load_data() (in module nsaph.util.init_core_db)": [[110, "nsaph.util.init_core_db.load_data"]], "nsaph.util.init_core_db": [[110, "module-nsaph.util.init_core_db"]], "parse_args() (in module nsaph.util.init_core_db)": [[110, "nsaph.util.init_core_db.parse_args"]], "batch() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.Batch"]], "inserter (class in nsaph.data_model.inserter)": [[111, "nsaph.data_model.inserter.Inserter"]], "table() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.Table"]], "compute() (in module nsaph.data_model.inserter)": [[111, "nsaph.data_model.inserter.compute"]], "drilldown() (inserter static method)": [[111, "nsaph.data_model.inserter.Inserter.drilldown"]], "get_autocommit() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.get_autocommit"]], "get_cumulative_timing() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.get_cumulative_timing"]], "get_thread_timing() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.get_thread_timing"]], "get_timestamp() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.get_timestamp"]], "get_timings() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.get_timings"]], "import_file() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.import_file"]], "log_progress() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.log_progress"]], "nsaph.data_model.inserter": [[111, "module-nsaph.data_model.inserter"]], "prepare() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.prepare"]], "push() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.push"]], "read_batch() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.read_batch"]], "reset_timer() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.reset_timer"]], "stamp_time() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.stamp_time"]], "timer() (inserter method)": [[111, "nsaph.data_model.inserter.Inserter.timer"]], "inconsistenttypes": [[112, "nsaph.loader.introspector.InconsistentTypes"]], "introspector (class in nsaph.loader.introspector)": [[112, "nsaph.loader.introspector.Introspector"]], "append_file_column() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.append_file_column"]], "append_record_column() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.append_record_column"]], "append_sql_column() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.append_sql_column"]], "classify() (introspector class method)": [[112, "nsaph.loader.introspector.Introspector.classify"]], "csv_reader() (introspector static method)": [[112, "nsaph.loader.introspector.Introspector.csv_reader"]], "db_type() (introspector static method)": [[112, "nsaph.loader.introspector.Introspector.db_type"]], "fopen() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.fopen"]], "get_columns() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.get_columns"]], "guess_str() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.guess_str"]], "guess_types() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.guess_types"]], "handle_csv() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.handle_csv"]], "handle_json() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.handle_json"]], "handle_sas() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.handle_sas"]], "introspect() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.introspect"]], "load_csv() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.load_csv"]], "load_fst() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.load_fst"]], "load_json() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.load_json"]], "load_range() (introspector static method)": [[112, "nsaph.loader.introspector.Introspector.load_range"]], "load_sas() (introspector method)": [[112, "nsaph.loader.introspector.Introspector.load_sas"]], "name() (introspector static method)": [[112, "nsaph.loader.introspector.Introspector.name"]], "nsaph.loader.introspector": [[112, "module-nsaph.loader.introspector"]], "reconcile() (introspector static method)": [[112, "nsaph.loader.introspector.Introspector.reconcile"]], "sas2db_type() (introspector class method)": [[112, "nsaph.loader.introspector.Introspector.sas2db_type"]], "test() (in module nsaph.loader.introspector)": [[112, "nsaph.loader.introspector.test"]], "unquote() (introspector static method)": [[112, "nsaph.loader.introspector.Introspector.unquote"]], "add_gis_columns() (in module nsaph.link_gis)": [[113, "nsaph.link_gis.add_gis_columns"]], "nsaph.link_gis": [[113, "module-nsaph.link_gis"]], "loaderbase (class in nsaph.loader)": [[114, "nsaph.loader.LoaderBase"]], "diff() (in module nsaph.loader)": [[114, "nsaph.loader.diff"]], "execute_with_monitor() (loaderbase method)": [[114, "nsaph.loader.LoaderBase.execute_with_monitor"]], "find_file_in_path() (loaderbase class method)": [[114, "nsaph.loader.LoaderBase.find_file_in_path"]], "get_domain() (loaderbase class method)": [[114, "nsaph.loader.LoaderBase.get_domain"]], "get_pid() (loaderbase method)": [[114, "nsaph.loader.LoaderBase.get_pid"]], "log_activity() (loaderbase method)": [[114, "nsaph.loader.LoaderBase.log_activity"]], "nsaph.loader": [[114, "module-nsaph.loader"]], "drop (dataloaderaction attribute)": [[115, "nsaph.loader.loader_config.DataLoaderAction.drop"]], "files (parallelization attribute)": [[115, "nsaph.loader.loader_config.Parallelization.files"]], "insert (dataloaderaction attribute)": [[115, "nsaph.loader.loader_config.DataLoaderAction.insert"]], "lines (parallelization attribute)": [[115, "nsaph.loader.loader_config.Parallelization.lines"]], "load (dataloaderaction attribute)": [[115, "nsaph.loader.loader_config.DataLoaderAction.load"]], "new() (dataloaderaction class method)": [[115, "nsaph.loader.loader_config.DataLoaderAction.new"]], "none (parallelization attribute)": [[115, "nsaph.loader.loader_config.Parallelization.none"]], "print (dataloaderaction attribute)": [[115, "nsaph.loader.loader_config.DataLoaderAction.print"]], "customcolumn (class in nsaph.data_model.model)": [[117, "nsaph.data_model.model.CustomColumn"]], "table (class in nsaph.data_model.model)": [[117, "nsaph.data_model.model.Table"]], "add_column() (table method)": [[117, "nsaph.data_model.model.Table.add_column"]], "add_data() (table method)": [[117, "nsaph.data_model.model.Table.add_data"]], "analyze() (table method)": [[117, "nsaph.data_model.model.Table.analyze"]], "build_indices() (table method)": [[117, "nsaph.data_model.model.Table.build_indices"]], "copy_data() (table method)": [[117, "nsaph.data_model.model.Table.copy_data"]], "create() (table method)": [[117, "nsaph.data_model.model.Table.create"]], "csv_reader() (in module nsaph.data_model.model)": [[117, "nsaph.data_model.model.csv_reader"]], "drop() (table method)": [[117, "nsaph.data_model.model.Table.drop"]], "extract_value() (customcolumn method)": [[117, "nsaph.data_model.model.CustomColumn.extract_value"]], "fopen() (table method)": [[117, "nsaph.data_model.model.Table.fopen"]], "get_index_ddl() (table method)": [[117, "nsaph.data_model.model.Table.get_index_ddl"]], "guess_types() (table method)": [[117, "nsaph.data_model.model.Table.guess_types"]], "index_method() (in module nsaph.data_model.model)": [[117, "nsaph.data_model.model.index_method"]], "load_range() (in module nsaph.data_model.model)": [[117, "nsaph.data_model.model.load_range"]], "log_progress() (table static method)": [[117, "nsaph.data_model.model.Table.log_progress"]], "make_column() (table method)": [[117, "nsaph.data_model.model.Table.make_column"]], "make_fips_column() (table method)": [[117, "nsaph.data_model.model.Table.make_fips_column"]], "make_int_column() (table method)": [[117, "nsaph.data_model.model.Table.make_int_column"]], "make_iso_column() (table method)": [[117, "nsaph.data_model.model.Table.make_iso_column"]], "nsaph.data_model.model": [[117, "module-nsaph.data_model.model"]], "parse_fips12() (table method)": [[117, "nsaph.data_model.model.Table.parse_fips12"]], "save() (table method)": [[117, "nsaph.data_model.model.Table.save"]], "type_from_metadata() (table method)": [[117, "nsaph.data_model.model.Table.type_from_metadata"]], "unquote() (in module nsaph.data_model.model)": [[117, "nsaph.data_model.model.unquote"]], "activity (class in nsaph.loader.monitor)": [[118, "nsaph.loader.monitor.Activity"]], "dbactivitymonitor (class in nsaph.loader.monitor)": [[118, "nsaph.loader.monitor.DBActivityMonitor"]], "get_activity() (dbactivitymonitor method)": [[118, "nsaph.loader.monitor.DBActivityMonitor.get_activity"]], "get_indexing_progress() (dbactivitymonitor method)": [[118, "nsaph.loader.monitor.DBActivityMonitor.get_indexing_progress"]], "nsaph.loader.monitor": [[118, "module-nsaph.loader.monitor"]], "run() (dbactivitymonitor method)": [[118, "nsaph.loader.monitor.DBActivityMonitor.run"]], "get_hostname_as_localhost() (in module nsaph.util.net)": [[119, "nsaph.util.net.get_hostname_as_localhost"]], "nsaph.util.net": [[119, "module-nsaph.util.net"]], "app_name() (in module nsaph)": [[120, "nsaph.app_name"]], "init_logging() (in module nsaph)": [[120, "nsaph.init_logging"]], "nsaph": [[120, "module-nsaph"]], "add_state_fips() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.add_state_fips"]], "dump() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.dump"]], "ensure() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.ensure"]], "export() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.export"]], "flush() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.flush"]], "fqn() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.fqn"]], "import_table() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.import_table"]], "nsaph.util.pg_json_dump": [[121, "module-nsaph.util.pg_json_dump"]], "quote() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.quote"]], "result_set() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.result_set"]], "show() (in module nsaph.util.pg_json_dump)": [[121, "nsaph.util.pg_json_dump.show"]], "nsaph.pg_keywords": [[122, "module-nsaph.pg_keywords"]], "projectloader (class in nsaph.loader.project_loader)": [[123, "nsaph.loader.project_loader.ProjectLoader"]], "introspect() (projectloader method)": [[123, "nsaph.loader.project_loader.ProjectLoader.introspect"]], "is_relative_to() (in module nsaph.loader.project_loader)": [[123, "nsaph.loader.project_loader.is_relative_to"]], "new_domain() (projectloader class method)": [[123, "nsaph.loader.project_loader.ProjectLoader.new_domain"]], "nsaph.loader.project_loader": [[123, "module-nsaph.loader.project_loader"]], "remove_ext() (in module nsaph.loader.project_loader)": [[123, "nsaph.loader.project_loader.remove_ext"]], "run() (projectloader method)": [[123, "nsaph.loader.project_loader.ProjectLoader.run"]], "save_registry() (projectloader method)": [[123, "nsaph.loader.project_loader.ProjectLoader.save_registry"]], "query (class in nsaph.requests.query)": [[124, "nsaph.requests.query.Query"]], "all_tables() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.all_tables"]], "collect_tables() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.collect_tables"]], "execute() (query method)": [[124, "nsaph.requests.query.Query.execute"]], "find_tables() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.find_tables"]], "fqn() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.fqn"]], "generate() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.generate"]], "generate_from() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.generate_from"]], "generate_order_by() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.generate_order_by"]], "generate_select() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.generate_select"]], "generate_where() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.generate_where"]], "nsaph.requests.query": [[124, "module-nsaph.requests.query"]], "prepare() (query method)": [[124, "nsaph.requests.query.Query.prepare"]], "reduce_tables() (in module nsaph.requests.query)": [[124, "nsaph.requests.query.reduce_tables"]], "sql (query attribute)": [[124, "nsaph.requests.query.Query.sql"]], "get_resource_dir() (in module nsaph.util.resources)": [[126, "nsaph.util.resources.get_resource_dir"]], "get_resources() (in module nsaph.util.resources)": [[126, "nsaph.util.resources.get_resources"]], "name2path() (in module nsaph.util.resources)": [[126, "nsaph.util.resources.name2path"]], "nsaph.util.resources": [[126, "module-nsaph.util.resources"]], "info() (in module nsaph.util.sas_explorer)": [[128, "nsaph.util.sas_explorer.info"]], "nsaph.util.sas_explorer": [[128, "module-nsaph.util.sas_explorer"]], "simulate() (in module nsaph.util.sas_explorer)": [[128, "nsaph.util.sas_explorer.simulate"]], "install() (in module nsaph.util.shapes)": [[129, "nsaph.util.shapes.install"]], "nsaph.util.shapes": [[129, "module-nsaph.util.shapes"]], "ssa2fips (class in nsaph.util.ssa2fips)": [[130, "nsaph.util.ssa2fips.SSA2FIPS"]], "ssafile (class in nsaph.util.ssa2fips)": [[130, "nsaph.util.ssa2fips.SSAFile"]], "meta (ssa2fips attribute)": [[130, "nsaph.util.ssa2fips.SSA2FIPS.meta"]], "nsaph.util.ssa2fips": [[130, "module-nsaph.util.ssa2fips"]], "print() (ssa2fips method)": [[130, "nsaph.util.ssa2fips.SSA2FIPS.print"]], "read() (ssa2fips method)": [[130, "nsaph.util.ssa2fips.SSA2FIPS.read"]], "read() (ssafile method)": [[130, "nsaph.util.ssa2fips.SSAFile.read"]], "set_year() (ssafile method)": [[130, "nsaph.util.ssa2fips.SSAFile.set_year"]], "store() (ssa2fips method)": [[130, "nsaph.util.ssa2fips.SSA2FIPS.store"]], "values() (ssafile method)": [[130, "nsaph.util.ssa2fips.SSAFile.values"]], "y (ssa2fips attribute)": [[130, "nsaph.util.ssa2fips.SSA2FIPS.y"]], "years (ssa2fips attribute)": [[130, "nsaph.util.ssa2fips.SSA2FIPS.years"]], "csvlikejsonreader (class in nsaph.data_model.utils)": [[131, "nsaph.data_model.utils.CSVLikeJsonReader"]], "datareader (class in nsaph.data_model.utils)": [[131, "nsaph.data_model.utils.DataReader"]], "basename() (in module nsaph.data_model.utils)": [[131, "nsaph.data_model.utils.basename"]], "close() (csvlikejsonreader method)": [[131, "nsaph.data_model.utils.CSVLikeJsonReader.close"]], "entry_to_path() (in module nsaph.data_model.utils)": [[131, "nsaph.data_model.utils.entry_to_path"]], "get_path() (datareader method)": [[131, "nsaph.data_model.utils.DataReader.get_path"]], "nsaph.data_model.utils": [[131, "module-nsaph.data_model.utils"]], "open() (csvlikejsonreader method)": [[131, "nsaph.data_model.utils.CSVLikeJsonReader.open"]], "open_csv() (datareader method)": [[131, "nsaph.data_model.utils.DataReader.open_csv"]], "open_fst() (datareader method)": [[131, "nsaph.data_model.utils.DataReader.open_fst"]], "open_fwf() (datareader method)": [[131, "nsaph.data_model.utils.DataReader.open_fwf"]], "open_json() (datareader method)": [[131, "nsaph.data_model.utils.DataReader.open_json"]], "open_sas7bdat() (datareader method)": [[131, "nsaph.data_model.utils.DataReader.open_sas7bdat"]], "regex() (in module nsaph.data_model.utils)": [[131, "nsaph.data_model.utils.regex"]], "rows() (datareader method)": [[131, "nsaph.data_model.utils.DataReader.rows"]], "split() (in module nsaph.data_model.utils)": [[131, "nsaph.data_model.utils.split"]], "vacuum (class in nsaph.loader.vacuum)": [[133, "nsaph.loader.vacuum.Vacuum"]], "find_name() (in module nsaph.loader.vacuum)": [[133, "nsaph.loader.vacuum.find_name"]], "log_activity() (vacuum method)": [[133, "nsaph.loader.vacuum.Vacuum.log_activity"]], "nsaph.loader.vacuum": [[133, "module-nsaph.loader.vacuum"]], "run() (vacuum method)": [[133, "nsaph.loader.vacuum.Vacuum.run"]], "zip2fipscrosswalk (class in nsaph.util.zip2fips)": [[134, "nsaph.util.zip2fips.Zip2FipsCrossWalk"]], "download() (zip2fipscrosswalk method)": [[134, "nsaph.util.zip2fips.Zip2FipsCrossWalk.download"]], "m2q (zip2fipscrosswalk attribute)": [[134, "nsaph.util.zip2fips.Zip2FipsCrossWalk.m2q"]], "nsaph.util.zip2fips": [[134, "module-nsaph.util.zip2fips"]], "save() (zip2fipscrosswalk method)": [[134, "nsaph.util.zip2fips.Zip2FipsCrossWalk.save"]], "table (zip2fipscrosswalk attribute)": [[134, "nsaph.util.zip2fips.Zip2FipsCrossWalk.table"]], "url_pattern (zip2fipscrosswalk attribute)": [[134, "nsaph.util.zip2fips.Zip2FipsCrossWalk.url_pattern"]], "airnow (class in epa.airnow)": [[138, "epa.airnow.AirNow"]], "epa.airnow": [[138, "module-epa.airnow"]], "airnowdownloader (class in epa.airnow_downloader)": [[139, "epa.airnow_downloader.AirNowDownloader"]], "download() (airnowdownloader method)": [[139, "epa.airnow_downloader.AirNowDownloader.download"]], "download_range() (airnowdownloader method)": [[139, "epa.airnow_downloader.AirNowDownloader.download_range"]], "dump_csv() (airnowdownloader static method)": [[139, "epa.airnow_downloader.AirNowDownloader.dump_csv"]], "epa.airnow_downloader": [[139, "module-epa.airnow_downloader"]], "process() (airnowdownloader method)": [[139, "epa.airnow_downloader.AirNowDownloader.process"]], "write_csv_header() (airnowdownloader method)": [[139, "epa.airnow_downloader.AirNowDownloader.write_csv_header"]], "airnowcontext (class in epa.airnow_ds_def)": [[140, "epa.airnow_ds_def.AirNowContext"]], "argument (class in nsaph_utils.utils.context)": [[140, "nsaph_utils.utils.context.Argument"], [144, "nsaph_utils.utils.context.Argument"], [176, "nsaph_utils.utils.context.Argument"], [244, "nsaph_utils.utils.context.Argument"]], "co (parameter attribute)": [[140, "epa.airnow_ds_def.Parameter.CO"]], "context (class in nsaph_utils.utils.context)": [[140, "nsaph_utils.utils.context.Context"], [144, "nsaph_utils.utils.context.Context"], [176, "nsaph_utils.utils.context.Context"], [244, "nsaph_utils.utils.context.Context"]], "no2 (parameter attribute)": [[140, "epa.airnow_ds_def.Parameter.NO2"], [144, "epa.aqs_ds_def.Parameter.NO2"]], "ozone (parameter attribute)": [[140, "epa.airnow_ds_def.Parameter.OZONE"], [144, "epa.aqs_ds_def.Parameter.OZONE"]], "pm10 (parameter attribute)": [[140, "epa.airnow_ds_def.Parameter.PM10"]], "pm25 (parameter attribute)": [[140, "epa.airnow_ds_def.Parameter.PM25"], [144, "epa.aqs_ds_def.Parameter.PM25"]], "parameter (class in epa.airnow_ds_def)": [[140, "epa.airnow_ds_def.Parameter"]], "so2 (parameter attribute)": [[140, "epa.airnow_ds_def.Parameter.SO2"]], "api_key (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.api_key"]], "cfg (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.cfg"]], "compress (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.compress"]], "compress (context attribute)": [[140, "nsaph_utils.utils.context.Context.compress"], [144, "nsaph_utils.utils.context.Context.compress"], [176, "nsaph_utils.utils.context.Context.compress"], [244, "nsaph_utils.utils.context.Context.compress"]], "destination (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.destination"]], "end_date (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.end_date"]], "enum() (airnowcontext class method)": [[140, "epa.airnow_ds_def.AirNowContext.enum"]], "enum() (context class method)": [[140, "nsaph_utils.utils.context.Context.enum"], [144, "nsaph_utils.utils.context.Context.enum"], [176, "nsaph_utils.utils.context.Context.enum"], [244, "nsaph_utils.utils.context.Context.enum"]], "epa.airnow_ds_def": [[140, "module-epa.airnow_ds_def"]], "parameters (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.parameters"]], "proxy (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.proxy"]], "qc (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.qc"]], "reset (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.reset"]], "shapes (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.shapes"]], "start_date (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.start_date"]], "validate() (airnowcontext method)": [[140, "epa.airnow_ds_def.AirNowContext.validate"]], "validate() (context method)": [[140, "nsaph_utils.utils.context.Context.validate"], [144, "nsaph_utils.utils.context.Context.validate"], [176, "nsaph_utils.utils.context.Context.validate"], [244, "nsaph_utils.utils.context.Context.validate"]], "years (airnowcontext attribute)": [[140, "epa.airnow_ds_def.AirNowContext.years"]], "years (context attribute)": [[140, "nsaph_utils.utils.context.Context.years"], [144, "nsaph_utils.utils.context.Context.years"], [176, "nsaph_utils.utils.context.Context.years"], [244, "nsaph_utils.utils.context.Context.years"]], "epa.airnow_setup": [[141, "module-epa.airnow_setup"]], "setup() (in module epa.airnow_setup)": [[141, "epa.airnow_setup.setup"]], "download_shapes() (in module epa.airnow_shapes)": [[142, "epa.airnow_shapes.download_shapes"]], "epa.airnow_shapes": [[142, "module-epa.airnow_shapes"]], "aqs (class in epa.aqs)": [[143, "epa.aqs.AQS"]], "clear() (aqs method)": [[143, "epa.aqs.AQS.clear"]], "collect_downloads() (aqs method)": [[143, "epa.aqs.AQS.collect_downloads"]], "download() (aqs method)": [[143, "epa.aqs.AQS.download"]], "epa.aqs": [[143, "module-epa.aqs"]], "is_downloaded() (aqs method)": [[143, "epa.aqs.AQS.is_downloaded"]], "annual (aggregation attribute)": [[144, "epa.aqs_ds_def.Aggregation.ANNUAL"]], "aqscontext (class in epa.aqs_ds_def)": [[144, "epa.aqs_ds_def.AQSContext"]], "aggregation (class in epa.aqs_ds_def)": [[144, "epa.aqs_ds_def.Aggregation"]], "cardinality (class in nsaph_utils.utils.context)": [[144, "nsaph_utils.utils.context.Cardinality"], [176, "nsaph_utils.utils.context.Cardinality"], [244, "nsaph_utils.utils.context.Cardinality"]], "daily (aggregation attribute)": [[144, "epa.aqs_ds_def.Aggregation.DAILY"]], "max_temp (parameter attribute)": [[144, "epa.aqs_ds_def.Parameter.MAX_TEMP"]], "min_temp (parameter attribute)": [[144, "epa.aqs_ds_def.Parameter.MIN_TEMP"]], "parameter (class in epa.aqs_ds_def)": [[144, "epa.aqs_ds_def.Parameter"]], "aggregation (aqscontext attribute)": [[144, "epa.aqs_ds_def.AQSContext.aggregation"]], "compress (aqscontext attribute)": [[144, "epa.aqs_ds_def.AQSContext.compress"]], "destination (aqscontext attribute)": [[144, "epa.aqs_ds_def.AQSContext.destination"]], "enum() (aqscontext class method)": [[144, "epa.aqs_ds_def.AQSContext.enum"]], "epa.aqs_ds_def": [[144, "module-epa.aqs_ds_def"]], "merge_years (aqscontext attribute)": [[144, "epa.aqs_ds_def.AQSContext.merge_years"]], "parameters (aqscontext attribute)": [[144, "epa.aqs_ds_def.AQSContext.parameters"]], "validate() (aqscontext method)": [[144, "epa.aqs_ds_def.AQSContext.validate"]], "years (aqscontext attribute)": [[144, "epa.aqs_ds_def.AQSContext.years"]], "epa.aqs_expand": [[145, "module-epa.aqs_expand"]], "expand_data() (in module epa.aqs_expand)": [[145, "epa.aqs_expand.expand_data"]], "csvfilewrapper (class in nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.CSVFileWrapper"], [250, "nsaph_utils.utils.io_utils.CSVFileWrapper"]], "csvwriter (class in nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.CSVWriter"], [250, "nsaph_utils.utils.io_utils.CSVWriter"]], "collector (class in nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.Collector"], [250, "nsaph_utils.utils.io_utils.Collector"]], "listcollector (class in nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.ListCollector"], [250, "nsaph_utils.utils.io_utils.ListCollector"]], "add_monitor_key() (in module epa.aqs_tools)": [[146, "epa.aqs_tools.add_monitor_key"]], "as_content() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.as_content"], [250, "nsaph_utils.utils.io_utils.as_content"]], "as_csv_reader() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.as_csv_reader"], [250, "nsaph_utils.utils.io_utils.as_csv_reader"]], "as_stream() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.as_stream"], [250, "nsaph_utils.utils.io_utils.as_stream"]], "basename() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.basename"], [250, "nsaph_utils.utils.io_utils.basename"]], "check_http_response() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.check_http_response"], [250, "nsaph_utils.utils.io_utils.check_http_response"]], "collect_annual_downloads() (in module epa.aqs_tools)": [[146, "epa.aqs_tools.collect_annual_downloads"]], "collect_aqs_download_tasks() (in module epa.aqs_tools)": [[146, "epa.aqs_tools.collect_aqs_download_tasks"]], "collect_daily_downloads() (in module epa.aqs_tools)": [[146, "epa.aqs_tools.collect_daily_downloads"]], "destination_path() (in module epa.aqs_tools)": [[146, "epa.aqs_tools.destination_path"]], "download() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.download"], [250, "nsaph_utils.utils.io_utils.download"]], "download_data() (in module epa.aqs_tools)": [[146, "epa.aqs_tools.download_data"]], "epa.aqs_tools": [[146, "module-epa.aqs_tools"]], "file_as_csv_reader() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.file_as_csv_reader"], [250, "nsaph_utils.utils.io_utils.file_as_csv_reader"]], "file_as_stream() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.file_as_stream"], [250, "nsaph_utils.utils.io_utils.file_as_stream"]], "fopen() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.fopen"], [250, "nsaph_utils.utils.io_utils.fopen"]], "get_entries() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.get_entries"], [250, "nsaph_utils.utils.io_utils.get_entries"]], "get_readme() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.get_readme"], [250, "nsaph_utils.utils.io_utils.get_readme"]], "is_dir() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.is_dir"], [250, "nsaph_utils.utils.io_utils.is_dir"]], "is_downloaded() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.is_downloaded"], [250, "nsaph_utils.utils.io_utils.is_downloaded"]], "is_readme() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.is_readme"], [250, "nsaph_utils.utils.io_utils.is_readme"]], "nsaph_utils.utils.io_utils": [[146, "module-nsaph_utils.utils.io_utils"], [250, "module-nsaph_utils.utils.io_utils"]], "transfer() (in module epa.aqs_tools)": [[146, "epa.aqs_tools.transfer"]], "write_csv() (in module nsaph_utils.utils.io_utils)": [[146, "nsaph_utils.utils.io_utils.write_csv"], [250, "nsaph_utils.utils.io_utils.write_csv"]], "epaconfig (class in epa.registry)": [[147, "epa.registry.EPAConfig"]], "registry (class in epa.registry)": [[147, "epa.registry.Registry"]], "create_domain_yaml() (registry static method)": [[147, "epa.registry.Registry.create_domain_yaml"]], "create_table_yaml() (registry method)": [[147, "epa.registry.Registry.create_table_yaml"]], "data (epaconfig attribute)": [[147, "epa.registry.EPAConfig.data"]], "epa.registry": [[147, "module-epa.registry"]], "output (epaconfig attribute)": [[147, "epa.registry.EPAConfig.output"]], "table (epaconfig attribute)": [[147, "epa.registry.EPAConfig.table"]], "gisannotator (class in nsaph_gis.annotator)": [[166, "nsaph_gis.annotator.GISAnnotator"]], "join() (gisannotator method)": [[166, "nsaph_gis.annotator.GISAnnotator.join"]], "matches() (gisannotator static method)": [[166, "nsaph_gis.annotator.GISAnnotator.matches"]], "nsaph_gis.annotator": [[166, "module-nsaph_gis.annotator"]], "record (class in nsaph_gis.compute_shape)": [[167, "nsaph_gis.compute_shape.Record"]], "statscounter (class in nsaph_gis.compute_shape)": [[167, "nsaph_gis.compute_shape.StatsCounter"]], "mean (record attribute)": [[167, "nsaph_gis.compute_shape.Record.mean"]], "nsaph_gis.compute_shape": [[167, "module-nsaph_gis.compute_shape"]], "process() (statscounter class method)": [[167, "nsaph_gis.compute_shape.StatsCounter.process"]], "prop (record attribute)": [[167, "nsaph_gis.compute_shape.Record.prop"]], "geography (class in nsaph_gis.constants)": [[168, "nsaph_gis.constants.Geography"], [175, "nsaph_gis.constants.Geography"]], "rasterizationstrategy (class in nsaph_gis.constants)": [[168, "nsaph_gis.constants.RasterizationStrategy"], [220, "nsaph_gis.constants.RasterizationStrategy"]], "all_touched (rasterizationstrategy attribute)": [[168, "nsaph_gis.constants.RasterizationStrategy.all_touched"], [220, "nsaph_gis.constants.RasterizationStrategy.all_touched"]], "combined (rasterizationstrategy attribute)": [[168, "nsaph_gis.constants.RasterizationStrategy.combined"], [220, "nsaph_gis.constants.RasterizationStrategy.combined"]], "county (geography attribute)": [[168, "nsaph_gis.constants.Geography.county"]], "custom (geography attribute)": [[168, "nsaph_gis.constants.Geography.custom"]], "default (rasterizationstrategy attribute)": [[168, "nsaph_gis.constants.RasterizationStrategy.default"], [220, "nsaph_gis.constants.RasterizationStrategy.default"]], "downscale (rasterizationstrategy attribute)": [[168, "nsaph_gis.constants.RasterizationStrategy.downscale"], [220, "nsaph_gis.constants.RasterizationStrategy.downscale"]], "nsaph_gis.constants": [[168, "module-nsaph_gis.constants"]], "zip (geography attribute)": [[168, "nsaph_gis.constants.Geography.zip"]], "county_template (gisdownloader attribute)": [[169, "nsaph_gis.downloader.GISDownloader.COUNTY_TEMPLATE"]], "gisdownloader (class in nsaph_gis.downloader)": [[169, "nsaph_gis.downloader.GISDownloader"]], "zip_template (gisdownloader attribute)": [[169, "nsaph_gis.downloader.GISDownloader.ZIP_TEMPLATE"]], "download_county() (gisdownloader class method)": [[169, "nsaph_gis.downloader.GISDownloader.download_county"]], "download_shapes() (gisdownloader class method)": [[169, "nsaph_gis.downloader.GISDownloader.download_shapes"]], "download_zip() (gisdownloader class method)": [[169, "nsaph_gis.downloader.GISDownloader.download_zip"]], "nsaph_gis.downloader": [[169, "module-nsaph_gis.downloader"]], "completely_masked (pointinraster attribute)": [[170, "nsaph_gis.geometry.PointInRaster.COMPLETELY_MASKED"]], "partially_masked (pointinraster attribute)": [[170, "nsaph_gis.geometry.PointInRaster.PARTIALLY_MASKED"]], "pointinraster (class in nsaph_gis.geometry)": [[170, "nsaph_gis.geometry.PointInRaster"]], "array() (pointinraster method)": [[170, "nsaph_gis.geometry.PointInRaster.array"]], "bilinear() (pointinraster method)": [[170, "nsaph_gis.geometry.PointInRaster.bilinear"]], "is_masked() (pointinraster method)": [[170, "nsaph_gis.geometry.PointInRaster.is_masked"]], "nsaph_gis.geometry": [[170, "module-nsaph_gis.geometry"]], "window (pointinraster attribute)": [[170, "nsaph_gis.geometry.PointInRaster.window"]], "x (pointinraster attribute)": [[170, "nsaph_gis.geometry.PointInRaster.x"]], "y (pointinraster attribute)": [[170, "nsaph_gis.geometry.PointInRaster.y"]], "gridmetvariable (class in gridmet.config)": [[172, "gridmet.config.GridmetVariable"], [181, "gridmet.config.GridmetVariable"]], "bi (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.bi"], [181, "gridmet.config.GridmetVariable.bi"]], "erc (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.erc"], [181, "gridmet.config.GridmetVariable.erc"]], "etr (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.etr"], [181, "gridmet.config.GridmetVariable.etr"]], "fm100 (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.fm100"], [181, "gridmet.config.GridmetVariable.fm100"]], "fm1000 (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.fm1000"], [181, "gridmet.config.GridmetVariable.fm1000"]], "pet (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.pet"], [181, "gridmet.config.GridmetVariable.pet"]], "pr (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.pr"], [181, "gridmet.config.GridmetVariable.pr"]], "rmax (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.rmax"], [181, "gridmet.config.GridmetVariable.rmax"]], "rmin (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.rmin"], [181, "gridmet.config.GridmetVariable.rmin"]], "sph (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.sph"], [181, "gridmet.config.GridmetVariable.sph"]], "srad (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.srad"], [181, "gridmet.config.GridmetVariable.srad"]], "th (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.th"], [181, "gridmet.config.GridmetVariable.th"]], "tmmn (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.tmmn"], [181, "gridmet.config.GridmetVariable.tmmn"]], "tmmx (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.tmmx"], [181, "gridmet.config.GridmetVariable.tmmx"]], "vpd (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.vpd"], [181, "gridmet.config.GridmetVariable.vpd"]], "vs (gridmetvariable attribute)": [[172, "gridmet.config.GridmetVariable.vs"], [181, "gridmet.config.GridmetVariable.vs"]], "gridmetcontext (class in gridmet.config)": [[176, "gridmet.config.GridmetContext"], [181, "gridmet.config.GridmetContext"]], "compress (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.compress"]], "coordinates (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.coordinates"], [181, "gridmet.config.GridmetContext.coordinates"]], "dates (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.dates"], [181, "gridmet.config.GridmetContext.dates"]], "destination (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.destination"], [181, "gridmet.config.GridmetContext.destination"]], "enum() (gridmetcontext class method)": [[176, "gridmet.config.GridmetContext.enum"]], "geography (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.geography"], [181, "gridmet.config.GridmetContext.geography"]], "metadata (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.metadata"], [181, "gridmet.config.GridmetContext.metadata"]], "points (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.points"], [181, "gridmet.config.GridmetContext.points"]], "raw_downloads (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.raw_downloads"], [181, "gridmet.config.GridmetContext.raw_downloads"]], "shapes (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.shapes"], [181, "gridmet.config.GridmetContext.shapes"]], "shapes_dir (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.shapes_dir"], [181, "gridmet.config.GridmetContext.shapes_dir"]], "strategy (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.strategy"], [181, "gridmet.config.GridmetContext.strategy"]], "variables (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.variables"], [181, "gridmet.config.GridmetContext.variables"]], "years (gridmetcontext attribute)": [[176, "gridmet.config.GridmetContext.years"]], "computegridmettask (class in gridmet.task)": [[177, "gridmet.task.ComputeGridmetTask"], [189, "gridmet.task.ComputeGridmetTask"]], "computepointstask (class in gridmet.task)": [[177, "gridmet.task.ComputePointsTask"], [189, "gridmet.task.ComputePointsTask"]], "computeshapestask (class in gridmet.task)": [[177, "gridmet.task.ComputeShapesTask"], [189, "gridmet.task.ComputeShapesTask"]], "downloadgridmettask (class in gridmet.task)": [[177, "gridmet.task.DownloadGridmetTask"], [189, "gridmet.task.DownloadGridmetTask"]], "gridmettask (class in gridmet.task)": [[177, "gridmet.task.GridmetTask"], [189, "gridmet.task.GridmetTask"]], "compute_one_day() (computegridmettask method)": [[177, "gridmet.task.ComputeGridmetTask.compute_one_day"], [189, "gridmet.task.ComputeGridmetTask.compute_one_day"]], "compute_one_day() (computepointstask method)": [[177, "gridmet.task.ComputePointsTask.compute_one_day"], [189, "gridmet.task.ComputePointsTask.compute_one_day"]], "compute_one_day() (computeshapestask method)": [[177, "gridmet.task.ComputeShapesTask.compute_one_day"], [189, "gridmet.task.ComputeShapesTask.compute_one_day"]], "destination_file_name() (gridmettask class method)": [[177, "gridmet.task.GridmetTask.destination_file_name"], [189, "gridmet.task.GridmetTask.destination_file_name"]], "execute() (computegridmettask method)": [[177, "gridmet.task.ComputeGridmetTask.execute"], [189, "gridmet.task.ComputeGridmetTask.execute"]], "execute() (computepointstask method)": [[177, "gridmet.task.ComputePointsTask.execute"], [189, "gridmet.task.ComputePointsTask.execute"]], "execute() (downloadgridmettask method)": [[177, "gridmet.task.DownloadGridmetTask.execute"], [189, "gridmet.task.DownloadGridmetTask.execute"]], "execute() (gridmettask method)": [[177, "gridmet.task.GridmetTask.execute"], [189, "gridmet.task.GridmetTask.execute"]], "find_shape_file() (gridmettask class method)": [[177, "gridmet.task.GridmetTask.find_shape_file"], [189, "gridmet.task.GridmetTask.find_shape_file"]], "get_url() (downloadgridmettask class method)": [[177, "gridmet.task.DownloadGridmetTask.get_url"], [189, "gridmet.task.DownloadGridmetTask.get_url"]], "target() (downloadgridmettask method)": [[177, "gridmet.task.DownloadGridmetTask.target"], [189, "gridmet.task.DownloadGridmetTask.target"]], "disaggregate() (in module gridmet.gridmet_tools)": [[178, "gridmet.gridmet_tools.disaggregate"], [185, "gridmet.gridmet_tools.disaggregate"]], "find_shape_file() (in module gridmet.gridmet_tools)": [[178, "gridmet.gridmet_tools.find_shape_file"], [185, "gridmet.gridmet_tools.find_shape_file"]], "get_affine_transform() (in module gridmet.gridmet_tools)": [[178, "gridmet.gridmet_tools.get_affine_transform"], [185, "gridmet.gridmet_tools.get_affine_transform"]], "get_atmos_url() (in module gridmet.gridmet_tools)": [[178, "gridmet.gridmet_tools.get_atmos_url"], [185, "gridmet.gridmet_tools.get_atmos_url"]], "get_days() (in module gridmet.gridmet_tools)": [[178, "gridmet.gridmet_tools.get_days"], [185, "gridmet.gridmet_tools.get_days"]], "get_nkn_url() (in module gridmet.gridmet_tools)": [[178, "gridmet.gridmet_tools.get_nkn_url"], [185, "gridmet.gridmet_tools.get_nkn_url"]], "get_variable() (in module gridmet.gridmet_tools)": [[178, "gridmet.gridmet_tools.get_variable"], [185, "gridmet.gridmet_tools.get_variable"]], "gridmet.gridmet_tools": [[178, "module-gridmet.gridmet_tools"], [185, "module-gridmet.gridmet_tools"]], "aggregator (class in pollution.aggregator)": [[180, "pollution.aggregator.Aggregator"]], "collect_data() (aggregator method)": [[180, "pollution.aggregator.Aggregator.collect_data"]], "compute() (aggregator method)": [[180, "pollution.aggregator.Aggregator.compute"]], "execute() (aggregator method)": [[180, "pollution.aggregator.Aggregator.execute"]], "pollution.aggregator": [[180, "module-pollution.aggregator"]], "prepare() (aggregator method)": [[180, "pollution.aggregator.Aggregator.prepare"]], "write_header() (aggregator method)": [[180, "pollution.aggregator.Aggregator.write_header"]], "datefilter (class in gridmet.config)": [[181, "gridmet.config.DateFilter"]], "shape (class in gridmet.config)": [[181, "gridmet.config.Shape"], [219, "gridmet.config.Shape"]], "accept() (datefilter method)": [[181, "gridmet.config.DateFilter.accept"]], "gridmet.config": [[181, "module-gridmet.config"]], "point (shape attribute)": [[181, "gridmet.config.Shape.point"], [219, "gridmet.config.Shape.point"]], "polygon (shape attribute)": [[181, "gridmet.config.Shape.polygon"], [219, "gridmet.config.Shape.polygon"]], "validate() (gridmetcontext method)": [[181, "gridmet.config.GridmetContext.validate"]], "check_shape_file() (in module gridmet.gridmet_tools)": [[185, "gridmet.gridmet_tools.check_shape_file"]], "get_address() (in module gridmet.gridmet_tools)": [[185, "gridmet.gridmet_tools.get_address"]], "gridmet (class in gridmet.launcher)": [[186, "gridmet.launcher.Gridmet"]], "collect_tasks() (gridmet method)": [[186, "gridmet.launcher.Gridmet.collect_tasks"]], "execute_sequentially() (gridmet method)": [[186, "gridmet.launcher.Gridmet.execute_sequentially"]], "gridmet.launcher": [[186, "module-gridmet.launcher"]], "registry (class in gridmet.registry)": [[187, "gridmet.registry.Registry"]], "create_yaml() (registry method)": [[187, "gridmet.registry.Registry.create_yaml"]], "gridmet.registry": [[187, "module-gridmet.registry"]], "download_shapes() (in module gridmet.shapes)": [[188, "gridmet.shapes.download_shapes"]], "gridmet.shapes": [[188, "module-gridmet.shapes"]], "block_size (downloadgridmettask attribute)": [[189, "gridmet.task.DownloadGridmetTask.BLOCK_SIZE"]], "csvwriter (class in gridmet.task)": [[189, "gridmet.task.CSVWriter"]], "collector (class in gridmet.task)": [[189, "gridmet.task.Collector"]], "listcollector (class in gridmet.task)": [[189, "gridmet.task.ListCollector"]], "parallel (class in gridmet.task)": [[189, "gridmet.task.Parallel"]], "bands (parallel attribute)": [[189, "gridmet.task.Parallel.bands"]], "collect_data() (computegridmettask method)": [[189, "gridmet.task.ComputeGridmetTask.collect_data"]], "count_lines() (in module gridmet.task)": [[189, "gridmet.task.count_lines"]], "days (parallel attribute)": [[189, "gridmet.task.Parallel.days"]], "flush() (csvwriter method)": [[189, "gridmet.task.CSVWriter.flush"], [250, "nsaph_utils.utils.io_utils.CSVWriter.flush"]], "flush() (collector method)": [[189, "gridmet.task.Collector.flush"], [250, "nsaph_utils.utils.io_utils.Collector.flush"]], "force_standard_api (computepointstask attribute)": [[189, "gridmet.task.ComputePointsTask.force_standard_api"]], "get_days() (computegridmettask method)": [[189, "gridmet.task.ComputeGridmetTask.get_days"]], "get_key() (computegridmettask method)": [[189, "gridmet.task.ComputeGridmetTask.get_key"]], "get_key() (computepointstask method)": [[189, "gridmet.task.ComputePointsTask.get_key"]], "get_key() (computeshapestask method)": [[189, "gridmet.task.ComputeShapesTask.get_key"]], "get_result() (listcollector method)": [[189, "gridmet.task.ListCollector.get_result"], [250, "nsaph_utils.utils.io_utils.ListCollector.get_result"]], "get_variable() (computegridmettask class method)": [[189, "gridmet.task.ComputeGridmetTask.get_variable"]], "gridmet.task": [[189, "module-gridmet.task"]], "make_point() (computepointstask method)": [[189, "gridmet.task.ComputePointsTask.make_point"]], "origin (computegridmettask attribute)": [[189, "gridmet.task.ComputeGridmetTask.origin"]], "points (parallel attribute)": [[189, "gridmet.task.Parallel.points"]], "prepare() (computegridmettask method)": [[189, "gridmet.task.ComputeGridmetTask.prepare"]], "prepare() (computepointstask method)": [[189, "gridmet.task.ComputePointsTask.prepare"]], "quote() (in module gridmet.task)": [[189, "gridmet.task.quote"]], "to_date() (computegridmettask method)": [[189, "gridmet.task.ComputeGridmetTask.to_date"]], "writerow() (csvwriter method)": [[189, "gridmet.task.CSVWriter.writerow"], [250, "nsaph_utils.utils.io_utils.CSVWriter.writerow"]], "writerow() (collector method)": [[189, "gridmet.task.Collector.writerow"], [250, "nsaph_utils.utils.io_utils.Collector.writerow"]], "writerow() (listcollector method)": [[189, "gridmet.task.ListCollector.writerow"], [250, "nsaph_utils.utils.io_utils.ListCollector.writerow"]], "wustlfile (class in pollution.wustl_file_processor)": [[191, "pollution.wustl_file_processor.WUSTLFile"]], "execute() (wustlfile method)": [[191, "pollution.wustl_file_processor.WUSTLFile.execute"]], "parse_file_name() (wustlfile method)": [[191, "pollution.wustl_file_processor.WUSTLFile.parse_file_name"]], "pollution.wustl_file_processor": [[191, "module-pollution.wustl_file_processor"]], "prepare() (wustlfile method)": [[191, "pollution.wustl_file_processor.WUSTLFile.prepare"]], "nsaph_utils.dataset": [[240, "module-nsaph_utils.DataSet"]], "nsaph_utils.utils.cli": [[241, "module-nsaph_utils.utils.cli"]], "modulecollector (class in nsaph_utils.docutils.collector)": [[242, "nsaph_utils.docutils.collector.ModuleCollector"]], "collect() (modulecollector method)": [[242, "nsaph_utils.docutils.collector.ModuleCollector.collect"]], "main() (in module nsaph_utils.docutils.collector)": [[242, "nsaph_utils.docutils.collector.main"]], "nsaph_utils.docutils.collector": [[242, "module-nsaph_utils.docutils.collector"]], "add_to() (argument method)": [[244, "nsaph_utils.utils.context.Argument.add_to"]], "default() (context method)": [[244, "nsaph_utils.utils.context.Context.default"]], "get_action() (argument method)": [[244, "nsaph_utils.utils.context.Argument.get_action"]], "get_help() (argument method)": [[244, "nsaph_utils.utils.context.Argument.get_help"]], "get_nargs() (argument method)": [[244, "nsaph_utils.utils.context.Argument.get_nargs"]], "instantiate() (context method)": [[244, "nsaph_utils.utils.context.Context.instantiate"]], "is_required() (argument method)": [[244, "nsaph_utils.utils.context.Argument.is_required"]], "multiple (cardinality attribute)": [[244, "nsaph_utils.utils.context.Cardinality.multiple"]], "nsaph_utils.utils.context": [[244, "module-nsaph_utils.utils.context"]], "set_empty_args() (context method)": [[244, "nsaph_utils.utils.context.Context.set_empty_args"]], "single (cardinality attribute)": [[244, "nsaph_utils.utils.context.Cardinality.single"]], "get_header_level() (in module nsaph_utils.docutils.copy_section)": [[245, "nsaph_utils.docutils.copy_section.get_header_level"]], "insert_section() (in module nsaph_utils.docutils.copy_section)": [[245, "nsaph_utils.docutils.copy_section.insert_section"]], "main() (in module nsaph_utils.docutils.copy_section)": [[245, "nsaph_utils.docutils.copy_section.main"]], "nsaph_utils.docutils.copy_section": [[245, "module-nsaph_utils.docutils.copy_section"]], "read_section() (in module nsaph_utils.docutils.copy_section)": [[245, "nsaph_utils.docutils.copy_section.read_section"]], "cwlparser (class in nsaph_utils.docutils.cwl2md)": [[246, "nsaph_utils.docutils.cwl2md.CWLParser"]], "main() (in module nsaph_utils.docutils.cwl2md)": [[246, "nsaph_utils.docutils.cwl2md.main"]], "nsaph_utils.docutils.cwl2md": [[246, "module-nsaph_utils.docutils.cwl2md"]], "parse() (cwlparser method)": [[246, "nsaph_utils.docutils.cwl2md.CWLParser.parse"]], "ftsparseexception": [[247, "nsaph_utils.utils.fwf.FTSParseException"]], "fwfcolumn (class in nsaph_utils.utils.fwf)": [[247, "nsaph_utils.utils.fwf.FWFColumn"]], "fwfmeta (class in nsaph_utils.utils.fwf)": [[247, "nsaph_utils.utils.fwf.FWFMeta"]], "fwfreader (class in nsaph_utils.utils.fwf)": [[247, "nsaph_utils.utils.fwf.FWFReader"]], "bad_lines (fwfreader attribute)": [[247, "nsaph_utils.utils.fwf.FWFReader.bad_lines"]], "close() (fwfreader method)": [[247, "nsaph_utils.utils.fwf.FWFReader.close"]], "column_names() (fwfreader method)": [[247, "nsaph_utils.utils.fwf.FWFReader.column_names"]], "columns (fwfmeta attribute)": [[247, "nsaph_utils.utils.fwf.FWFMeta.columns"]], "d (fwfcolumn attribute)": [[247, "nsaph_utils.utils.fwf.FWFColumn.d"]], "end (fwfcolumn attribute)": [[247, "nsaph_utils.utils.fwf.FWFColumn.end"]], "good_lines (fwfreader attribute)": [[247, "nsaph_utils.utils.fwf.FWFReader.good_lines"]], "length (fwfcolumn attribute)": [[247, "nsaph_utils.utils.fwf.FWFColumn.length"]], "name (fwfcolumn attribute)": [[247, "nsaph_utils.utils.fwf.FWFColumn.name"]], "ncol (fwfmeta attribute)": [[247, "nsaph_utils.utils.fwf.FWFMeta.ncol"]], "next() (fwfreader method)": [[247, "nsaph_utils.utils.fwf.FWFReader.next"]], "nrows (fwfmeta attribute)": [[247, "nsaph_utils.utils.fwf.FWFMeta.nrows"]], "nsaph_utils.utils.fwf": [[247, "module-nsaph_utils.utils.fwf"]], "on_parse_exception() (fwfreader method)": [[247, "nsaph_utils.utils.fwf.FWFReader.on_parse_exception"]], "open() (fwfreader method)": [[247, "nsaph_utils.utils.fwf.FWFReader.open"]], "ord (fwfcolumn attribute)": [[247, "nsaph_utils.utils.fwf.FWFColumn.ord"]], "path (fwfmeta attribute)": [[247, "nsaph_utils.utils.fwf.FWFMeta.path"]], "read_record() (fwfreader method)": [[247, "nsaph_utils.utils.fwf.FWFReader.read_record"]], "rlen (fwfmeta attribute)": [[247, "nsaph_utils.utils.fwf.FWFMeta.rlen"]], "size (fwfmeta attribute)": [[247, "nsaph_utils.utils.fwf.FWFMeta.size"]], "start (fwfcolumn attribute)": [[247, "nsaph_utils.utils.fwf.FWFColumn.start"]], "type (fwfcolumn attribute)": [[247, "nsaph_utils.utils.fwf.FWFColumn.type"]], "validate() (fwfreader method)": [[247, "nsaph_utils.utils.fwf.FWFReader.validate"]], "interpolate() (in module nsaph_utils.interpolation.interface)": [[248, "nsaph_utils.interpolation.interface.interpolate"]], "nsaph_utils.interpolation.interface": [[248, "module-nsaph_utils.interpolation.interface"]], "calc_weights() (in module nsaph_utils.interpolation.interpolate_ma)": [[249, "nsaph_utils.interpolation.interpolate_ma.calc_weights"]], "get_indices() (in module nsaph_utils.interpolation.interpolate_ma)": [[249, "nsaph_utils.interpolation.interpolate_ma.get_indices"]], "interpolate_ma() (in module nsaph_utils.interpolation.interpolate_ma)": [[249, "nsaph_utils.interpolation.interpolate_ma.interpolate_ma"]], "nsaph_utils.interpolation.interpolate_ma": [[249, "module-nsaph_utils.interpolation.interpolate_ma"]], "downloadtask (class in nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.DownloadTask"]], "na (specialvalues attribute)": [[250, "nsaph_utils.utils.io_utils.SpecialValues.NA"]], "nan (specialvalues attribute)": [[250, "nsaph_utils.utils.io_utils.SpecialValues.NaN"]], "specialvalues (class in nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.SpecialValues"]], "add_url() (downloadtask method)": [[250, "nsaph_utils.utils.io_utils.DownloadTask.add_url"]], "as_dict() (in module nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.as_dict"]], "count_lines() (in module nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.count_lines"]], "dataframe2csv() (in module nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.dataframe2csv"]], "fst2csv() (in module nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.fst2csv"]], "is_missing() (specialvalues class method)": [[250, "nsaph_utils.utils.io_utils.SpecialValues.is_missing"]], "is_untyped() (specialvalues class method)": [[250, "nsaph_utils.utils.io_utils.SpecialValues.is_untyped"]], "is_up_to_date() (downloadtask method)": [[250, "nsaph_utils.utils.io_utils.DownloadTask.is_up_to_date"]], "is_yaml_or_json() (in module nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.is_yaml_or_json"]], "reset() (downloadtask method)": [[250, "nsaph_utils.utils.io_utils.DownloadTask.reset"]], "sizeof_fmt() (in module nsaph_utils.utils.io_utils)": [[250, "nsaph_utils.utils.io_utils.sizeof_fmt"]], "mdcreator (class in nsaph_utils.docutils.md_creator)": [[251, "nsaph_utils.docutils.md_creator.MDCreator"]], "add_header() (mdcreator method)": [[251, "nsaph_utils.docutils.md_creator.MDCreator.add_header"]], "add_image() (mdcreator method)": [[251, "nsaph_utils.docutils.md_creator.MDCreator.add_image"]], "add_table() (mdcreator method)": [[251, "nsaph_utils.docutils.md_creator.MDCreator.add_table"]], "add_text() (mdcreator method)": [[251, "nsaph_utils.docutils.md_creator.MDCreator.add_text"]], "nsaph_utils.docutils.md_creator": [[251, "module-nsaph_utils.docutils.md_creator"]], "save() (mdcreator method)": [[251, "nsaph_utils.docutils.md_creator.MDCreator.save"]], "fstreader (class in nsaph_utils.utils.pyfst)": [[252, "nsaph_utils.utils.pyfst.FSTReader"]], "choose_cran_mirror() (in module nsaph_utils.utils.pyfst)": [[252, "nsaph_utils.utils.pyfst.choose_cran_mirror"]], "close() (fstreader method)": [[252, "nsaph_utils.utils.pyfst.FSTReader.close"]], "current() (fstreader method)": [[252, "nsaph_utils.utils.pyfst.FSTReader.current"]], "current_mapping() (fstreader method)": [[252, "nsaph_utils.utils.pyfst.FSTReader.current_mapping"]], "current_row() (fstreader method)": [[252, "nsaph_utils.utils.pyfst.FSTReader.current_row"]], "ensure_packages() (in module nsaph_utils.utils.pyfst)": [[252, "nsaph_utils.utils.pyfst.ensure_packages"]], "nsaph_utils.utils.pyfst": [[252, "module-nsaph_utils.utils.pyfst"]], "open() (fstreader method)": [[252, "nsaph_utils.utils.pyfst.FSTReader.open"]], "read_fst() (in module nsaph_utils.utils.pyfst)": [[252, "nsaph_utils.utils.pyfst.read_fst"]], "read_next() (fstreader method)": [[252, "nsaph_utils.utils.pyfst.FSTReader.read_next"]], "rewind() (fstreader method)": [[252, "nsaph_utils.utils.pyfst.FSTReader.rewind"]], "vector2list() (in module nsaph_utils.utils.pyfst)": [[252, "nsaph_utils.utils.pyfst.vector2list"]], "madeupcontext (class in tests.test_cli_context)": [[254, "tests.test_cli_context.MadeUpContext"]], "mytestcase (class in tests.test_cli_context)": [[254, "tests.test_cli_context.MyTestCase"]], "test_custom_validate() (mytestcase method)": [[254, "tests.test_cli_context.MyTestCase.test_custom_validate"]], "test_default_context() (mytestcase method)": [[254, "tests.test_cli_context.MyTestCase.test_default_context"]], "tests.test_cli_context": [[254, "module-tests.test_cli_context"]], "validate() (madeupcontext method)": [[254, "tests.test_cli_context.MadeUpContext.validate"]], "interpolationtest (class in tests.test_interpolation)": [[255, "tests.test_interpolation.InterpolationTest"]], "test_ma_interpolation() (interpolationtest method)": [[255, "tests.test_interpolation.InterpolationTest.test_ma_interpolation"]], "tests.test_interpolation": [[255, "module-tests.test_interpolation"]], "qctests (class in tests.test_qc)": [[256, "tests.test_qc.QCTests"]], "test_tests() (qctests method)": [[256, "tests.test_qc.QCTests.test_tests"]], "tests.test_qc": [[256, "module-tests.test_qc"]], "condition (class in nsaph_utils.qc.tester)": [[257, "nsaph_utils.qc.tester.Condition"]], "expectationerror": [[257, "nsaph_utils.qc.tester.ExpectationError"]], "severity (class in nsaph_utils.qc.tester)": [[257, "nsaph_utils.qc.tester.Severity"]], "test (class in nsaph_utils.qc.tester)": [[257, "nsaph_utils.qc.tester.Test"]], "tester (class in nsaph_utils.qc.tester)": [[257, "nsaph_utils.qc.tester.Tester"]], "add() (tester method)": [[257, "nsaph_utils.qc.tester.Tester.add"]], "check() (test method)": [[257, "nsaph_utils.qc.tester.Test.check"]], "check() (tester method)": [[257, "nsaph_utils.qc.tester.Tester.check"]], "count_missing (condition attribute)": [[257, "nsaph_utils.qc.tester.Condition.count_missing"]], "critical (severity attribute)": [[257, "nsaph_utils.qc.tester.Severity.critical"]], "data_type (condition attribute)": [[257, "nsaph_utils.qc.tester.Condition.data_type"]], "debug (severity attribute)": [[257, "nsaph_utils.qc.tester.Severity.debug"]], "error (severity attribute)": [[257, "nsaph_utils.qc.tester.Severity.error"]], "greater_than (condition attribute)": [[257, "nsaph_utils.qc.tester.Condition.greater_than"]], "info (severity attribute)": [[257, "nsaph_utils.qc.tester.Severity.info"]], "less_than (condition attribute)": [[257, "nsaph_utils.qc.tester.Condition.less_than"]], "load_yaml() (tester method)": [[257, "nsaph_utils.qc.tester.Tester.load_yaml"]], "no_missing (condition attribute)": [[257, "nsaph_utils.qc.tester.Condition.no_missing"]], "nsaph_utils.qc.tester": [[257, "module-nsaph_utils.qc.tester"]], "val (test attribute)": [[257, "nsaph_utils.qc.tester.Test.val"]], "warning (severity attribute)": [[257, "nsaph_utils.qc.tester.Severity.warning"]]}})